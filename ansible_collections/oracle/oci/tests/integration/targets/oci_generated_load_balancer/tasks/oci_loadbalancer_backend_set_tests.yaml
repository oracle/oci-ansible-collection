---
- block:
  - name: Create dependency load_balancer with required parameters
    oci_loadbalancer_load_balancer:
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_backend_set_create_dependency_load_balancer_compartment_id, omit) }}"
      display_name: "{{ ('example_load_balancer' + random_suffix_1024) | oracle.oci.override(test_backend_set_create_dependency_load_balancer_display_name, omit) }}"
      shape_name: "{{ '100Mbps' | oracle.oci.override(test_backend_set_create_dependency_load_balancer_shape_name, omit) }}"
      subnet_ids: "{{ [ 'null' ] | oracle.oci.override(test_backend_set_create_dependency_load_balancer_subnet_ids, omit) }}"
    register: result
    when: skip_backend_set_create_dependency_load_balancer_test is not defined and skip_backend_set_dependencies is not defined
  - name: Assert resource was created
    assert:
      that:
        - result.changed == True
    when: skip_backend_set_create_dependency_load_balancer_test is not defined and skip_backend_set_dependencies is not defined
  - set_fact:
      dependency_load_balancer: "{{ result.load_balancer }}"
      dependency_load_balancer_id: "{{ result.load_balancer.id }}"
    when: skip_backend_set_create_dependency_load_balancer_test is not defined and skip_backend_set_dependencies is not defined
  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ backend_set_create_dependency_load_balancer_custom_assertions }}"
    when: backend_set_create_dependency_load_balancer_custom_assertions is defined

# ==================================================================================================== #

  - name: Create dependency certificate with required parameters
    oci_loadbalancer_certificate:
      certificate_name: "{{ 'example_certificate_bundle' | oracle.oci.override(test_backend_set_create_dependency_certificate_certificate_name, omit) }}"
      load_balancer_id: "{{ dependency_load_balancer_id | oracle.oci.override(test_backend_set_create_dependency_certificate_load_balancer_id, omit) }}"
    register: result
    when: skip_backend_set_create_dependency_certificate_test is not defined and skip_backend_set_dependencies is not defined
  - name: Assert resource was created
    assert:
      that:
        - result.changed == True
    when: skip_backend_set_create_dependency_certificate_test is not defined and skip_backend_set_dependencies is not defined
  - set_fact:
      dependency_certificate: "{{ result.certificate }}"
      dependency_certificate_name: "{{ result.certificate.certificate_name }}"
    when: skip_backend_set_create_dependency_certificate_test is not defined and skip_backend_set_dependencies is not defined
  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ backend_set_create_dependency_certificate_custom_assertions }}"
    when: backend_set_create_dependency_certificate_custom_assertions is defined

# ==================================================================================================== #

  - set_fact:
      test_backend_set_create_required_health_checker:
        protocol: "{{ 'HTTP' | oracle.oci.override(test_backend_set_create_required_health_checker_protocol, omit) }}"
        url_path: "{{ '/healthcheck' | oracle.oci.override(test_backend_set_create_required_health_checker_url_path, omit) }}"
        port: "{{ 8080 | oracle.oci.override(test_backend_set_create_required_health_checker_port, omit) }}"
        return_code: "{{ 200 | oracle.oci.override(test_backend_set_create_required_health_checker_return_code, omit) }}"
        retries: "{{ 3 | oracle.oci.override(test_backend_set_create_required_health_checker_retries, omit) }}"
        timeout_in_millis: "{{ 3000 | oracle.oci.override(test_backend_set_create_required_health_checker_timeout_in_millis, omit) }}"
        interval_in_millis: "{{ 10000 | oracle.oci.override(test_backend_set_create_required_health_checker_interval_in_millis, omit) }}"
        response_body_regex: "{{ '^((?!false).|\\s)*$' | oracle.oci.override(test_backend_set_create_required_health_checker_response_body_regex, omit) }}"
    when: test_backend_set_create_required_health_checker is not defined

  - name: Create backend_set (check mode)
    oci_loadbalancer_backend_set:
      name: "{{ ('example_backend_set' + random_suffix_1024) | oracle.oci.override(test_backend_set_create_required_name, omit) }}"
      policy: "{{ 'LEAST_CONNECTIONS' | oracle.oci.override(test_backend_set_create_required_policy, omit) }}"
      health_checker: "{{ '{}' | oracle.oci.override(test_backend_set_create_required_health_checker, omit) }}"
      load_balancer_id: "{{ dependency_load_balancer_id | oracle.oci.override(test_backend_set_create_required_load_balancer_id, omit) }}"
    register: result
    check_mode: yes
    when: skip_backend_set_create_check_mode_test is not defined

  - name: Assert resource would have been created
    assert:
      that:
        - result.changed == True
    when: skip_backend_set_create_check_mode_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ backend_set_create_check_mode_custom_assertions }}"
    when: backend_set_create_check_mode_custom_assertions is defined

# ==================================================================================================== #

  - name: Create backend_set with required parameters
    oci_loadbalancer_backend_set:
      name: "{{ ('example_backend_set' + random_suffix_1024) | oracle.oci.override(test_backend_set_create_required_name, omit) }}"
      policy: "{{ 'LEAST_CONNECTIONS' | oracle.oci.override(test_backend_set_create_required_policy, omit) }}"
      health_checker: "{{ '{}' | oracle.oci.override(test_backend_set_create_required_health_checker, omit) }}"
      load_balancer_id: "{{ dependency_load_balancer_id | oracle.oci.override(test_backend_set_create_required_load_balancer_id, omit) }}"
    register: result
    when: skip_backend_set_create_required_original_test is not defined

  - name: Assert resource was created
    assert:
      that:
        - result.changed == True
    when: skip_backend_set_create_required_original_test is not defined

  - set_fact:
      backend_set_resource_name: "{{ result.backend_set.name }}"
    when: skip_backend_set_create_required_original_test is not defined

  - set_fact:
      backend_set: "{{ result.backend_set }}"
    when: skip_backend_set_create_required_original_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - result.backend_set.name is defined
        - result.backend_set.policy is defined
        - result.backend_set.backends is defined
        - result.backend_set.health_checker is defined
        - result.backend_set.ssl_configuration is defined
        - result.backend_set.session_persistence_configuration is defined
    when: skip_backend_set_create_required_original_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ backend_set_create_required_original_custom_assertions }}"
    when: backend_set_create_required_original_custom_assertions is defined

# ==================================================================================================== #

  - name: Re-create backend_set with required parameters(idempotency)
    oci_loadbalancer_backend_set:
      name: "{{ ('example_backend_set' + random_suffix_1024) | oracle.oci.override(test_backend_set_create_required_name, omit) }}"
      policy: "{{ 'LEAST_CONNECTIONS' | oracle.oci.override(test_backend_set_create_required_policy, omit) }}"
      health_checker: "{{ '{}' | oracle.oci.override(test_backend_set_create_required_health_checker, omit) }}"
      load_balancer_id: "{{ dependency_load_balancer_id | oracle.oci.override(test_backend_set_create_required_load_balancer_id, omit) }}"
    register: result
    when: skip_backend_set_create_required_idempotency_test is not defined

  - name: Assert changed is False
    assert:
      that:
        - result.changed == False
    when: skip_backend_set_create_required_idempotency_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - result.backend_set.name is defined
        - result.backend_set.policy is defined
        - result.backend_set.backends is defined
        - result.backend_set.health_checker is defined
        - result.backend_set.ssl_configuration is defined
        - result.backend_set.session_persistence_configuration is defined
    when: skip_backend_set_create_required_idempotency_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ backend_set_create_required_idempotency_custom_assertions }}"
    when: backend_set_create_required_idempotency_custom_assertions is defined

# ==================================================================================================== #

  - name: Delete backend_set
    oci_loadbalancer_backend_set:
      name: "{{ backend_set_resource_name | oracle.oci.override(test_backend_set_delete_required_name, omit) }}"
      load_balancer_id: "{{ dependency_load_balancer_id | oracle.oci.override(test_backend_set_delete_required_load_balancer_id, omit) }}"
      state: absent
    register: result
    when: skip_backend_set_delete_required_test is not defined

  - name: Assert resource was deleted
    assert:
      that:
        - result.changed == True
    when: skip_backend_set_delete_required_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - result.backend_set.name is defined
        - result.backend_set.policy is defined
        - result.backend_set.backends is defined
        - result.backend_set.health_checker is defined
        - result.backend_set.ssl_configuration is defined
        - result.backend_set.session_persistence_configuration is defined
    when: skip_backend_set_delete_required_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ backend_set_delete_required_custom_assertions }}"
    when: backend_set_delete_required_custom_assertions is defined

# ==================================================================================================== #

  - name: Delete backend_set (idempotency)
    oci_loadbalancer_backend_set:
      name: "{{ backend_set_resource_name | oracle.oci.override(test_backend_set_delete_required_name, omit) }}"
      load_balancer_id: "{{ dependency_load_balancer_id | oracle.oci.override(test_backend_set_delete_required_load_balancer_id, omit) }}"
      state: absent
    register: result
    when: skip_backend_set_delete_required_idempotency_test is not defined

  - name: Assert changed is False
    assert:
      that:
        - result.changed == False
    when: skip_backend_set_delete_required_idempotency_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ backend_set_delete_required_idempotency_custom_assertions }}"
    when: backend_set_delete_required_idempotency_custom_assertions is defined

# ==================================================================================================== #

  - set_fact:
      test_backend_set_create_optional_required_backends:
      - ip_address: "{{ '10.0.0.3' | oracle.oci.override(test_backend_set_create_optional_required_backends_ip_address, omit) }}"
        port: "{{ 8080 | oracle.oci.override(test_backend_set_create_optional_required_backends_port, omit) }}"
        weight: "{{ 3 | oracle.oci.override(test_backend_set_create_optional_required_backends_weight, omit) }}"
        backup: "{{ false | oracle.oci.override(test_backend_set_create_optional_required_backends_backup, omit) }}"
        drain: "{{ false | oracle.oci.override(test_backend_set_create_optional_required_backends_drain, omit) }}"
        offline: "{{ false | oracle.oci.override(test_backend_set_create_optional_required_backends_offline, omit) }}"
    when: test_backend_set_create_optional_required_backends is not defined

  - set_fact:
      test_backend_set_create_optional_required_health_checker:
        protocol: "{{ 'HTTP' | oracle.oci.override(test_backend_set_create_optional_required_health_checker_protocol, omit) }}"
        url_path: "{{ '/healthcheck' | oracle.oci.override(test_backend_set_create_optional_required_health_checker_url_path, omit) }}"
        port: "{{ 8080 | oracle.oci.override(test_backend_set_create_optional_required_health_checker_port, omit) }}"
        return_code: "{{ 200 | oracle.oci.override(test_backend_set_create_optional_required_health_checker_return_code, omit) }}"
        retries: "{{ 3 | oracle.oci.override(test_backend_set_create_optional_required_health_checker_retries, omit) }}"
        timeout_in_millis: "{{ 3000 | oracle.oci.override(test_backend_set_create_optional_required_health_checker_timeout_in_millis, omit) }}"
        interval_in_millis: "{{ 10000 | oracle.oci.override(test_backend_set_create_optional_required_health_checker_interval_in_millis, omit) }}"
        response_body_regex: "{{ '^((?!false).|\\s)*$' | oracle.oci.override(test_backend_set_create_optional_required_health_checker_response_body_regex, omit) }}"
    when: test_backend_set_create_optional_required_health_checker is not defined

  - set_fact:
      test_backend_set_create_optional_required_ssl_configuration:
        certificate_name: "{{ dependency_certificate_name | oracle.oci.override(test_backend_set_create_optional_required_ssl_configuration_certificate_name, omit) }}"
        verify_peer_certificate: "{{ true | oracle.oci.override(test_backend_set_create_optional_required_ssl_configuration_verify_peer_certificate, omit) }}"
        verify_depth: "{{ 3 | oracle.oci.override(test_backend_set_create_optional_required_ssl_configuration_verify_depth, omit) }}"
    when: test_backend_set_create_optional_required_ssl_configuration is not defined

  - set_fact:
      test_backend_set_create_optional_required_session_persistence_configuration:
        cookie_name: "{{ 'example_cookie' | oracle.oci.override(test_backend_set_create_optional_required_session_persistence_configuration_cookie_name, omit) }}"
        disable_fallback: "{{ false | oracle.oci.override(test_backend_set_create_optional_required_session_persistence_configuration_disable_fallback, omit) }}"
    when: test_backend_set_create_optional_required_session_persistence_configuration is not defined

  - name: Create backend_set with optional + required parameters
    oci_loadbalancer_backend_set:
      name: "{{ ('example_backend_set' + random_suffix_1024) | oracle.oci.override(test_backend_set_create_optional_required_name, omit) }}"
      policy: "{{ 'LEAST_CONNECTIONS' | oracle.oci.override(test_backend_set_create_optional_required_policy, omit) }}"
      backends: "{{ '[]' | oracle.oci.override(test_backend_set_create_optional_required_backends, omit) }}"
      health_checker: "{{ '{}' | oracle.oci.override(test_backend_set_create_optional_required_health_checker, omit) }}"
      ssl_configuration: "{{ '{}' | oracle.oci.override(test_backend_set_create_optional_required_ssl_configuration, omit) }}"
      session_persistence_configuration: "{{ '{}' | oracle.oci.override(test_backend_set_create_optional_required_session_persistence_configuration, omit) }}"
      load_balancer_id: "{{ dependency_load_balancer_id | oracle.oci.override(test_backend_set_create_optional_required_load_balancer_id, omit) }}"
    register: result
    when: skip_backend_set_create_optional_required_original_test is not defined

  - name: Assert changed is True
    assert:
      that:
        - result.changed == True
    when: skip_backend_set_create_optional_required_original_test is not defined

  - set_fact:
      backend_set_resource_name: "{{ result.backend_set.name }}"
    when: skip_backend_set_create_optional_required_original_test is not defined

  - set_fact:
      backend_set: "{{ result.backend_set }}"
    when: skip_backend_set_create_optional_required_original_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - result.backend_set.name is defined
        - result.backend_set.policy is defined
        - result.backend_set.backends is defined
        - result.backend_set.health_checker is defined
        - result.backend_set.ssl_configuration is defined
        - result.backend_set.session_persistence_configuration is defined
    when: skip_backend_set_create_optional_required_original_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ backend_set_create_optional_required_original_custom_assertions }}"
    when: backend_set_create_optional_required_original_custom_assertions is defined

# ==================================================================================================== #

  - name: Re-create backend_set with optional + required parameters (idempotence)
    oci_loadbalancer_backend_set:
      name: "{{ ('example_backend_set' + random_suffix_1024) | oracle.oci.override(test_backend_set_create_optional_required_name, omit) }}"
      policy: "{{ 'LEAST_CONNECTIONS' | oracle.oci.override(test_backend_set_create_optional_required_policy, omit) }}"
      backends: "{{ '[]' | oracle.oci.override(test_backend_set_create_optional_required_backends, omit) }}"
      health_checker: "{{ '{}' | oracle.oci.override(test_backend_set_create_optional_required_health_checker, omit) }}"
      ssl_configuration: "{{ '{}' | oracle.oci.override(test_backend_set_create_optional_required_ssl_configuration, omit) }}"
      session_persistence_configuration: "{{ '{}' | oracle.oci.override(test_backend_set_create_optional_required_session_persistence_configuration, omit) }}"
      load_balancer_id: "{{ dependency_load_balancer_id | oracle.oci.override(test_backend_set_create_optional_required_load_balancer_id, omit) }}"
    register: result
    when: skip_backend_set_create_optional_required_idempotence_test is not defined

  - name: Assert changed is False
    assert:
      that:
        - result.changed == False
    when: skip_backend_set_create_optional_required_idempotence_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - result.backend_set.name is defined
        - result.backend_set.policy is defined
        - result.backend_set.backends is defined
        - result.backend_set.health_checker is defined
        - result.backend_set.ssl_configuration is defined
        - result.backend_set.session_persistence_configuration is defined
    when: skip_backend_set_create_optional_required_idempotence_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ backend_set_create_optional_required_idempotence_custom_assertions }}"
    when: backend_set_create_optional_required_idempotence_custom_assertions is defined

# ==================================================================================================== #

  - set_fact:
      test_backend_set_update_optional_required_backends:
      - ip_address: "{{ ('10.0.0.3updated' + random_suffix_1024) | oracle.oci.override(test_backend_set_update_optional_required_backends_ip_address, omit) }}"
        port: "{{ 16160 | oracle.oci.override(test_backend_set_update_optional_required_backends_port, omit) }}"
        weight: "{{ 6 | oracle.oci.override(test_backend_set_update_optional_required_backends_weight, omit) }}"
        backup: "{{ false | oracle.oci.override(test_backend_set_update_optional_required_backends_backup, omit) }}"
        drain: "{{ false | oracle.oci.override(test_backend_set_update_optional_required_backends_drain, omit) }}"
        offline: "{{ false | oracle.oci.override(test_backend_set_update_optional_required_backends_offline, omit) }}"
    when: test_backend_set_update_optional_required_backends is not defined

  - set_fact:
      test_backend_set_update_optional_required_health_checker:
        protocol: "{{ 'HTTP' | oracle.oci.override(test_backend_set_update_optional_required_health_checker_protocol, omit) }}"
        url_path: "{{ ('/healthcheckupdated' + random_suffix_1024) | oracle.oci.override(test_backend_set_update_optional_required_health_checker_url_path, omit) }}"
        port: "{{ 16160 | oracle.oci.override(test_backend_set_update_optional_required_health_checker_port, omit) }}"
        return_code: "{{ 400 | oracle.oci.override(test_backend_set_update_optional_required_health_checker_return_code, omit) }}"
        retries: "{{ 6 | oracle.oci.override(test_backend_set_update_optional_required_health_checker_retries, omit) }}"
        timeout_in_millis: "{{ 6000 | oracle.oci.override(test_backend_set_update_optional_required_health_checker_timeout_in_millis, omit) }}"
        interval_in_millis: "{{ 20000 | oracle.oci.override(test_backend_set_update_optional_required_health_checker_interval_in_millis, omit) }}"
        response_body_regex: "{{ '^((?!false).|\\s)*$' | oracle.oci.override(test_backend_set_update_optional_required_health_checker_response_body_regex, omit) }}"
    when: test_backend_set_update_optional_required_health_checker is not defined

  - set_fact:
      test_backend_set_update_optional_required_ssl_configuration:
        certificate_name: "{{ dependency_certificate_name | oracle.oci.override(test_backend_set_update_optional_required_ssl_configuration_certificate_name, omit) }}"
        verify_peer_certificate: "{{ true | oracle.oci.override(test_backend_set_update_optional_required_ssl_configuration_verify_peer_certificate, omit) }}"
        verify_depth: "{{ 6 | oracle.oci.override(test_backend_set_update_optional_required_ssl_configuration_verify_depth, omit) }}"
    when: test_backend_set_update_optional_required_ssl_configuration is not defined

  - set_fact:
      test_backend_set_update_optional_required_session_persistence_configuration:
        cookie_name: "{{ ('example_cookieupdated' + random_suffix_1024) | oracle.oci.override(test_backend_set_update_optional_required_session_persistence_configuration_cookie_name, omit) }}"
        disable_fallback: "{{ false | oracle.oci.override(test_backend_set_update_optional_required_session_persistence_configuration_disable_fallback, omit) }}"
    when: test_backend_set_update_optional_required_session_persistence_configuration is not defined

  - name: Update backend_set with optional + required parameters
    oci_loadbalancer_backend_set:
      name: "{{ backend_set_resource_name | oracle.oci.override(test_backend_set_update_optional_required_name, omit) }}"
      policy: "{{ ('LEAST_CONNECTIONSupdated' + random_suffix_1024) | oracle.oci.override(test_backend_set_update_optional_required_policy, omit) }}"
      backends: "{{ '[]' | oracle.oci.override(test_backend_set_update_optional_required_backends, omit) }}"
      health_checker: "{{ '{}' | oracle.oci.override(test_backend_set_update_optional_required_health_checker, omit) }}"
      ssl_configuration: "{{ '{}' | oracle.oci.override(test_backend_set_update_optional_required_ssl_configuration, omit) }}"
      session_persistence_configuration: "{{ '{}' | oracle.oci.override(test_backend_set_update_optional_required_session_persistence_configuration, omit) }}"
      load_balancer_id: "{{ dependency_load_balancer_id | oracle.oci.override(test_backend_set_update_optional_required_load_balancer_id, omit) }}"
    register: result
    when: skip_backend_set_update_optional_required_test is not defined

  - name: Assert resource was updated
    assert:
      that:
        - result.changed == True
    when: skip_backend_set_update_optional_required_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - result.backend_set.name is defined
        - result.backend_set.policy is defined
        - result.backend_set.backends is defined
        - result.backend_set.health_checker is defined
        - result.backend_set.ssl_configuration is defined
        - result.backend_set.session_persistence_configuration is defined
    when: skip_backend_set_update_optional_required_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ backend_set_update_optional_required_custom_assertions }}"
    when: backend_set_update_optional_required_custom_assertions is defined

# ==================================================================================================== #

  - name: Update backend_set with optional + required parameters (idempotence)
    oci_loadbalancer_backend_set:
      name: "{{ backend_set_resource_name | oracle.oci.override(test_backend_set_update_optional_required_name, omit) }}"
      policy: "{{ ('LEAST_CONNECTIONSupdated' + random_suffix_1024) | oracle.oci.override(test_backend_set_update_optional_required_policy, omit) }}"
      backends: "{{ '[]' | oracle.oci.override(test_backend_set_update_optional_required_backends, omit) }}"
      health_checker: "{{ '{}' | oracle.oci.override(test_backend_set_update_optional_required_health_checker, omit) }}"
      ssl_configuration: "{{ '{}' | oracle.oci.override(test_backend_set_update_optional_required_ssl_configuration, omit) }}"
      session_persistence_configuration: "{{ '{}' | oracle.oci.override(test_backend_set_update_optional_required_session_persistence_configuration, omit) }}"
      load_balancer_id: "{{ dependency_load_balancer_id | oracle.oci.override(test_backend_set_update_optional_required_load_balancer_id, omit) }}"
    register: result
    when: skip_backend_set_update_optional_required_idempotence_test is not defined

  - name: Assert changed is False
    assert:
      that:
        - result.changed == False
    when: skip_backend_set_update_optional_required_idempotence_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - result.backend_set.name is defined
        - result.backend_set.policy is defined
        - result.backend_set.backends is defined
        - result.backend_set.health_checker is defined
        - result.backend_set.ssl_configuration is defined
        - result.backend_set.session_persistence_configuration is defined
    when: skip_backend_set_update_optional_required_idempotence_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ backend_set_update_optional_required_idempotence_custom_assertions }}"
    when: backend_set_update_optional_required_idempotence_custom_assertions is defined

# ==================================================================================================== #

  - name: List backend_sets
    oci_loadbalancer_backend_set_facts:
      load_balancer_id: "{{ dependency_load_balancer_id | oracle.oci.override(test_backend_set_list_load_balancer_id, omit) }}"
    register: result
    when: skip_backend_set_list_test is not defined

  - name: Assert resource was listed
    assert:
      that:
        - result.backend_sets | length > 0
    when: skip_backend_set_list_test is not defined


  - name: Assert response properties are populated
    assert:
      that:
        - item.name is defined
        - item.policy is defined
        - item.backends is defined
        - item.health_checker is defined
        - item.ssl_configuration is defined
        - item.session_persistence_configuration is defined
    with_items: "{{ result.backend_sets }}"
    when: skip_backend_set_list_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ backend_set_list_custom_assertions }}"
    when: backend_set_list_custom_assertions is defined

# ==================================================================================================== #

  - name: Get backend_set
    oci_loadbalancer_backend_set_facts:
      load_balancer_id: "{{ dependency_load_balancer_id | oracle.oci.override(test_backend_set_get_load_balancer_id, omit) }}"
      backend_set_name: "{{ backend_set_resource_name | oracle.oci.override(test_backend_set_get_backend_set_name, omit) }}"
    register: result
    when: skip_backend_set_get_test is not defined

  - name: Assert resource was listed
    assert:
      that:
        - result.backend_sets | length == 1
    when: skip_backend_set_get_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - item.name is defined
        - item.policy is defined
        - item.backends is defined
        - item.health_checker is defined
        - item.ssl_configuration is defined
        - item.session_persistence_configuration is defined
    with_items: "{{ result.backend_sets }}"
    when: skip_backend_set_get_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ backend_set_get_custom_assertions }}"
    when: backend_set_get_custom_assertions is defined

  always:

    - name: Delete backend_set
      oci_loadbalancer_backend_set:
        name: "{{ backend_set_resource_name | oracle.oci.override(test_backend_set_delete_rescue_name, omit) }}"
        load_balancer_id: "{{ dependency_load_balancer_id | oracle.oci.override(test_backend_set_delete_rescue_load_balancer_id, omit) }}"
        state: absent
      register: result
      ignore_errors: yes
      when: backend_set_resource_name is defined

    - name: Delete dependency certificate
      oci_loadbalancer_certificate:
        certificate_name: "{{ dependency_certificate_id }}"
        load_balancer_id: "{{ dependency_load_balancer_id | oracle.oci.override(test_backend_set_delete_dependency_certificate_load_balancer_id, omit) }}"
        state: absent
      ignore_errors: yes
      when: skip_backend_set_delete_dependency_certificate_test is not defined and skip_backend_set_dependencies is not defined and dependency_certificate_id is defined

    - name: Delete dependency load_balancer
      oci_loadbalancer_load_balancer:
        load_balancer_id: "{{ dependency_load_balancer_id }}"
        state: absent
      ignore_errors: yes
      when: skip_backend_set_delete_dependency_load_balancer_test is not defined and skip_backend_set_dependencies is not defined and dependency_load_balancer_id is defined
