---
- block:
  - name: Create dependency load_balancer with required parameters
    oci_loadbalancer_load_balancer:
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_backend_create_dependency_load_balancer_compartment_id, omit) }}"
      display_name: "{{ ('example_load_balancer' + random_suffix_1024) | oracle.oci.override(test_backend_create_dependency_load_balancer_display_name, omit) }}"
      shape_name: "{{ '100Mbps' | oracle.oci.override(test_backend_create_dependency_load_balancer_shape_name, omit) }}"
      subnet_ids: "{{ [ 'null' ] | oracle.oci.override(test_backend_create_dependency_load_balancer_subnet_ids, omit) }}"
    register: result
    when: skip_backend_create_dependency_load_balancer_test is not defined and skip_backend_dependencies is not defined
  - name: Assert resource was created
    assert:
      that:
        - result.changed == True
    when: skip_backend_create_dependency_load_balancer_test is not defined and skip_backend_dependencies is not defined
  - set_fact:
      dependency_load_balancer: "{{ result.load_balancer }}"
      dependency_load_balancer_id: "{{ result.load_balancer.id }}"
    when: skip_backend_create_dependency_load_balancer_test is not defined and skip_backend_dependencies is not defined
  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ backend_create_dependency_load_balancer_custom_assertions }}"
    when: backend_create_dependency_load_balancer_custom_assertions is defined

# ==================================================================================================== #

  - set_fact:
      test_backend_create_dependency_backend_set_health_checker:
        protocol: "{{ 'HTTP' | oracle.oci.override(test_backend_create_dependency_backend_set_health_checker_protocol, omit) }}"
        url_path: "{{ '/healthcheck' | oracle.oci.override(test_backend_create_dependency_backend_set_health_checker_url_path, omit) }}"
        port: "{{ 8080 | oracle.oci.override(test_backend_create_dependency_backend_set_health_checker_port, omit) }}"
        return_code: "{{ 200 | oracle.oci.override(test_backend_create_dependency_backend_set_health_checker_return_code, omit) }}"
        retries: "{{ 3 | oracle.oci.override(test_backend_create_dependency_backend_set_health_checker_retries, omit) }}"
        timeout_in_millis: "{{ 3000 | oracle.oci.override(test_backend_create_dependency_backend_set_health_checker_timeout_in_millis, omit) }}"
        interval_in_millis: "{{ 10000 | oracle.oci.override(test_backend_create_dependency_backend_set_health_checker_interval_in_millis, omit) }}"
        response_body_regex: "{{ '^((?!false).|\\s)*$' | oracle.oci.override(test_backend_create_dependency_backend_set_health_checker_response_body_regex, omit) }}"
    when: skip_backend_create_dependency_backend_set_test is not defined and skip_backend_dependencies is not defined and test_backend_create_dependency_backend_set_health_checker is not defined

  - name: Create dependency backend_set with required parameters
    oci_loadbalancer_backend_set:
      name: "{{ ('example_backend_set' + random_suffix_1024) | oracle.oci.override(test_backend_create_dependency_backend_set_name, omit) }}"
      policy: "{{ 'LEAST_CONNECTIONS' | oracle.oci.override(test_backend_create_dependency_backend_set_policy, omit) }}"
      health_checker: "{{ '{}' | oracle.oci.override(test_backend_create_dependency_backend_set_health_checker, omit) }}"
      load_balancer_id: "{{ dependency_load_balancer_id | oracle.oci.override(test_backend_create_dependency_backend_set_load_balancer_id, omit) }}"
    register: result
    when: skip_backend_create_dependency_backend_set_test is not defined and skip_backend_dependencies is not defined
  - name: Assert resource was created
    assert:
      that:
        - result.changed == True
    when: skip_backend_create_dependency_backend_set_test is not defined and skip_backend_dependencies is not defined
  - set_fact:
      dependency_backend_set: "{{ result.backend_set }}"
      dependency_backend_set_name: "{{ result.backend_set.name }}"
    when: skip_backend_create_dependency_backend_set_test is not defined and skip_backend_dependencies is not defined
  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ backend_create_dependency_backend_set_custom_assertions }}"
    when: backend_create_dependency_backend_set_custom_assertions is defined

# ==================================================================================================== #

  - name: Create backend (check mode)
    oci_loadbalancer_backend:
      ip_address: "{{ '10.0.0.3' | oracle.oci.override(test_backend_create_required_ip_address, omit) }}"
      port: "{{ 8080 | oracle.oci.override(test_backend_create_required_port, omit) }}"
      load_balancer_id: "{{ dependency_load_balancer_id | oracle.oci.override(test_backend_create_required_load_balancer_id, omit) }}"
      backend_set_name: "{{ dependency_backend_set_name | oracle.oci.override(test_backend_create_required_backend_set_name, omit) }}"
    register: result
    check_mode: yes
    when: skip_backend_create_check_mode_test is not defined

  - name: Assert resource would have been created
    assert:
      that:
        - result.changed == True
    when: skip_backend_create_check_mode_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ backend_create_check_mode_custom_assertions }}"
    when: backend_create_check_mode_custom_assertions is defined

# ==================================================================================================== #

  - name: Create backend with required parameters
    oci_loadbalancer_backend:
      ip_address: "{{ '10.0.0.3' | oracle.oci.override(test_backend_create_required_ip_address, omit) }}"
      port: "{{ 8080 | oracle.oci.override(test_backend_create_required_port, omit) }}"
      load_balancer_id: "{{ dependency_load_balancer_id | oracle.oci.override(test_backend_create_required_load_balancer_id, omit) }}"
      backend_set_name: "{{ dependency_backend_set_name | oracle.oci.override(test_backend_create_required_backend_set_name, omit) }}"
    register: result
    when: skip_backend_create_required_original_test is not defined

  - name: Assert resource was created
    assert:
      that:
        - result.changed == True
    when: skip_backend_create_required_original_test is not defined

  - set_fact:
      backend_resource_name: "{{ result.backend.name }}"
    when: skip_backend_create_required_original_test is not defined

  - set_fact:
      backend: "{{ result.backend }}"
    when: skip_backend_create_required_original_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - result.backend.name is defined
        - result.backend.ip_address is defined
        - result.backend.port is defined
        - result.backend.weight is defined
        - result.backend.drain is defined
        - result.backend.backup is defined
        - result.backend.offline is defined
    when: skip_backend_create_required_original_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ backend_create_required_original_custom_assertions }}"
    when: backend_create_required_original_custom_assertions is defined

# ==================================================================================================== #

  - name: Re-create backend with required parameters(idempotency)
    oci_loadbalancer_backend:
      ip_address: "{{ '10.0.0.3' | oracle.oci.override(test_backend_create_required_ip_address, omit) }}"
      port: "{{ 8080 | oracle.oci.override(test_backend_create_required_port, omit) }}"
      load_balancer_id: "{{ dependency_load_balancer_id | oracle.oci.override(test_backend_create_required_load_balancer_id, omit) }}"
      backend_set_name: "{{ dependency_backend_set_name | oracle.oci.override(test_backend_create_required_backend_set_name, omit) }}"
    register: result
    when: skip_backend_create_required_idempotency_test is not defined

  - name: Assert changed is False
    assert:
      that:
        - result.changed == False
    when: skip_backend_create_required_idempotency_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - result.backend.name is defined
        - result.backend.ip_address is defined
        - result.backend.port is defined
        - result.backend.weight is defined
        - result.backend.drain is defined
        - result.backend.backup is defined
        - result.backend.offline is defined
    when: skip_backend_create_required_idempotency_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ backend_create_required_idempotency_custom_assertions }}"
    when: backend_create_required_idempotency_custom_assertions is defined

# ==================================================================================================== #

  - name: Delete backend
    oci_loadbalancer_backend:
      ip_address: "{{ '10.0.0.3' | oracle.oci.override(test_backend_delete_required_ip_address, omit) }}"
      port: "{{ 8080 | oracle.oci.override(test_backend_delete_required_port, omit) }}"
      load_balancer_id: "{{ dependency_load_balancer_id | oracle.oci.override(test_backend_delete_required_load_balancer_id, omit) }}"
      backend_set_name: "{{ dependency_backend_set_name | oracle.oci.override(test_backend_delete_required_backend_set_name, omit) }}"
      state: absent
    register: result
    when: skip_backend_delete_required_test is not defined

  - name: Assert resource was deleted
    assert:
      that:
        - result.changed == True
    when: skip_backend_delete_required_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - result.backend.name is defined
        - result.backend.ip_address is defined
        - result.backend.port is defined
        - result.backend.weight is defined
        - result.backend.drain is defined
        - result.backend.backup is defined
        - result.backend.offline is defined
    when: skip_backend_delete_required_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ backend_delete_required_custom_assertions }}"
    when: backend_delete_required_custom_assertions is defined

# ==================================================================================================== #

  - name: Delete backend (idempotency)
    oci_loadbalancer_backend:
      ip_address: "{{ '10.0.0.3' | oracle.oci.override(test_backend_delete_required_ip_address, omit) }}"
      port: "{{ 8080 | oracle.oci.override(test_backend_delete_required_port, omit) }}"
      load_balancer_id: "{{ dependency_load_balancer_id | oracle.oci.override(test_backend_delete_required_load_balancer_id, omit) }}"
      backend_set_name: "{{ dependency_backend_set_name | oracle.oci.override(test_backend_delete_required_backend_set_name, omit) }}"
      state: absent
    register: result
    when: skip_backend_delete_required_idempotency_test is not defined

  - name: Assert changed is False
    assert:
      that:
        - result.changed == False
    when: skip_backend_delete_required_idempotency_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ backend_delete_required_idempotency_custom_assertions }}"
    when: backend_delete_required_idempotency_custom_assertions is defined

# ==================================================================================================== #

  - name: Create backend with optional + required parameters
    oci_loadbalancer_backend:
      ip_address: "{{ '10.0.0.3' | oracle.oci.override(test_backend_create_optional_required_ip_address, omit) }}"
      port: "{{ 8080 | oracle.oci.override(test_backend_create_optional_required_port, omit) }}"
      weight: "{{ 3 | oracle.oci.override(test_backend_create_optional_required_weight, omit) }}"
      backup: "{{ false | oracle.oci.override(test_backend_create_optional_required_backup, omit) }}"
      drain: "{{ false | oracle.oci.override(test_backend_create_optional_required_drain, omit) }}"
      offline: "{{ false | oracle.oci.override(test_backend_create_optional_required_offline, omit) }}"
      load_balancer_id: "{{ dependency_load_balancer_id | oracle.oci.override(test_backend_create_optional_required_load_balancer_id, omit) }}"
      backend_set_name: "{{ dependency_backend_set_name | oracle.oci.override(test_backend_create_optional_required_backend_set_name, omit) }}"
    register: result
    when: skip_backend_create_optional_required_original_test is not defined

  - name: Assert changed is True
    assert:
      that:
        - result.changed == True
    when: skip_backend_create_optional_required_original_test is not defined

  - set_fact:
      backend_resource_name: "{{ result.backend.name }}"
    when: skip_backend_create_optional_required_original_test is not defined

  - set_fact:
      backend: "{{ result.backend }}"
    when: skip_backend_create_optional_required_original_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - result.backend.name is defined
        - result.backend.ip_address is defined
        - result.backend.port is defined
        - result.backend.weight is defined
        - result.backend.drain is defined
        - result.backend.backup is defined
        - result.backend.offline is defined
    when: skip_backend_create_optional_required_original_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ backend_create_optional_required_original_custom_assertions }}"
    when: backend_create_optional_required_original_custom_assertions is defined

# ==================================================================================================== #

  - name: Re-create backend with optional + required parameters (idempotence)
    oci_loadbalancer_backend:
      ip_address: "{{ '10.0.0.3' | oracle.oci.override(test_backend_create_optional_required_ip_address, omit) }}"
      port: "{{ 8080 | oracle.oci.override(test_backend_create_optional_required_port, omit) }}"
      weight: "{{ 3 | oracle.oci.override(test_backend_create_optional_required_weight, omit) }}"
      backup: "{{ false | oracle.oci.override(test_backend_create_optional_required_backup, omit) }}"
      drain: "{{ false | oracle.oci.override(test_backend_create_optional_required_drain, omit) }}"
      offline: "{{ false | oracle.oci.override(test_backend_create_optional_required_offline, omit) }}"
      load_balancer_id: "{{ dependency_load_balancer_id | oracle.oci.override(test_backend_create_optional_required_load_balancer_id, omit) }}"
      backend_set_name: "{{ dependency_backend_set_name | oracle.oci.override(test_backend_create_optional_required_backend_set_name, omit) }}"
    register: result
    when: skip_backend_create_optional_required_idempotence_test is not defined

  - name: Assert changed is False
    assert:
      that:
        - result.changed == False
    when: skip_backend_create_optional_required_idempotence_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - result.backend.name is defined
        - result.backend.ip_address is defined
        - result.backend.port is defined
        - result.backend.weight is defined
        - result.backend.drain is defined
        - result.backend.backup is defined
        - result.backend.offline is defined
    when: skip_backend_create_optional_required_idempotence_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ backend_create_optional_required_idempotence_custom_assertions }}"
    when: backend_create_optional_required_idempotence_custom_assertions is defined

# ==================================================================================================== #

  - name: Update backend with optional + required parameters
    oci_loadbalancer_backend:
      ip_address: "{{ ('10.0.0.3updated' + random_suffix_1024) | oracle.oci.override(test_backend_update_optional_required_ip_address, omit) }}"
      port: "{{ 16160 | oracle.oci.override(test_backend_update_optional_required_port, omit) }}"
      weight: "{{ 6 | oracle.oci.override(test_backend_update_optional_required_weight, omit) }}"
      backup: "{{ false | oracle.oci.override(test_backend_update_optional_required_backup, omit) }}"
      drain: "{{ false | oracle.oci.override(test_backend_update_optional_required_drain, omit) }}"
      offline: "{{ false | oracle.oci.override(test_backend_update_optional_required_offline, omit) }}"
      load_balancer_id: "{{ dependency_load_balancer_id | oracle.oci.override(test_backend_update_optional_required_load_balancer_id, omit) }}"
      backend_set_name: "{{ dependency_backend_set_name | oracle.oci.override(test_backend_update_optional_required_backend_set_name, omit) }}"
    register: result
    when: skip_backend_update_optional_required_test is not defined

  - name: Assert resource was updated
    assert:
      that:
        - result.changed == True
    when: skip_backend_update_optional_required_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - result.backend.name is defined
        - result.backend.ip_address is defined
        - result.backend.port is defined
        - result.backend.weight is defined
        - result.backend.drain is defined
        - result.backend.backup is defined
        - result.backend.offline is defined
    when: skip_backend_update_optional_required_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ backend_update_optional_required_custom_assertions }}"
    when: backend_update_optional_required_custom_assertions is defined

# ==================================================================================================== #

  - name: Update backend with optional + required parameters (idempotence)
    oci_loadbalancer_backend:
      ip_address: "{{ ('10.0.0.3updated' + random_suffix_1024) | oracle.oci.override(test_backend_update_optional_required_ip_address, omit) }}"
      port: "{{ 16160 | oracle.oci.override(test_backend_update_optional_required_port, omit) }}"
      weight: "{{ 6 | oracle.oci.override(test_backend_update_optional_required_weight, omit) }}"
      backup: "{{ false | oracle.oci.override(test_backend_update_optional_required_backup, omit) }}"
      drain: "{{ false | oracle.oci.override(test_backend_update_optional_required_drain, omit) }}"
      offline: "{{ false | oracle.oci.override(test_backend_update_optional_required_offline, omit) }}"
      load_balancer_id: "{{ dependency_load_balancer_id | oracle.oci.override(test_backend_update_optional_required_load_balancer_id, omit) }}"
      backend_set_name: "{{ dependency_backend_set_name | oracle.oci.override(test_backend_update_optional_required_backend_set_name, omit) }}"
    register: result
    when: skip_backend_update_optional_required_idempotence_test is not defined

  - name: Assert changed is False
    assert:
      that:
        - result.changed == False
    when: skip_backend_update_optional_required_idempotence_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - result.backend.name is defined
        - result.backend.ip_address is defined
        - result.backend.port is defined
        - result.backend.weight is defined
        - result.backend.drain is defined
        - result.backend.backup is defined
        - result.backend.offline is defined
    when: skip_backend_update_optional_required_idempotence_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ backend_update_optional_required_idempotence_custom_assertions }}"
    when: backend_update_optional_required_idempotence_custom_assertions is defined

# ==================================================================================================== #

  - name: List backends
    oci_loadbalancer_backend_facts:
      load_balancer_id: "{{ dependency_load_balancer_id | oracle.oci.override(test_backend_list_load_balancer_id, omit) }}"
      backend_set_name: "{{ dependency_backend_set_name | oracle.oci.override(test_backend_list_backend_set_name, omit) }}"
    register: result
    when: skip_backend_list_test is not defined

  - name: Assert resource was listed
    assert:
      that:
        - result.backends | length > 0
    when: skip_backend_list_test is not defined


  - name: Assert response properties are populated
    assert:
      that:
        - item.name is defined
        - item.ip_address is defined
        - item.port is defined
        - item.weight is defined
        - item.drain is defined
        - item.backup is defined
        - item.offline is defined
    with_items: "{{ result.backends }}"
    when: skip_backend_list_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ backend_list_custom_assertions }}"
    when: backend_list_custom_assertions is defined

# ==================================================================================================== #

  - name: Get backend
    oci_loadbalancer_backend_facts:
      load_balancer_id: "{{ dependency_load_balancer_id | oracle.oci.override(test_backend_get_load_balancer_id, omit) }}"
      backend_set_name: "{{ dependency_backend_set_name | oracle.oci.override(test_backend_get_backend_set_name, omit) }}"
      backend_name: "{{ backend_resource_name | oracle.oci.override(test_backend_get_backend_name, omit) }}"
    register: result
    when: skip_backend_get_test is not defined

  - name: Assert resource was listed
    assert:
      that:
        - result.backends | length == 1
    when: skip_backend_get_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - item.name is defined
        - item.ip_address is defined
        - item.port is defined
        - item.weight is defined
        - item.drain is defined
        - item.backup is defined
        - item.offline is defined
    with_items: "{{ result.backends }}"
    when: skip_backend_get_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ backend_get_custom_assertions }}"
    when: backend_get_custom_assertions is defined

  always:

    - name: Delete backend
      oci_loadbalancer_backend:
        ip_address: "{{ '10.0.0.3' | oracle.oci.override(test_backend_delete_rescue_ip_address, omit) }}"
        port: "{{ 8080 | oracle.oci.override(test_backend_delete_rescue_port, omit) }}"
        load_balancer_id: "{{ dependency_load_balancer_id | oracle.oci.override(test_backend_delete_rescue_load_balancer_id, omit) }}"
        backend_set_name: "{{ dependency_backend_set_name | oracle.oci.override(test_backend_delete_rescue_backend_set_name, omit) }}"
        state: absent
      register: result
      ignore_errors: yes
      when: backend_resource_name is defined

    - name: Delete dependency backend_set
      oci_loadbalancer_backend_set:
        name: "{{ dependency_backend_set_id }}"
        load_balancer_id: "{{ dependency_load_balancer_id | oracle.oci.override(test_backend_delete_dependency_backend_set_load_balancer_id, omit) }}"
        state: absent
      ignore_errors: yes
      when: skip_backend_delete_dependency_backend_set_test is not defined and skip_backend_dependencies is not defined and dependency_backend_set_id is defined

    - name: Delete dependency load_balancer
      oci_loadbalancer_load_balancer:
        load_balancer_id: "{{ dependency_load_balancer_id }}"
        state: absent
      ignore_errors: yes
      when: skip_backend_delete_dependency_load_balancer_test is not defined and skip_backend_dependencies is not defined and dependency_load_balancer_id is defined
