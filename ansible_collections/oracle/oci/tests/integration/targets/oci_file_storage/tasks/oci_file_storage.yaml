---
- block:
    - name: Create Mount Target
      oci_file_storage_mount_target:
        compartment_id: "{{ test_compartment_ocid }}"
        availability_domain: "{{ test_availability_domain }}"
        display_name: "{{ ('mount-target-5' + random_suffix_1024) }}"
        subnet_id: "{{ dependency_subnet_id }}"
        freeform_tags: "{{ test_default_updated_freeform_tags }}"
        defined_tags: "{{ test_default_updated_defined_tags }}"
      register: result

    - set_fact:
        mount_target_id: "{{ result.mount_target.id }}"
        export_set_id: "{{ result.mount_target.export_set_id }}"
    - name: Assert that Mount Target is created
      assert:
        that:
        - result.changed == True
    # ============================================================================================
    - name: Try to Create another Mount Target with same attributes, Idempotency test
      oci_file_storage_mount_target:
        compartment_id: "{{ test_compartment_ocid }}"
        availability_domain: "{{ test_availability_domain }}"
        display_name: "{{ ('mount-target-5' + random_suffix_1024) }}"
        subnet_id: "{{ dependency_subnet_id }}"
        freeform_tags: "{{ test_default_updated_freeform_tags }}"
        defined_tags: "{{ test_default_updated_defined_tags }}"
      register: result

    - set_fact:
        mount_target_id_new: "{{ result.mount_target.id }}"

    - name: Assert that no new Mount Target has been created
      assert:
        that:
          - result.changed == False
          - mount_target_id_new == mount_target_id
    # ===========================================================================================
    - name: Update display name of the Mount Target
      oci_file_storage_mount_target:
        mount_target_id: "{{ mount_target_id }}"
        display_name: "{{ mt_display_name_updated }}"
        state: 'present'
      register: result

    - name: Assert that Mount Target display name has been updated
      assert:
        that:
          - result.mount_target.display_name == mt_display_name_updated
    # ===========================================================================================
    - name: Update freeform tags of the Mount Target
      oci_file_storage_mount_target:
        mount_target_id: "{{ mount_target_id }}"
        freeform_tags: "{{ updated_mt_freeform_tags }}"
        state: 'present'
      register: result
    - debug:
        msg: "{{ result.mount_target.freeform_tags.resource_type }}"
    - name: Assert that Mount Target freeform tags has been updated
      assert:
        that:
          - result.mount_target.freeform_tags.resource_type == updated_mt_freeform_tags.resource_type
    # ===========================================================================================
    - name: Update defined tags of the Mount Target
      oci_file_storage_mount_target:
        mount_target_id: "{{ mount_target_id }}"
        defined_tags: "{{ updated_mt_defined_tags }}"
        state: 'present'
      register: result

    - name: Assert that Mount Target defined tags has been updated
      assert:
        that:
          - result.mount_target.defined_tags.ansible_tag_namespace_integration_test_1.ansible_tag_1 == updated_mt_defined_tags.ansible_tag_namespace_integration_test_1.ansible_tag_1
    # ===========================================================================================
    - name: List All Mount Targets
      oci_file_storage_mount_target_facts:
        compartment_id: "{{test_compartment_ocid}}"
        availability_domain: "{{test_availability_domain}}"
      register: result

    - name: Assert that Mount Target is listed
      assert:
        that:
          - result.mount_targets[0].display_name == mt_display_name_updated
    # =======================================================================================
    - name: List a specific Mount Target
      oci_file_storage_mount_target_facts:
        id: "{{mount_target_id}}"
      register: result

    - name: Assert that specific Mount Target is listed
      assert:
        that:
          - result.mount_targets[0].display_name == mt_display_name_updated
    # =======================================================================================
    - name: Try to filter Mount Target Lists with display name
      oci_file_storage_mount_target_facts:
        compartment_id: "{{test_compartment_ocid}}"
        availability_domain: "{{test_availability_domain}}"
        display_name: "{{ mt_display_name_updated }}"
      register: result

    - name: Assert that no Mount Target is listed
      assert:
        that:
          - result.mount_targets | length > 0
    # =======================================================================================
    - name: Try to filter Mount Target Lists with non-existent display name
      oci_file_storage_mount_target_facts:
        compartment_id: "{{test_compartment_ocid}}"
        availability_domain: "{{test_availability_domain}}"
        display_name: 'non_existent_mount_target'
      register: result

    - name: Assert that no Mount Target is listed
      assert:
        that:
          - result.mount_targets | length == 0
    # =======================================================================================
    - name: Try to filter Mount Target Lists with non-existent lifecycle state
      oci_file_storage_mount_target_facts:
        compartment_id: "{{test_compartment_ocid}}"
        availability_domain: "{{test_availability_domain}}"
        lifecycle_state: 'CREATING'
      register: result

    - name: Assert that no Mount Target is listed
      assert:
        that:
          - result.mount_targets | length == 0
    # =======================================================================================
    - name: Create File System
      oci_file_storage_file_system:
        compartment_id: "{{ test_compartment_ocid }}"
        availability_domain: "{{ test_availability_domain }}"
        display_name: "{{ fs_display_name }}"
        freeform_tags: "{{ fs_freeform_tags }}"
        defined_tags: "{{ fs_defined_tags }}"
        state: 'present'
      register: result

    - set_fact:
        file_system_id: "{{ result.file_system.id }}"

    - name: Assert that File System has been created
      assert:
        that:
          - result.changed == True
    # =======================================================================================
    - name: Try to Create another File System with same attributes, Idempotency test
      oci_file_storage_file_system:
        compartment_id: "{{ test_compartment_ocid }}"
        availability_domain: "{{ test_availability_domain }}"
        display_name: "{{ fs_display_name }}"
        freeform_tags: "{{ fs_freeform_tags }}"
        defined_tags: "{{ fs_defined_tags }}"
        state: 'present'
      register: result

    - name: Assert that no new File System has been created
      assert:
        that:
          - result.changed == False
    # ===========================================================================================
    - name: Update display name of the File system
      oci_file_storage_file_system:
        file_system_id: "{{ file_system_id }}"
        display_name: "{{ fs_display_name_updated }}"
        state: 'present'
      register: result

    - name: Assert that File System display name has been updated
      assert:
        that:
          - result.file_system.display_name == fs_display_name_updated
    # ===========================================================================================
    - name: Update freeform tags of the File System
      oci_file_storage_file_system:
        file_system_id: "{{ file_system_id }}"
        freeform_tags: "{{ updated_fs_freeform_tags }}"
        state: 'present'
      register: result

    - name: Assert that File System freeform tags has been updated
      assert:
        that:
          - result.file_system.freeform_tags.resource_type == updated_fs_freeform_tags.resource_type
    # ===========================================================================================
    - name: Update defined tags of the File System
      oci_file_storage_file_system:
        file_system_id: "{{ file_system_id }}"
        defined_tags: "{{ updated_fs_defined_tags }}"
        state: 'present'
      register: result

    - name: Assert that File System defined tags has been updated
      assert:
        that:
          - result.file_system.defined_tags.ansible_tag_namespace_integration_test_1.ansible_tag_1 == updated_fs_defined_tags.ansible_tag_namespace_integration_test_1.ansible_tag_1
    # ===========================================================================================
    - name: List All File Systems
      oci_file_storage_file_system_facts:
        compartment_id: "{{test_compartment_ocid}}"
        availability_domain: "{{test_availability_domain}}"
        display_name: "{{ fs_display_name_updated }}"
      register: result

    - name: Assert that all File Systems has been listed
      assert:
        that:
          - result.file_systems[0].display_name == fs_display_name_updated
    # =======================================================================================
    - name: List a specific File System
      oci_file_storage_file_system_facts:
        file_system_id: "{{file_system_id}}"
      register: result

    - name: Assert that specific File System is listed
      assert:
        that:
          - result.file_systems[0].display_name == fs_display_name_updated
# =======================================================================================
    - name: Try to filter File System Lists with display name
      oci_file_storage_file_system_facts:
        compartment_id: "{{test_compartment_ocid}}"
        availability_domain: "{{test_availability_domain}}"
        display_name: "{{ fs_display_name_updated }}"
      register: result

    - name: Assert that no File System is listed
      assert:
        that:
          - result.file_systems | length > 0
    # =======================================================================================
    - name: Try to filter File System Lists with non-existent display name
      oci_file_storage_file_system_facts:
        compartment_id: "{{test_compartment_ocid}}"
        availability_domain: "{{test_availability_domain}}"
        display_name: 'non_existent_file_system'
      register: result

    - name: Assert that no File System is listed
      assert:
        that:
          - result.file_systems | length == 0
    # =======================================================================================
    - name: Try to filter File System Lists with non-existent lifecycle state
      oci_file_storage_file_system_facts:
        compartment_id: "{{test_compartment_ocid}}"
        availability_domain: "{{test_availability_domain}}"
        lifecycle_state: 'CREATING'
      register: result

    - name: Assert that no File System is listed
      assert:
        that:
          - result.file_systems | length == 0
    # =======================================================================================
    - name: Update display name of the Export Set
      oci_file_storage_export_set:
        export_set_id: "{{ export_set_id }}"
        display_name: "{{ export_set_display_name_updated }}"
        state: 'present'
      register: result

    - name: Assert that Export Set display name has been updated
      assert:
        that:
          - result.export_set.display_name == export_set_display_name_updated
    # =======================================================================================
    - name: Update max_fs_stat_bytes of the Export Set
      oci_file_storage_export_set:
        export_set_id: "{{ export_set_id }}"
        max_fs_stat_bytes: "{{ updated_max_fs_stat_bytes }}"
        state: 'present'
      register: result

    - name: Assert that Export Set max_fs_stat_bytes has been updated
      assert:
        that:
          - result.export_set.max_fs_stat_bytes == updated_max_fs_stat_bytes
    # =======================================================================================
    - name: Update max_fs_stat_files of the Export Set
      oci_file_storage_export_set:
        export_set_id: "{{ export_set_id }}"
        max_fs_stat_files: "{{ updated_max_fs_stat_files }}"
        state: 'present'
      register: result

    - name: Assert that Export Set max_fs_stat_files has been updated
      assert:
        that:
          - result.export_set.max_fs_stat_files == updated_max_fs_stat_files
    # =======================================================================================
    - name: Try to Update display name of the Export Set with same value, Idempotent test
      oci_file_storage_export_set:
        export_set_id: "{{ export_set_id }}"
        display_name: "{{ export_set_display_name_updated }}"
        state: 'present'
      register: result

    - name: Assert that Export Set display name has not been updated
      assert:
        that:
          - result.changed == False
    # =======================================================================================
    - name: List All Export Sets
      oci_file_storage_export_set_facts:
        compartment_id: "{{test_compartment_ocid}}"
        availability_domain: "{{test_availability_domain}}"
        display_name: "{{ export_set_display_name_updated }}"
      register: result

    - name: Assert that all Export Sets has been listed
      assert:
        that:
          - result.export_sets[0].display_name == export_set_display_name_updated
    # =======================================================================================
    - name: List a specific Export Set
      oci_file_storage_export_set_facts:
        id: "{{export_set_id}}"
      register: result

    - name: Assert that specific Export Set is listed
      assert:
        that:
          - result.export_sets[0].display_name == export_set_display_name_updated
    # =======================================================================================
    - name: Try to filter Export Set Lists with non-existent display name
      oci_file_storage_export_set_facts:
        compartment_id: "{{test_compartment_ocid}}"
        availability_domain: "{{test_availability_domain}}"
        display_name: 'non_existent_export_set'
      register: result

    - name: Assert that no Export Set is listed
      assert:
        that:
          - result.export_sets | length == 0
    # =======================================================================================
    - name: Try to filter Export Set Lists with non-existent lifecycle state
      oci_file_storage_export_set_facts:
        compartment_id: "{{test_compartment_ocid}}"
        availability_domain: "{{test_availability_domain}}"
        lifecycle_state: 'CREATING'
      register: result

    - name: Assert that no Export Set is listed
      assert:
        that:
          - result.export_sets | length == 0
    # =======================================================================================
    - name: Create Export
      oci_file_storage_export:
        file_system_id: "{{ file_system_id }}"
        export_set_id: "{{ export_set_id }}"
        export_options: "{{ first_export_options }}"
        path: "{{ export_path }}"
        state: 'present'
      register: result

    - set_fact:
        export_id: "{{ result.export.id }}"

    - name: Assert that Export is created
      assert:
        that:
          - result.changed == True
    # =======================================================================================
    - name: Update Export by replacing Export Options
      oci_file_storage_export:
        export_id: "{{ export_id }}"
        export_options: "{{ second_export_options }}"
        state: 'present'
      register: result

    - name: Assert that Export has been updated
      assert:
        that:
          - result.export.export_options[0].source == second_export_option_source
          - result.changed == True
    # =======================================================================================
    - name: Update Export by adding multiple Export Options
      oci_file_storage_export:
        export_id: "{{ export_id }}"
        export_options: "{{ first_export_options + second_export_options }}"
        # purge_export_options: False
        state: 'present'
      register: result

    - name: Assert that Export has been updated by appending Export Options
      assert:
        that:
          - result.export.export_options|length == 2
          - result.changed == True
    # =======================================================================================
    - name: List Exports by Compartment
      oci_file_storage_export_facts:
        compartment_id: "{{ test_compartment_ocid }}"
      register: result

    - name: Assert that Export has been listed
      assert:
        that:
          - result.exports[0].path == export_path
    # =======================================================================================
    - name: List Exports by File System
      oci_file_storage_export_facts:
        file_system_id: "{{ file_system_id }}"
      register: result

    - name: Assert that Export has been listed
      assert:
        that:
          - result.exports[0].path == export_path
    # =======================================================================================
    - name: List Exports by Export Set
      oci_file_storage_export_facts:
        export_set_id: "{{ export_set_id }}"
      register: result

    - name: Assert that Export has been listed
      assert:
        that:
          - result.exports[0].path == export_path
    # =======================================================================================
    - name: List a specific Export
      oci_file_storage_export_facts:
        id: "{{ export_id }}"
      register: result

    - name: Assert that Export has been listed
      assert:
        that:
          - result.exports[0].path == export_path

    - name: Try to filter Export Lists with non-existent lifecycle state
      oci_file_storage_export_facts:
        file_system_id: "{{ file_system_id }}"
        lifecycle_state: 'CREATING'
      register: result

    - name: Assert that no Export is listed
      assert:
        that:
        - result.exports | length == 0
    # =======================================================================================
    - name: Update Export with empty Export Options
      oci_file_storage_export:
        export_id: "{{ export_id }}"
        export_options: []
        state: 'present'
      register: result

    - name: Assert that Export has been updated with empty Export Options
      assert:
        that:
        - result.export.export_options|length == 0
        - result.changed == True
    # =======================================================================================
    - name: Create Snapshot
      oci_file_storage_snapshot:
        file_system_id: "{{ file_system_id }}"
        name: "{{ snapshot_name }}"
        freeform_tags: "{{ snapshot_freeform_tags }}"
        defined_tags: "{{ snapshot_defined_tags }}"
        state: 'present'
      register: result

    - set_fact:
        snapshot_id: "{{ result.snapshot.id }}"

    - name: Assert that Snapshot has been created
      assert:
        that:
        - result.changed == True
    # =======================================================================================
    - name: Try to Create another Snapshot with same attributes, Idempotency test
      oci_file_storage_snapshot:
        file_system_id: "{{ file_system_id }}"
        name: "{{ snapshot_name }}"
        freeform_tags: "{{ snapshot_freeform_tags }}"
        defined_tags: "{{ snapshot_defined_tags }}"
        state: 'present'
      register: result

    - set_fact:
        snapshot_id: "{{ result.snapshot.id }}"

    - name: Assert that no new Snapshot has been created
      assert:
        that:
        - result.changed == False
    # =======================================================================================
    - name: Update freeform tags of the Snapshot
      oci_file_storage_snapshot:
        id: "{{ snapshot_id }}"
        freeform_tags: "{{ updated_snapshot_freeform_tags }}"
        state: 'present'
      register: result

    - name: Assert that Snapshot freeform tags has been updated
      assert:
        that:
        - result.snapshot.freeform_tags.resource_type == updated_snapshot_freeform_tags.resource_type
    # ===========================================================================================
    - name: Update defined tags of the Snapshot
      oci_file_storage_snapshot:
        id: "{{ snapshot_id }}"
        defined_tags: "{{ updated_snapshot_defined_tags }}"
        state: 'present'
      register: result

    - name: Assert that Snapshot defined tags has been updated
      assert:
        that:
        - result.snapshot.defined_tags.ansible_tag_namespace_integration_test_1.ansible_tag_1 == updated_snapshot_defined_tags.ansible_tag_namespace_integration_test_1.ansible_tag_1
    # ===========================================================================================
    - name: List All Snapshots under a File Systems
      oci_file_storage_snapshot_facts:
        file_system_id: "{{file_system_id}}"
      register: result

    - name: Assert that all Snapshots under the specific File System has been listed
      assert:
        that:
        - result.snapshots[0].name == snapshot_name
    # =======================================================================================
    - name: List a specific Snapshot
      oci_file_storage_snapshot_facts:
        id: "{{snapshot_id}}"
      register: result

    - name: Assert that specific Snapshot has been listed
      assert:
        that:
        - result.snapshots[0].name == snapshot_name
    # =======================================================================================

    # cleanup
    - name: Delete Snapshot
      oci_file_storage_snapshot:
        id: "{{snapshot_id}}"
        state: 'absent'
      register: result

    - name: Assert that Snapshot has been deleted
      assert:
        that:
        - result.changed == True
    # =======================================================================================
    - name: Try to Delete the same Snapshot, Idempotency test
      oci_file_storage_snapshot:
        id: "{{snapshot_id}}"
        state: 'absent'
      register: result

    - name: Assert that no state change happened
      assert:
        that:
        - result.changed == False
    # =======================================================================================
    - name: Delete Export
      oci_file_storage_export:
        export_id: "{{ export_id }}"
        state: 'absent'
      register: result

    - name: Assert that Export has been deleted
      assert:
        that:
        - result.changed == True
    # =======================================================================================
    - name: Try to Delete the same Export, Idempotency test
      oci_file_storage_export:
        export_id: "{{ export_id }}"
        state: 'absent'
      register: result

    - name: Assert that no state change happened
      assert:
        that:
        - result.changed == False
    # =======================================================================================
    - name: Delete File System
      oci_file_storage_file_system:
        id: "{{file_system_id}}"
        state: 'absent'
      register: result

    - name: Assert that File System has been deleted
      assert:
        that:
        - result.changed == True
    # =======================================================================================
    - name: Try to Delete the same File System, Idempotency test
      oci_file_storage_file_system:
        id: "{{file_system_id}}"
        state: 'absent'
      register: result

    - name: Assert that no state change happened
      assert:
        that:
        - result.changed == False
    # =======================================================================================

    - name: Delete Mount Target
      oci_file_storage_mount_target:
        id: "{{mount_target_id}}"
        state: 'absent'
      register: result

    - name: Assert that Mount Target has been deleted
      assert:
        that:
        - result.changed == True
    # =======================================================================================
    - name: Try to Delete the same Mount Target, Idempotency test
      oci_file_storage_mount_target:
        id: "{{mount_target_id}}"
        state: 'absent'
      register: result

    - name: Assert that no state change happened
      assert:
        that:
        - result.changed == False

  always:
    - name: Delete Snapshot
      oci_file_storage_snapshot:
        id: "{{snapshot_id}}"
        state: 'absent'
      register: result
      ignore_errors: yes

    - name: Delete Export
      oci_file_storage_export:
        export_id: "{{ export_id }}"
        state: 'absent'
      register: result
      ignore_errors: yes

    - name: Delete File System
      oci_file_storage_file_system:
        file_system_id: "{{file_system_id}}"
        state: 'absent'
      register: result
      ignore_errors: yes

    - name: Delete Mount Target
      oci_file_storage_mount_target:
        mount_target_id: "{{mount_target_id}}"
        state: 'absent'
      register: result
      ignore_errors: yes

  rescue:
    - fail:
        msg: "{{ ansible_failed_result }}"
