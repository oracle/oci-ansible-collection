- name: Delete replication_policy
  oci_object_storage_replication_policy:
    namespace_name: "{{test_namespace_name}}"
    bucket_name: "{{ region2_bucket_name }}"
    replication_id: "{{ setup_replication_policy_id }}"
    state: absent
    region: "{{ region2_name }}"
  when: setup_replication_policy_id is defined

- name: List objects for region2 bucket
  oci_object_storage_object_facts:
    namespace_name: "{{test_namespace_name}}"
    bucket_name: "{{region2_bucket_name}}"
    region: "{{ region2_name }}"
  register: result

- name: Delete objects in region2 bucket
  oci_object_storage_object:
    namespace_name: "{{test_namespace_name}}"
    bucket_name: "{{region2_bucket_name}}"
    object_name: "{{ item.name }}"
    state: absent
    region: "{{ region2_name }}"
  register: result
  loop: "{{ result.objects }}"

- name: Delete bucket in region2
  oci_object_storage_bucket:
    namespace_name: "{{test_namespace_name}}"
    name: "{{region2_bucket_name}}"
    state: 'absent'
    region: "{{ region2_name }}"
  register: result

- name: List objects for region1 bucket
  oci_object_storage_object_facts:
    namespace_name: "{{test_namespace_name}}"
    bucket_name: "{{region1_bucket_name}}"
  register: result

- name: Delete objects in region1 bucket
  oci_object_storage_object:
    namespace_name: "{{test_namespace_name}}"
    bucket_name: "{{region1_bucket_name}}"
    object_name: "{{ item.name }}"
    state: absent
  register: result
  loop: "{{ result.objects }}"

- name: Delete bucket
  oci_object_storage_bucket:
    namespace_name: "{{test_namespace_name}}"
    name: "{{region1_bucket_name}}"
    state: 'absent'
  register: result

- name: Suspend versioning
  oci_object_storage_bucket:
    namespace_name: "{{test_namespace_name}}"
    name: "{{versioned_bucket_name}}"
    versioning: "Suspended"
  register: result

- name: List object versions
  oci_object_storage_object_version_facts:
    namespace_name: "{{test_namespace_name}}"
    bucket_name: "{{versioned_bucket_name}}"
    prefix: "{{ versioned_object_name }}"
  register: result

- name: Delete versioned objects
  oci_object_storage_object:
    namespace_name: "{{test_namespace_name}}"
    bucket_name: "{{versioned_bucket_name}}"
    object_name: "{{ versioned_object_name }}"
    version_id: "{{ item.version_id }}"
    state: absent
  loop: "{{ result.object_versions }}"
  register: result

- name: Delete versioned bucket
  oci_object_storage_bucket:
    namespace_name: "{{test_namespace_name}}"
    name: "{{versioned_bucket_name}}"
    state: 'absent'
  register: result
