---
## Cleanup before test run
- name: Get facts about all instance pools in compartment
  oci_compute_management_instance_pool_facts:
    compartment_id: "{{test_compartment_ocid}}"
  register: currinstancepools

- set_fact:
    todeleteinstancepool_id: "{{item.id}}"
  when: (item.display_name == test_mod_instance_pool_name or item.display_name == test_instance_pool_name) and (item.lifecycle_state != "TERMINATED")
  with_items: "{{currinstancepools.instance_pools}}"
  ignore_errors: yes


- debug:
    msg: "Instance pool to delete: {{todeleteinstancepool_id}}"
  ignore_errors: yes

- name: Delete any left over instance pools
  oci_compute_management_instance_pool:
    id: "{{todeleteinstancepool_id}}"
    state: 'absent'
  ignore_errors: yes


- name: Get facts about all instance configurations in compartment
  oci_compute_management_instance_configuration_facts:
    compartment_id: "{{test_compartment_ocid}}"
  register: currinstanceconfigs

- set_fact:
    todeleteinstanceconfig_id: "{{item.id}}"
  when: (item.display_name == test_mod_instance_configuration_name or item.display_name == test_instance_configuration_name)
  with_items: "{{currinstanceconfigs.instance_configurations}}"
  ignore_errors: yes

- debug:
    msg: "Instance configuration to delete: {{todeleteinstanceconfig_id}}"
  ignore_errors: yes

- name: Delete any left over instance configurations
  oci_compute_management_instance_configuration:
    id: "{{todeleteinstanceconfig_id}}"
    state: 'absent'
  ignore_errors: yes


- block:

    # Test Instance pools
    ## Create/Launch
    - name: Create a new basic compute instance configuration that only has launch_details and VNIC configuration
      oci_compute_management_instance_configuration:
        compartment_id: "{{test_compartment_ocid}}"
        name: "{{test_instance_configuration_name}}"
        instance_details:
          instance_type: "compute"
          launch_details:
            compartment_id: "{{test_compartment_ocid}}"
            create_vnic_details:
              assign_public_ip: True
              display_name: "{{test_instance_name}}"
              skip_source_dest_check: False
            display_name: "{{test_instance_name}}"
            shape: "{{ test_instance_shape }}"
            source_details:
              source_type: "image"
              image_id: "{{image_ocid}}"
            freeform_tags: "{{ test_default_freeform_tags }}"
      register: result

    - set_fact:
        my_instance_config_ocid: "{{result.instance_configuration.id}}"

    - name: Create a new instance pool from this instance configuration
      oci_compute_management_instance_pool:
        name: "{{test_instance_pool_name}}"
        compartment_id: "{{test_compartment_ocid}}"
        instance_configuration_id: "{{my_instance_config_ocid}}"
        size: 1
        placement_configurations:
        - availability_domain: "{{test_availability_domain_3}}"
          primary_subnet_id: "{{common_subnet_id}}"
      register: result
    - set_fact:
        my_instance_pool_ocid: "{{result.instance_pool.id}}"
    - name: Assert that changed is true
      assert:
        that:
        - result.changed == True
        - result.instance_pool.display_name == "{{test_instance_pool_name}}"
        - result.instance_pool.lifecycle_state == "RUNNING"

    - name: Create a new instance pool from this instance configuration - idempotency test
      oci_compute_management_instance_pool:
        name: "{{test_instance_pool_name}}"
        compartment_id: "{{test_compartment_ocid}}"
        instance_configuration_id: "{{my_instance_config_ocid}}"
        size: 1
        placement_configurations:
        - availability_domain: "{{test_availability_domain_3}}"
          primary_subnet_id: "{{common_subnet_id}}"
      register: result
    - name: Assert that changed is False
      assert:
        that:
        - result.changed == False
        - result.instance_pool.id == "{{my_instance_pool_ocid}}"
        - result.instance_pool.display_name == "{{test_instance_pool_name}}"
        - result.instance_pool.lifecycle_state == "RUNNING"

    - oci_compute_management_instance_pool_instance_facts:
        compartment_id: "{{test_compartment_ocid}}"
        instance_pool_id: "{{my_instance_pool_ocid}}"
      register: result

    - oci_compute_instance_facts:
        id: "{{ item.id }}"
      loop: "{{ result.instance_pool_instances }}"
      register: result

    - name: Assert all instances in the instance pool are RUNNING
      assert:
        that:
          - item.instances[0].lifecycle_state == "RUNNING"
      loop: "{{ result.results }}"

    - name: Update display name of instance pool
      oci_compute_management_instance_pool:
        name: "{{test_mod_instance_pool_name}}"
        id: "{{my_instance_pool_ocid}}"
      register: result
    - name: Assert that the instance pool was renamed
      assert:
        that:
        - result.changed == True
        - result.instance_pool.display_name == test_mod_instance_pool_name
        - result.instance_pool.id == my_instance_pool_ocid

    - name: Update display name of instance pool - idempotency check
      oci_compute_management_instance_pool:
        name: "{{test_mod_instance_pool_name}}"
        id: "{{my_instance_pool_ocid}}"
      register: result
    - name: Assert that the instance pool was renamed and changed was false
      assert:
        that:
        - result.changed == False
        - result.instance_pool.display_name == test_mod_instance_pool_name
        - result.instance_pool.id == my_instance_pool_ocid

    # Power actions
    - name: Stop the instance pool
      oci_compute_management_instance_pool_actions:
        id: "{{my_instance_pool_ocid}}"
        action: 'stop'
      register: result
    - name: Assert that changed is true
      assert:
        that:
        - result.changed == True
        - result.instance_pool.display_name == test_mod_instance_pool_name
        - result.instance_pool.lifecycle_state == "STOPPED"
    - name: Stop the instance pool - idempotency
      oci_compute_management_instance_pool_actions:
        id: "{{my_instance_pool_ocid}}"
        action: 'stop'
      register: result
    - name: Assert that changed is false
      assert:
        that:
        - result.changed == False
        - result.instance_pool.display_name == test_mod_instance_pool_name
        - result.instance_pool.lifecycle_state == "STOPPED"
    - oci_compute_management_instance_pool_instance_facts:
        compartment_id: "{{test_compartment_ocid}}"
        instance_pool_id: "{{my_instance_pool_ocid}}"
      register: result

    - oci_compute_instance_facts:
        id: "{{ item.id }}"
      loop: "{{ result.instance_pool_instances }}"
      register: result

    - name: Assert all instances in the instance pool are STOPPED
      assert:
        that:
          - item.instances[0].lifecycle_state == "STOPPED"
      loop: "{{ result.results }}"

    - name: Start the instance pool
      oci_compute_management_instance_pool_actions:
        id: "{{my_instance_pool_ocid}}"
        action: 'start'
      register: result
    - name: Assert that changed is true
      assert:
        that:
        - result.changed == True
        - result.instance_pool.display_name == test_mod_instance_pool_name
        - result.instance_pool.lifecycle_state == "RUNNING"
    - name: Start the instance pool - idempotency
      oci_compute_management_instance_pool_actions:
        id: "{{my_instance_pool_ocid}}"
        action: 'start'
      register: result
    - name: Assert that changed is false
      assert:
        that:
        - result.changed == False
        - result.instance_pool.display_name == test_mod_instance_pool_name
        - result.instance_pool.lifecycle_state == "RUNNING"
    - oci_compute_management_instance_pool_instance_facts:
        compartment_id: "{{test_compartment_ocid}}"
        instance_pool_id: "{{my_instance_pool_ocid}}"
      register: result

    - oci_compute_instance_facts:
        id: "{{ item.id }}"
      loop: "{{ result.instance_pool_instances }}"
      register: result

    - name: Assert all instances in the instance pool are RUNNING
      assert:
        that:
          - item.instances[0].lifecycle_state == "RUNNING"
      loop: "{{ result.results }}"

    - name: Reset the instance pool
      oci_compute_management_instance_pool_actions:
        id: "{{my_instance_pool_ocid}}"
        action: 'reset'
      register: result
    - name: Assert that changed is true
      assert:
        that:
        - result.changed == True
        - result.instance_pool.display_name == test_mod_instance_pool_name
        - result.instance_pool.lifecycle_state == "RUNNING"
    - name: Reset the instance pool - no idempotency
      oci_compute_management_instance_pool_actions:
        id: "{{my_instance_pool_ocid}}"
        action: 'reset'
      register: result
    - name: Assert that changed is true
      assert:
        that:
        - result.changed == True
        - result.instance_pool.display_name == test_mod_instance_pool_name
        - result.instance_pool.lifecycle_state == "RUNNING"
    - oci_compute_management_instance_pool_instance_facts:
        compartment_id: "{{test_compartment_ocid}}"
        instance_pool_id: "{{my_instance_pool_ocid}}"
      register: result
    - oci_compute_instance_facts:
        id: "{{ item.id }}"
      loop: "{{ result.instance_pool_instances }}"
      register: result

    - name: Assert all instances in the instance pool are RUNNING
      assert:
        that:
          - item.instances[0].lifecycle_state == "RUNNING"
      loop: "{{ result.results }}"

    # soft reset instance pool takes a long time to complete (>10-15 mins). So commenting this scenario for now

    #- name: Soft-Reset the instance pool
    #  oci_compute_management_instance_pool_actions:
    #    id: "{{my_instance_pool_ocid}}"
    #    action: 'softreset'
    #  register: result
    #- debug:
    #      msg: "{{result}}"
    #- name: Assert that changed is true
    #  assert:
    #      that:
    #          - result.changed == True
    #          - result.instance_pool.display_name == "{{test_instance_pool_name}}"
    #          - result.instance_pool.lifecycle_state == "RUNNING"
    #- name: Soft-Reset the instance pool - no idempotency
    #  oci_compute_management_instance_pool_actions:
    #    id: "{{my_instance_pool_ocid}}"
    #    action: 'softreset'
    #  register: result
    #- debug:
    #      msg: "{{result}}"
    #- name: Assert that changed is true
    #  assert:
    #      that:
    #          - result.changed == True
    #          - result.instance_pool.display_name == "{{test_instance_pool_name}}"
    #          - result.instance_pool.lifecycle_state == "RUNNING"

    # TODO: Have tests for attaching/detaching load balancer once the load balancer modules are available

    - name: Get all instance pools in compartment
      oci_compute_management_instance_pool_facts:
        compartment_id: "{{test_compartment_ocid}}"
      register: result
    - set_fact:
        match_inst_pool_ocid: "{{item.id}}"
      when: (item.display_name == test_mod_instance_pool_name or item.display_name == test_instance_pool_name) and item.lifecycle_state == "RUNNING"
      with_items: "{{result.instance_pools}}"
    - name: Assert that the instance pool is listed
      assert:
        that:
        - match_inst_pool_ocid == my_instance_pool_ocid

    - name: Get a specific instance pool's details
      oci_compute_management_instance_pool_facts:
        compartment_id: "{{test_compartment_ocid}}"
        id: "{{my_instance_pool_ocid}}"
      register: result
    - name: Assert that the instance pool is listed
      assert:
        that:
        - result.instance_pools[0].id == my_instance_pool_ocid
        - result.instance_pools[0].display_name == test_mod_instance_pool_name

    - name: Get list of instances in a specific instance pool
      oci_compute_management_instance_pool_instance_facts:
        compartment_id: "{{test_compartment_ocid}}"
        instance_pool_id: "{{my_instance_pool_ocid}}"
      register: result
    - name: Assert that there is atleast one instance in the pool
      assert:
        that:
        - result.instance_pool_instances | length > 0

    - name: Delete the instance pool
      oci_compute_management_instance_pool:
        id: "{{my_instance_pool_ocid}}"
        state: 'absent'
      register: result
    - name: Assert that changed is true
      assert:
        that:
        - result.changed == True
        - result.instance_pool.display_name == test_mod_instance_pool_name

    - name: Delete the instance configuration
      oci_compute_management_instance_configuration:
        id: "{{my_instance_config_ocid}}"
        state: 'absent'
      register: result

  rescue:

    - name: Delete the instance pool
      oci_compute_management_instance_pool:
        id: "{{my_instance_pool_ocid}}"
        state: 'absent'
      register: result
      ignore_errors: yes

    - name: Delete the instance configuration
      oci_compute_management_instance_configuration:
        id: "{{my_instance_config_ocid}}"
        state: 'absent'
      register: result
      ignore_errors: yes

    - fail:
        msg: "{{ ansible_failed_result }}"
