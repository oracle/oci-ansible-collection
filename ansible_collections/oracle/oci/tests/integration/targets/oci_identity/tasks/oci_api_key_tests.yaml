# tests for `oci_api_key` and `oci_api_key_facts`
- block:
  - name: Create a test User
    oci_identity_user:
        compartment_id: "{{tenancy_ocid}}"
        name: "{{ test_user_name }}"
        description: "{{ test_user_description }}"
        state: 'present'
    register: result

  - set_fact:
      api_key_test_user_ocid: "{{ result.user.id }}"

  - name: Create a private key for testing api signing keys
    openssl_privatekey:
      path:  "{{ api_key_private_key_path }}"
      size: 2048
      cipher: aes128
      passphrase: "ansible"
  - name: Create a public key from that temp private key
    openssl_publickey:
      path: "{{ api_key_pub_key_path }}"
      privatekey_path: "{{ api_key_private_key_path }}"
      privatekey_passphrase: "ansible"
      force: True
    register: result

  - name: Create another private key for testing api signing keys
    openssl_privatekey:
      path:  "{{ another_api_key_private_key_path }}"
      size: 2048
      cipher: aes128
      passphrase: "ansible"
  - name: Create a public key from that temp private key
    openssl_publickey:
      path: "{{ another_api_key_pub_key_path }}"
      privatekey_path: "{{ another_api_key_private_key_path }}"
      privatekey_passphrase: "ansible"
      force: True
    register: result

  - name: Create an API Signing Key
    oci_identity_api_key:
      user_id: "{{ api_key_test_user_ocid }}"
      key: "{{ lookup('file', api_key_pub_key_path) }}"
    register: result
  - debug:
      msg: "Created API signing key {{result}}"
  - set_fact:
      api_signing_key_1_ocid: "{{ result.api_key.key_id }}"
      api_signing_key_1_fingerprint: "{{ result.api_key.fingerprint }}"
  - name: Assert that API Signing Key was created and is active
    assert:
      that:
          - result.changed == True
          - result.api_key.lifecycle_state == "ACTIVE"
  - debug:
      msg: "Created API signing key {{result}}"

  - name: Create an API Signing Key - idempotency test
    oci_identity_api_key:
      user_id: "{{ api_key_test_user_ocid }}"
      key: "{{ lookup('file', api_key_pub_key_path) }}"
    register: result
  - debug:
      msg: "Created API signing key {{result}}"
  - set_fact:
      idempotent_api_signing_key_ocid: "{{ result.api_key.key_id }}"
  - name: Assert that change is false
    assert:
      that:
          - result.changed == False
          - idempotent_api_signing_key_ocid == api_signing_key_1_ocid

  - name: Get API signing key facts about user
    oci_identity_api_key_facts:
      user_id: "{{ api_key_test_user_ocid }}"
    register: result
  - name: Assert that API Signing Key facts were retrieved
    assert:
      that:
          - result.changed == False
          - result.api_keys[0].lifecycle_state == "ACTIVE"
          - result.api_keys[0].key_id == api_signing_key_1_ocid
          - result.api_keys[0].fingerprint == api_signing_key_1_fingerprint
          - result.api_keys[0].key_value == lookup('file', api_key_pub_key_path)
    register: result

    # getting an API key by ID is no longer supported
    # this test shows how you can filter keys easily by ID
  - name: Get facts of a specific API signing key
    oci_identity_api_key_facts:
      user_id: "{{ api_key_test_user_ocid }}"
    register: result
  - debug: msg="{{result}}"

  # filter to specific key by ID
  - set_fact:
      specific_api_signing_key: "{{ item }}"
    loop: "{{ result.api_keys }}"
    when: item.key_id == api_signing_key_1_ocid

  - name: Assert we were able to filter to specific API signing key
    assert:
      that:
          - result.changed == False
          - specific_api_signing_key.lifecycle_state == "ACTIVE"
          - specific_api_signing_key.key_id == api_signing_key_1_ocid
          - specific_api_signing_key.fingerprint == api_signing_key_1_fingerprint
          - specific_api_signing_key.key_value == lookup('file', api_key_pub_key_path)
    register: result

  - name: Create another API Signing Key
    oci_identity_api_key:
      user_id: "{{ api_key_test_user_ocid }}"
      key: "{{ lookup('file', another_api_key_pub_key_path) }}"
    register: result
  - debug:
      msg: "Created API signing key {{result}}"
  - set_fact:
      another_api_signing_key_ocid: "{{ result.api_key.key_id }}"
      another_api_signing_key_fingerprint: "{{ result.api_key.fingerprint }}"
  - name: Assert that change is false
    assert:
      that:
          - result.changed == True
          - another_api_signing_key_ocid != api_signing_key_1_ocid

  - name: Delete the API Signing Key
    oci_identity_api_key:
      user_id: "{{ api_key_test_user_ocid }}"
      fingerprint: "{{ api_signing_key_1_fingerprint }}"
      state: "absent"
    register: result
  - name: Assert that API Signing Key was deleted
    assert:
      that:
          - result.changed == True
          - result.api_key.lifecycle_state == "DELETED"

  - name: Delete the API Signing Key
    oci_identity_api_key:
      user_id: "{{ api_key_test_user_ocid }}"
      fingerprint: "{{ another_api_signing_key_fingerprint }}"
      state: "absent"
    register: result
  - name: Assert that API Signing Key was deleted
    assert:
      that:
          - result.changed == True
          - result.api_key.lifecycle_state == "DELETED"

  - name: Delete the test User
    oci_identity_user:
        id: "{{ api_key_test_user_ocid }}"
        state: 'absent'
    register: result

  always:
    - name: Delete the API Signing Key
      oci_identity_api_key:
        user_id: "{{ api_key_test_user_ocid }}"
        fingerprint: "{{ api_signing_key_1_fingerprint }}"
        state: "absent"
      ignore_errors: yes

    - name: Delete the API Signing Key
      oci_identity_api_key:
        user_id: "{{ api_key_test_user_ocid }}"
        fingerprint: "{{ another_api_signing_key_fingerprint }}"
        state: "absent"
      ignore_errors: yes

    - name: Delete the temp public key
      openssl_publickey:
        path: "{{ api_key_pub_key_path }}"
        privatekey_path: "{{ api_key_private_key_path }}"
        state: "absent"
      ignore_errors: yes

    - name: Delete the temp private key
      openssl_privatekey:
        path: "{{ api_key_private_key_path }}"
        state: "absent"
      ignore_errors: yes

    - name: Delete the second temp public key
      openssl_publickey:
        path: "{{ another_api_key_pub_key_path }}"
        privatekey_path: "{{ another_api_key_private_key_path }}"
        state: "absent"
      ignore_errors: yes

    - name: Delete the second temp private key
      openssl_privatekey:
        path: "{{ another_api_key_private_key_path }}"
        state: "absent"
      ignore_errors: yes

    - name: Delete the test User
      oci_identity_user:
          id: "{{ api_key_test_user_ocid }}"
          state: 'absent'
      register: result
      ignore_errors: yes
