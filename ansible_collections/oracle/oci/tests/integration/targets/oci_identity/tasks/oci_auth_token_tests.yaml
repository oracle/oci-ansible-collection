# tests for `oci_auth_token` and `oci_auth_token_facts`
- name: Create a test User
  oci_identity_user:
      name: "{{ test_user_name }}"
      description: "{{ test_user_description }}"
      compartment_id: "{{ tenancy_ocid }}"
      state: 'present'
  register: result
- set_fact:
     auth_token_test_user_ocid: "{{ result.user.id }}"
- name:
  debug:
    msg: "User created for test {{ auth_token_test_user_ocid }}"


- name: Create an Auth Token
  oci_identity_auth_token:
    user_id: "{{ auth_token_test_user_ocid }}"
    description: "{{ auth_token_desc }}"
  register: result
- set_fact:
     auth_token_1_ocid: "{{ result.auth_token.id }}"
- debug:
    msg: "{{result}}"
- name: Assert that Auth token was created and is active
  assert:
    that:
        - result.changed == True
        - result.auth_token.lifecycle_state == "ACTIVE"
        - result.auth_token.token is not none

- name: Create an Auth Token - idempotency check
  oci_identity_auth_token:
    user_id: "{{ auth_token_test_user_ocid }}"
    description: "{{ auth_token_desc }}"
  register: result
- set_fact:
     idempotent_auth_token_ocid: "{{ result.auth_token.id }}"
- name: Assert that changed is False and the old auth token is returned
  assert:
    that:
        - result.changed == False
        - result.auth_token.lifecycle_state == "ACTIVE"
        - result.auth_token.token is defined
        - idempotent_auth_token_ocid == auth_token_1_ocid


- name: Get auth token facts about user
  oci_identity_auth_token_facts:
    user_id: "{{ auth_token_test_user_ocid }}"
  register: result
- name: Assert that auth token facts were retrieved
  assert:
    that:
        - result.changed == False
        - result.auth_tokens[0].lifecycle_state == "ACTIVE"
        - result.auth_tokens[0].id is defined

- name: Update description of Auth Token
  oci_identity_auth_token:
    user_id: "{{ auth_token_test_user_ocid }}"
    id: "{{ auth_token_1_ocid }}"
    description: "{{ auth_token_desc_updated }}"
  register: result
- name: Assert that Auth token was updated with new description and remains active
  assert:
    that:
        - result.changed == True
        - result.auth_token.lifecycle_state == "ACTIVE"
        - result.auth_token.description == auth_token_desc_updated

- name: Update description of Auth Token, idempotency test
  oci_identity_auth_token:
    user_id: "{{ auth_token_test_user_ocid }}"
    id: "{{ auth_token_1_ocid }}"
    description: "{{ auth_token_desc_updated }}"
  register: result
- name: Assert that Auth token was not changed
  assert:
    that:
        - result.changed == False
        - result.auth_token.lifecycle_state == "ACTIVE"
        - result.auth_token.description == auth_token_desc_updated

- name: Delete the Auth Token
  oci_identity_auth_token:
    user_id: "{{ auth_token_test_user_ocid }}"
    id: "{{ auth_token_1_ocid }}"
    state: "absent"
  register: result
- name: Assert that Auth token was deleted
  assert:
    that:
        - result.changed == True
        - result.auth_token.lifecycle_state == "DELETED"

- name: Try to Delete the same Auth Token, Idempotency test
  oci_identity_auth_token:
    user_id: "{{ auth_token_test_user_ocid }}"
    id: "{{ auth_token_1_ocid }}"
    state: "absent"
  register: result
- name: Assert that changed is False
  assert:
    that:
        - result.changed == False

- name: Delete the User
  oci_identity_user:
    id: "{{ auth_token_test_user_ocid }}"
    state: 'absent'
  register: result
