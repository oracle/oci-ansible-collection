---
- block:
  - name: Create dependency vcn with required parameters
    oci_network_vcn:
      cidr_block: "{{ '10.0.0.0/16' | oracle.oci.override(test_subnet_create_dependency_vcn_cidr_block, omit) }}"
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_subnet_create_dependency_vcn_compartment_id, omit) }}"
      display_name: "{{ ('MyVcn' + random_suffix_1024) | oracle.oci.override(test_subnet_create_dependency_vcn_display_name, omit) }}"
    register: result
    when: skip_subnet_create_dependency_vcn_test is not defined and skip_subnet_dependencies is not defined
  - name: Assert resource was created
    assert:
      that:
        - result.changed == True
    when: skip_subnet_create_dependency_vcn_test is not defined and skip_subnet_dependencies is not defined
  - set_fact:
      dependency_vcn: "{{ result.vcn }}"
      dependency_vcn_id: "{{ result.vcn.id }}"
    when: skip_subnet_create_dependency_vcn_test is not defined and skip_subnet_dependencies is not defined
  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ subnet_create_dependency_vcn_custom_assertions }}"
    when: subnet_create_dependency_vcn_custom_assertions is defined

# ==================================================================================================== #

  - set_fact:
      test_subnet_create_dependency_dhcp_options_options:
      - type: "{{ 'DomainNameServer' | oracle.oci.override(test_subnet_create_dependency_dhcp_options_options_type, omit) }}"
        custom_dns_servers: "{{ [ '202.44.61.9' ] | oracle.oci.override(test_subnet_create_dependency_dhcp_options_options_custom_dns_servers, omit) }}"
        server_type: "{{ 'CustomDnsServer' | oracle.oci.override(test_subnet_create_dependency_dhcp_options_options_server_type, omit) }}"
    when: skip_subnet_create_dependency_dhcp_options_test is not defined and skip_subnet_dependencies is not defined and test_subnet_create_dependency_dhcp_options_options is not defined

  - name: Create dependency dhcp_options with required parameters
    oci_network_dhcp_options:
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_subnet_create_dependency_dhcp_options_compartment_id, omit) }}"
      display_name: "{{ ('MyDhcpOptions' + random_suffix_1024) | oracle.oci.override(test_subnet_create_dependency_dhcp_options_display_name, omit) }}"
      options: "{{ '[]' | oracle.oci.override(test_subnet_create_dependency_dhcp_options_options, omit) }}"
      vcn_id: "{{ dependency_vcn_id | oracle.oci.override(test_subnet_create_dependency_dhcp_options_vcn_id, omit) }}"
    register: result
    when: skip_subnet_create_dependency_dhcp_options_test is not defined and skip_subnet_dependencies is not defined
  - name: Assert resource was created
    assert:
      that:
        - result.changed == True
    when: skip_subnet_create_dependency_dhcp_options_test is not defined and skip_subnet_dependencies is not defined
  - set_fact:
      dependency_dhcp_options: "{{ result.dhcp_options }}"
      dependency_dhcp_options_id: "{{ result.dhcp_options.id }}"
    when: skip_subnet_create_dependency_dhcp_options_test is not defined and skip_subnet_dependencies is not defined
  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ subnet_create_dependency_dhcp_options_custom_assertions }}"
    when: subnet_create_dependency_dhcp_options_custom_assertions is defined

# ==================================================================================================== #

  - set_fact:
      test_subnet_create_dependency_route_table_route_rules:
      - cidr_block: "{{ '0.0.0.0/0' | oracle.oci.override(test_subnet_create_dependency_route_table_route_rules_cidr_block, omit) }}"
        destination: "{{ 'destination_example' | oracle.oci.override(test_subnet_create_dependency_route_table_route_rules_destination, omit) }}"
        destination_type: "{{ 'CIDR_BLOCK' | oracle.oci.override(test_subnet_create_dependency_route_table_route_rules_destination_type, omit) }}"
        network_entity_id: "{{ dependency_network_entity_id | oracle.oci.override(test_subnet_create_dependency_route_table_route_rules_network_entity_id, omit) }}"
    when: skip_subnet_create_dependency_route_table_test is not defined and skip_subnet_dependencies is not defined and test_subnet_create_dependency_route_table_route_rules is not defined

  - name: Create dependency route_table with required parameters
    oci_network_route_table:
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_subnet_create_dependency_route_table_compartment_id, omit) }}"
      display_name: "{{ ('MyRouteTable' + random_suffix_1024) | oracle.oci.override(test_subnet_create_dependency_route_table_display_name, omit) }}"
      route_rules: "{{ '[]' | oracle.oci.override(test_subnet_create_dependency_route_table_route_rules, omit) }}"
      vcn_id: "{{ dependency_vcn_id | oracle.oci.override(test_subnet_create_dependency_route_table_vcn_id, omit) }}"
    register: result
    when: skip_subnet_create_dependency_route_table_test is not defined and skip_subnet_dependencies is not defined
  - name: Assert resource was created
    assert:
      that:
        - result.changed == True
    when: skip_subnet_create_dependency_route_table_test is not defined and skip_subnet_dependencies is not defined
  - set_fact:
      dependency_route_table: "{{ result.route_table }}"
      dependency_route_table_id: "{{ result.route_table.id }}"
    when: skip_subnet_create_dependency_route_table_test is not defined and skip_subnet_dependencies is not defined
  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ subnet_create_dependency_route_table_custom_assertions }}"
    when: subnet_create_dependency_route_table_custom_assertions is defined

# ==================================================================================================== #

  - name: Create subnet (check mode)
    oci_network_subnet:
      cidr_block: "{{ '10.0.2.0/24' | oracle.oci.override(test_subnet_create_required_cidr_block, omit) }}"
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_subnet_create_required_compartment_id, omit) }}"
      display_name: "{{ ('MySubnet' + random_suffix_1024) | oracle.oci.override(test_subnet_create_required_display_name, omit) }}"
      vcn_id: "{{ dependency_vcn_id | oracle.oci.override(test_subnet_create_required_vcn_id, omit) }}"
    register: result
    check_mode: yes
    when: skip_subnet_create_check_mode_test is not defined

  - name: Assert resource would have been created
    assert:
      that:
        - result.changed == True
    when: skip_subnet_create_check_mode_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ subnet_create_check_mode_custom_assertions }}"
    when: subnet_create_check_mode_custom_assertions is defined

# ==================================================================================================== #

  - name: Create subnet with required parameters
    oci_network_subnet:
      cidr_block: "{{ '10.0.2.0/24' | oracle.oci.override(test_subnet_create_required_cidr_block, omit) }}"
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_subnet_create_required_compartment_id, omit) }}"
      display_name: "{{ ('MySubnet' + random_suffix_1024) | oracle.oci.override(test_subnet_create_required_display_name, omit) }}"
      vcn_id: "{{ dependency_vcn_id | oracle.oci.override(test_subnet_create_required_vcn_id, omit) }}"
    register: result
    when: skip_subnet_create_required_original_test is not defined

  - name: Assert resource was created
    assert:
      that:
        - result.changed == True
    when: skip_subnet_create_required_original_test is not defined

  - set_fact:
      subnet_resource_id: "{{ result.subnet.id }}"
    when: skip_subnet_create_required_original_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - result.subnet.availability_domain is defined
        - result.subnet.cidr_block is defined
        - result.subnet.compartment_id is defined
        - result.subnet.defined_tags is defined
        - result.subnet.dhcp_options_id is defined
        - result.subnet.display_name is defined
        - result.subnet.dns_label is defined
        - result.subnet.freeform_tags is defined
        - result.subnet.id is defined
        - result.subnet.lifecycle_state is defined
        - result.subnet.prohibit_public_ip_on_vnic is defined
        - result.subnet.route_table_id is defined
        - result.subnet.security_list_ids is defined
        - result.subnet.subnet_domain_name is defined
        - result.subnet.time_created is defined
        - result.subnet.vcn_id is defined
        - result.subnet.virtual_router_ip is defined
        - result.subnet.virtual_router_mac is defined
    when: skip_subnet_create_required_original_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ subnet_create_required_original_custom_assertions }}"
    when: subnet_create_required_original_custom_assertions is defined

# ==================================================================================================== #

  - name: Re-create subnet with required parameters(idempotency)
    oci_network_subnet:
      cidr_block: "{{ '10.0.2.0/24' | oracle.oci.override(test_subnet_create_required_cidr_block, omit) }}"
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_subnet_create_required_compartment_id, omit) }}"
      display_name: "{{ ('MySubnet' + random_suffix_1024) | oracle.oci.override(test_subnet_create_required_display_name, omit) }}"
      vcn_id: "{{ dependency_vcn_id | oracle.oci.override(test_subnet_create_required_vcn_id, omit) }}"
    register: result
    when: skip_subnet_create_required_idempotency_test is not defined

  - name: Assert changed is False
    assert:
      that:
        - result.changed == False
    when: skip_subnet_create_required_idempotency_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - result.subnet.availability_domain is defined
        - result.subnet.cidr_block is defined
        - result.subnet.compartment_id is defined
        - result.subnet.defined_tags is defined
        - result.subnet.dhcp_options_id is defined
        - result.subnet.display_name is defined
        - result.subnet.dns_label is defined
        - result.subnet.freeform_tags is defined
        - result.subnet.id is defined
        - result.subnet.lifecycle_state is defined
        - result.subnet.prohibit_public_ip_on_vnic is defined
        - result.subnet.route_table_id is defined
        - result.subnet.security_list_ids is defined
        - result.subnet.subnet_domain_name is defined
        - result.subnet.time_created is defined
        - result.subnet.vcn_id is defined
        - result.subnet.virtual_router_ip is defined
        - result.subnet.virtual_router_mac is defined
    when: skip_subnet_create_required_idempotency_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ subnet_create_required_idempotency_custom_assertions }}"
    when: subnet_create_required_idempotency_custom_assertions is defined

# ==================================================================================================== #

  - name: Update subnet using name with optional + required parameters
    oci_network_subnet:
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_subnet_update_using_name_optional_required_compartment_id, omit) }}"
      defined_tags: "{{ test_default_updated_defined_tags | oracle.oci.override(test_subnet_update_using_name_optional_required_defined_tags, omit) }}"
      dhcp_options_id: "{{ dependency_dhcp_options_id | oracle.oci.override(test_subnet_update_using_name_optional_required_dhcp_options_id, omit) }}"
      display_name: "{{ ('MySubnet' + random_suffix_1024) | oracle.oci.override(test_subnet_update_using_name_optional_required_display_name, omit) }}"
      freeform_tags: "{{ test_default_updated_freeform_tags | oracle.oci.override(test_subnet_update_using_name_optional_required_freeform_tags, omit) }}"
      route_table_id: "{{ dependency_route_table_id | oracle.oci.override(test_subnet_update_using_name_optional_required_route_table_id, omit) }}"
      security_list_ids: "{{ [ 'ocid1.securitylist.oc1.phx.aaaaaaaadyndu2n3hcmdsjfiljwyq7vpxsvv7ynp4ori7aealcvhzicnzhyq' ] | oracle.oci.override(test_subnet_update_using_name_optional_required_security_list_ids, omit) }}"
      vcn_id: "{{ dependency_vcn_id | oracle.oci.override(test_subnet_update_using_name_optional_required_vcn_id, omit) }}"
    environment:
      OCI_USE_NAME_AS_IDENTIFIER: 1
    register: result
    when: skip_subnet_update_using_name_optional_required_test is not defined

  - name: Assert resource was updated
    assert:
      that:
        - result.changed == True
    when: skip_subnet_update_using_name_optional_required_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - result.subnet.availability_domain is defined
        - result.subnet.cidr_block is defined
        - result.subnet.compartment_id is defined
        - result.subnet.defined_tags is defined
        - result.subnet.dhcp_options_id is defined
        - result.subnet.display_name is defined
        - result.subnet.dns_label is defined
        - result.subnet.freeform_tags is defined
        - result.subnet.id is defined
        - result.subnet.lifecycle_state is defined
        - result.subnet.prohibit_public_ip_on_vnic is defined
        - result.subnet.route_table_id is defined
        - result.subnet.security_list_ids is defined
        - result.subnet.subnet_domain_name is defined
        - result.subnet.time_created is defined
        - result.subnet.vcn_id is defined
        - result.subnet.virtual_router_ip is defined
        - result.subnet.virtual_router_mac is defined
    when: skip_subnet_update_using_name_optional_required_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ subnet_update_using_name_optional_required_custom_assertions }}"
    when: subnet_update_using_name_optional_required_custom_assertions is defined

# ==================================================================================================== #

  - name: Update subnet using name with optional + required parameters (idempotence)
    oci_network_subnet:
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_subnet_update_using_name_optional_required_compartment_id, omit) }}"
      defined_tags: "{{ test_default_updated_defined_tags | oracle.oci.override(test_subnet_update_using_name_optional_required_defined_tags, omit) }}"
      dhcp_options_id: "{{ dependency_dhcp_options_id | oracle.oci.override(test_subnet_update_using_name_optional_required_dhcp_options_id, omit) }}"
      display_name: "{{ ('MySubnet' + random_suffix_1024) | oracle.oci.override(test_subnet_update_using_name_optional_required_display_name, omit) }}"
      freeform_tags: "{{ test_default_updated_freeform_tags | oracle.oci.override(test_subnet_update_using_name_optional_required_freeform_tags, omit) }}"
      route_table_id: "{{ dependency_route_table_id | oracle.oci.override(test_subnet_update_using_name_optional_required_route_table_id, omit) }}"
      security_list_ids: "{{ [ 'ocid1.securitylist.oc1.phx.aaaaaaaadyndu2n3hcmdsjfiljwyq7vpxsvv7ynp4ori7aealcvhzicnzhyq' ] | oracle.oci.override(test_subnet_update_using_name_optional_required_security_list_ids, omit) }}"
      vcn_id: "{{ dependency_vcn_id | oracle.oci.override(test_subnet_update_using_name_optional_required_vcn_id, omit) }}"
    environment:
      OCI_USE_NAME_AS_IDENTIFIER: 1
    register: result
    when: skip_subnet_update_using_name_optional_required_idempotence_test is not defined

  - name: Assert changed is False
    assert:
      that:
        - result.changed == False
    when: skip_subnet_update_using_name_optional_required_idempotence_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - result.subnet.availability_domain is defined
        - result.subnet.cidr_block is defined
        - result.subnet.compartment_id is defined
        - result.subnet.defined_tags is defined
        - result.subnet.dhcp_options_id is defined
        - result.subnet.display_name is defined
        - result.subnet.dns_label is defined
        - result.subnet.freeform_tags is defined
        - result.subnet.id is defined
        - result.subnet.lifecycle_state is defined
        - result.subnet.prohibit_public_ip_on_vnic is defined
        - result.subnet.route_table_id is defined
        - result.subnet.security_list_ids is defined
        - result.subnet.subnet_domain_name is defined
        - result.subnet.time_created is defined
        - result.subnet.vcn_id is defined
        - result.subnet.virtual_router_ip is defined
        - result.subnet.virtual_router_mac is defined
    when: skip_subnet_update_using_name_optional_required_idempotence_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ subnet_update_using_name_optional_required_idempotence_custom_assertions }}"
    when: subnet_update_using_name_optional_required_idempotence_custom_assertions is defined

# ==================================================================================================== #

  - name: Delete subnet
    oci_network_subnet:
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_subnet_delete_required_compartment_id, omit) }}"
      display_name: "{{ ('MySubnet' + random_suffix_1024) | oracle.oci.override(test_subnet_delete_required_display_name, omit) }}"
      vcn_id: "{{ dependency_vcn_id | oracle.oci.override(test_subnet_delete_required_vcn_id, omit) }}"
      state: absent
    environment:
      OCI_USE_NAME_AS_IDENTIFIER: 1
    register: result
    when: skip_subnet_delete_required_test is not defined

  - name: Assert resource was deleted
    assert:
      that:
        - result.changed == True
    when: skip_subnet_delete_required_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - result.subnet.availability_domain is defined
        - result.subnet.cidr_block is defined
        - result.subnet.compartment_id is defined
        - result.subnet.defined_tags is defined
        - result.subnet.dhcp_options_id is defined
        - result.subnet.display_name is defined
        - result.subnet.dns_label is defined
        - result.subnet.freeform_tags is defined
        - result.subnet.id is defined
        - result.subnet.lifecycle_state is defined
        - result.subnet.prohibit_public_ip_on_vnic is defined
        - result.subnet.route_table_id is defined
        - result.subnet.security_list_ids is defined
        - result.subnet.subnet_domain_name is defined
        - result.subnet.time_created is defined
        - result.subnet.vcn_id is defined
        - result.subnet.virtual_router_ip is defined
        - result.subnet.virtual_router_mac is defined
    when: skip_subnet_delete_required_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ subnet_delete_required_custom_assertions }}"
    when: subnet_delete_required_custom_assertions is defined

# ==================================================================================================== #

  - name: Delete subnet (idempotency)
    oci_network_subnet:
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_subnet_delete_required_compartment_id, omit) }}"
      display_name: "{{ ('MySubnet' + random_suffix_1024) | oracle.oci.override(test_subnet_delete_required_display_name, omit) }}"
      vcn_id: "{{ dependency_vcn_id | oracle.oci.override(test_subnet_delete_required_vcn_id, omit) }}"
      state: absent
    environment:
      OCI_USE_NAME_AS_IDENTIFIER: 1
    register: result
    when: skip_subnet_delete_required_idempotency_test is not defined

  - name: Assert changed is False
    assert:
      that:
        - result.changed == False
    when: skip_subnet_delete_required_idempotency_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ subnet_delete_required_idempotency_custom_assertions }}"
    when: subnet_delete_required_idempotency_custom_assertions is defined

# ==================================================================================================== #

  - name: Create subnet with optional + required parameters
    oci_network_subnet:
      availability_domain: "{{ test_availability_domain | oracle.oci.override(test_subnet_create_optional_required_availability_domain, omit) }}"
      cidr_block: "{{ '10.0.2.0/24' | oracle.oci.override(test_subnet_create_optional_required_cidr_block, omit) }}"
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_subnet_create_optional_required_compartment_id, omit) }}"
      defined_tags: "{{ test_default_defined_tags | oracle.oci.override(test_subnet_create_optional_required_defined_tags, omit) }}"
      dhcp_options_id: "{{ dependency_dhcp_options_id | oracle.oci.override(test_subnet_create_optional_required_dhcp_options_id, omit) }}"
      display_name: "{{ ('MySubnet' + random_suffix_1024) | oracle.oci.override(test_subnet_create_optional_required_display_name, omit) }}"
      dns_label: "{{ 'subnet123' | oracle.oci.override(test_subnet_create_optional_required_dns_label, omit) }}"
      freeform_tags: "{{ {'Department': 'Finance'} | oracle.oci.override(test_subnet_create_optional_required_freeform_tags, omit) }}"
      prohibit_public_ip_on_vnic: "{{ true | oracle.oci.override(test_subnet_create_optional_required_prohibit_public_ip_on_vnic, omit) }}"
      route_table_id: "{{ dependency_route_table_id | oracle.oci.override(test_subnet_create_optional_required_route_table_id, omit) }}"
      security_list_ids: "{{ [ 'ocid1.securitylist.oc1.phx.aaaaaaaadyndu2n3hcmdsjfiljwyq7vpxsvv7ynp4ori7aealcvhzicnzhyq' ] | oracle.oci.override(test_subnet_create_optional_required_security_list_ids, omit) }}"
      vcn_id: "{{ dependency_vcn_id | oracle.oci.override(test_subnet_create_optional_required_vcn_id, omit) }}"
    register: result
    when: skip_subnet_create_optional_required_original_test is not defined

  - name: Assert changed is True
    assert:
      that:
        - result.changed == True
    when: skip_subnet_create_optional_required_original_test is not defined

  - set_fact:
      subnet_resource_id: "{{ result.subnet.id }}"
    when: skip_subnet_create_optional_required_original_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - result.subnet.availability_domain is defined
        - result.subnet.cidr_block is defined
        - result.subnet.compartment_id is defined
        - result.subnet.defined_tags is defined
        - result.subnet.dhcp_options_id is defined
        - result.subnet.display_name is defined
        - result.subnet.dns_label is defined
        - result.subnet.freeform_tags is defined
        - result.subnet.id is defined
        - result.subnet.lifecycle_state is defined
        - result.subnet.prohibit_public_ip_on_vnic is defined
        - result.subnet.route_table_id is defined
        - result.subnet.security_list_ids is defined
        - result.subnet.subnet_domain_name is defined
        - result.subnet.time_created is defined
        - result.subnet.vcn_id is defined
        - result.subnet.virtual_router_ip is defined
        - result.subnet.virtual_router_mac is defined
    when: skip_subnet_create_optional_required_original_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ subnet_create_optional_required_original_custom_assertions }}"
    when: subnet_create_optional_required_original_custom_assertions is defined

# ==================================================================================================== #

  - name: Re-create subnet with optional + required parameters (idempotence)
    oci_network_subnet:
      availability_domain: "{{ test_availability_domain | oracle.oci.override(test_subnet_create_optional_required_availability_domain, omit) }}"
      cidr_block: "{{ '10.0.2.0/24' | oracle.oci.override(test_subnet_create_optional_required_cidr_block, omit) }}"
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_subnet_create_optional_required_compartment_id, omit) }}"
      defined_tags: "{{ test_default_defined_tags | oracle.oci.override(test_subnet_create_optional_required_defined_tags, omit) }}"
      dhcp_options_id: "{{ dependency_dhcp_options_id | oracle.oci.override(test_subnet_create_optional_required_dhcp_options_id, omit) }}"
      display_name: "{{ ('MySubnet' + random_suffix_1024) | oracle.oci.override(test_subnet_create_optional_required_display_name, omit) }}"
      dns_label: "{{ 'subnet123' | oracle.oci.override(test_subnet_create_optional_required_dns_label, omit) }}"
      freeform_tags: "{{ {'Department': 'Finance'} | oracle.oci.override(test_subnet_create_optional_required_freeform_tags, omit) }}"
      prohibit_public_ip_on_vnic: "{{ true | oracle.oci.override(test_subnet_create_optional_required_prohibit_public_ip_on_vnic, omit) }}"
      route_table_id: "{{ dependency_route_table_id | oracle.oci.override(test_subnet_create_optional_required_route_table_id, omit) }}"
      security_list_ids: "{{ [ 'ocid1.securitylist.oc1.phx.aaaaaaaadyndu2n3hcmdsjfiljwyq7vpxsvv7ynp4ori7aealcvhzicnzhyq' ] | oracle.oci.override(test_subnet_create_optional_required_security_list_ids, omit) }}"
      vcn_id: "{{ dependency_vcn_id | oracle.oci.override(test_subnet_create_optional_required_vcn_id, omit) }}"
    register: result
    when: skip_subnet_create_optional_required_idempotence_test is not defined

  - name: Assert changed is False
    assert:
      that:
        - result.changed == False
    when: skip_subnet_create_optional_required_idempotence_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - result.subnet.availability_domain is defined
        - result.subnet.cidr_block is defined
        - result.subnet.compartment_id is defined
        - result.subnet.defined_tags is defined
        - result.subnet.dhcp_options_id is defined
        - result.subnet.display_name is defined
        - result.subnet.dns_label is defined
        - result.subnet.freeform_tags is defined
        - result.subnet.id is defined
        - result.subnet.lifecycle_state is defined
        - result.subnet.prohibit_public_ip_on_vnic is defined
        - result.subnet.route_table_id is defined
        - result.subnet.security_list_ids is defined
        - result.subnet.subnet_domain_name is defined
        - result.subnet.time_created is defined
        - result.subnet.vcn_id is defined
        - result.subnet.virtual_router_ip is defined
        - result.subnet.virtual_router_mac is defined
    when: skip_subnet_create_optional_required_idempotence_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ subnet_create_optional_required_idempotence_custom_assertions }}"
    when: subnet_create_optional_required_idempotence_custom_assertions is defined

# ==================================================================================================== #

  - name: Update subnet with optional + required parameters
    oci_network_subnet:
      defined_tags: "{{ test_default_updated_defined_tags | oracle.oci.override(test_subnet_update_optional_required_defined_tags, omit) }}"
      dhcp_options_id: "{{ dependency_dhcp_options_id | oracle.oci.override(test_subnet_update_optional_required_dhcp_options_id, omit) }}"
      display_name: "{{ ('MySubnetupdated' + random_suffix_1024) | oracle.oci.override(test_subnet_update_optional_required_display_name, omit) }}"
      freeform_tags: "{{ test_default_updated_freeform_tags | oracle.oci.override(test_subnet_update_optional_required_freeform_tags, omit) }}"
      route_table_id: "{{ dependency_route_table_id | oracle.oci.override(test_subnet_update_optional_required_route_table_id, omit) }}"
      security_list_ids: "{{ [ 'ocid1.securitylist.oc1.phx.aaaaaaaadyndu2n3hcmdsjfiljwyq7vpxsvv7ynp4ori7aealcvhzicnzhyq' ] | oracle.oci.override(test_subnet_update_optional_required_security_list_ids, omit) }}"
      subnet_id: "{{ subnet_resource_id | oracle.oci.override(test_subnet_update_optional_required_subnet_id, omit) }}"
    register: result
    when: skip_subnet_update_optional_required_test is not defined

  - name: Assert resource was updated
    assert:
      that:
        - result.changed == True
    when: skip_subnet_update_optional_required_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - result.subnet.availability_domain is defined
        - result.subnet.cidr_block is defined
        - result.subnet.compartment_id is defined
        - result.subnet.defined_tags is defined
        - result.subnet.dhcp_options_id is defined
        - result.subnet.display_name is defined
        - result.subnet.dns_label is defined
        - result.subnet.freeform_tags is defined
        - result.subnet.id is defined
        - result.subnet.lifecycle_state is defined
        - result.subnet.prohibit_public_ip_on_vnic is defined
        - result.subnet.route_table_id is defined
        - result.subnet.security_list_ids is defined
        - result.subnet.subnet_domain_name is defined
        - result.subnet.time_created is defined
        - result.subnet.vcn_id is defined
        - result.subnet.virtual_router_ip is defined
        - result.subnet.virtual_router_mac is defined
    when: skip_subnet_update_optional_required_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ subnet_update_optional_required_custom_assertions }}"
    when: subnet_update_optional_required_custom_assertions is defined

# ==================================================================================================== #

  - name: Update subnet with optional + required parameters (idempotence)
    oci_network_subnet:
      defined_tags: "{{ test_default_updated_defined_tags | oracle.oci.override(test_subnet_update_optional_required_defined_tags, omit) }}"
      dhcp_options_id: "{{ dependency_dhcp_options_id | oracle.oci.override(test_subnet_update_optional_required_dhcp_options_id, omit) }}"
      display_name: "{{ ('MySubnetupdated' + random_suffix_1024) | oracle.oci.override(test_subnet_update_optional_required_display_name, omit) }}"
      freeform_tags: "{{ test_default_updated_freeform_tags | oracle.oci.override(test_subnet_update_optional_required_freeform_tags, omit) }}"
      route_table_id: "{{ dependency_route_table_id | oracle.oci.override(test_subnet_update_optional_required_route_table_id, omit) }}"
      security_list_ids: "{{ [ 'ocid1.securitylist.oc1.phx.aaaaaaaadyndu2n3hcmdsjfiljwyq7vpxsvv7ynp4ori7aealcvhzicnzhyq' ] | oracle.oci.override(test_subnet_update_optional_required_security_list_ids, omit) }}"
      subnet_id: "{{ subnet_resource_id | oracle.oci.override(test_subnet_update_optional_required_subnet_id, omit) }}"
    register: result
    when: skip_subnet_update_optional_required_idempotence_test is not defined

  - name: Assert changed is False
    assert:
      that:
        - result.changed == False
    when: skip_subnet_update_optional_required_idempotence_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - result.subnet.availability_domain is defined
        - result.subnet.cidr_block is defined
        - result.subnet.compartment_id is defined
        - result.subnet.defined_tags is defined
        - result.subnet.dhcp_options_id is defined
        - result.subnet.display_name is defined
        - result.subnet.dns_label is defined
        - result.subnet.freeform_tags is defined
        - result.subnet.id is defined
        - result.subnet.lifecycle_state is defined
        - result.subnet.prohibit_public_ip_on_vnic is defined
        - result.subnet.route_table_id is defined
        - result.subnet.security_list_ids is defined
        - result.subnet.subnet_domain_name is defined
        - result.subnet.time_created is defined
        - result.subnet.vcn_id is defined
        - result.subnet.virtual_router_ip is defined
        - result.subnet.virtual_router_mac is defined
    when: skip_subnet_update_optional_required_idempotence_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ subnet_update_optional_required_idempotence_custom_assertions }}"
    when: subnet_update_optional_required_idempotence_custom_assertions is defined

# ==================================================================================================== #

  - name: List subnets
    oci_network_subnet_facts:
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_subnet_list_compartment_id, omit) }}"
      vcn_id: "{{ dependency_vcn_id | oracle.oci.override(test_subnet_list_vcn_id, omit) }}"
    register: result
    when: skip_subnet_list_test is not defined

  - name: Assert resource was listed
    assert:
      that:
        - result.subnets | length > 0
    when: skip_subnet_list_test is not defined


  - name: Assert response properties are populated
    assert:
      that:
        - item.availability_domain is defined
        - item.cidr_block is defined
        - item.compartment_id is defined
        - item.defined_tags is defined
        - item.dhcp_options_id is defined
        - item.display_name is defined
        - item.dns_label is defined
        - item.freeform_tags is defined
        - item.id is defined
        - item.lifecycle_state is defined
        - item.prohibit_public_ip_on_vnic is defined
        - item.route_table_id is defined
        - item.security_list_ids is defined
        - item.subnet_domain_name is defined
        - item.time_created is defined
        - item.vcn_id is defined
        - item.virtual_router_ip is defined
        - item.virtual_router_mac is defined
    with_items: "{{ result.subnets }}"
    when: skip_subnet_list_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ subnet_list_custom_assertions }}"
    when: subnet_list_custom_assertions is defined

# ==================================================================================================== #

  - name: Get subnet
    oci_network_subnet_facts:
      subnet_id: "{{ subnet_resource_id | oracle.oci.override(test_subnet_get_subnet_id, omit) }}"
    register: result
    when: skip_subnet_get_test is not defined

  - name: Assert resource was listed
    assert:
      that:
        - result.subnets | length == 1
    when: skip_subnet_get_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - item.availability_domain is defined
        - item.cidr_block is defined
        - item.compartment_id is defined
        - item.defined_tags is defined
        - item.dhcp_options_id is defined
        - item.display_name is defined
        - item.dns_label is defined
        - item.freeform_tags is defined
        - item.id is defined
        - item.lifecycle_state is defined
        - item.prohibit_public_ip_on_vnic is defined
        - item.route_table_id is defined
        - item.security_list_ids is defined
        - item.subnet_domain_name is defined
        - item.time_created is defined
        - item.vcn_id is defined
        - item.virtual_router_ip is defined
        - item.virtual_router_mac is defined
    with_items: "{{ result.subnets }}"
    when: skip_subnet_get_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ subnet_get_custom_assertions }}"
    when: subnet_get_custom_assertions is defined

  always:

    - name: Delete subnet
      oci_network_subnet:
        subnet_id: "{{ subnet_resource_id | oracle.oci.override(test_subnet_delete_rescue_subnet_id, omit) }}"
        state: absent
      register: result
      ignore_errors: yes
      when: subnet_resource_id is defined

    - name: Delete dependency route_table
      oci_network_route_table:
        rt_id: "{{ dependency_route_table_id }}"
        state: absent
      ignore_errors: yes
      when: skip_subnet_delete_dependency_route_table_test is not defined and skip_subnet_dependencies is not defined and dependency_route_table_id is defined

    - name: Delete dependency dhcp_options
      oci_network_dhcp_options:
        dhcp_id: "{{ dependency_dhcp_options_id }}"
        state: absent
      ignore_errors: yes
      when: skip_subnet_delete_dependency_dhcp_options_test is not defined and skip_subnet_dependencies is not defined and dependency_dhcp_options_id is defined

    - name: Delete dependency vcn
      oci_network_vcn:
        vcn_id: "{{ dependency_vcn_id }}"
        state: absent
      ignore_errors: yes
      when: skip_subnet_delete_dependency_vcn_test is not defined and skip_subnet_dependencies is not defined and dependency_vcn_id is defined
