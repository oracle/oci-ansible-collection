## DYNAMIC GROUP
test_dynamic_group_create_required_compartment_id: "{{ tenancy_ocid }}"
test_dynamic_group_update_using_name_optional_required_compartment_id: "{{ tenancy_ocid }}"
test_dynamic_group_delete_required_compartment_id: "{{ tenancy_ocid }}"
test_dynamic_group_create_optional_required_compartment_id: "{{ tenancy_ocid }}"
test_dynamic_group_list_compartment_id: "{{ tenancy_ocid }}"

## IDP GROUP MAPPING
test_idp_group_mapping_create_dependency_group_compartment_id: "{{ tenancy_ocid }}"
dependency_identity_provider_id: "{{ test_identity_provider_id }}"

## GROUPS
test_group_create_required_compartment_id: "{{ tenancy_ocid }}"
test_group_update_using_name_optional_required_compartment_id: "{{ tenancy_ocid }}"
test_group_delete_required_compartment_id: "{{ tenancy_ocid }}"
test_group_create_optional_required_compartment_id: "{{ tenancy_ocid }}"
test_group_list_compartment_id: "{{ tenancy_ocid }}"

## TAG NAMESPACES
# right now we only have the facts module, so instead of creating a tag namespace
# use an existing one for the GET / LIST tests
tag_namespace_resource_id: "{{ test_tag_namespace_ocid }}"

## tenancy
tenancy_resource_id: "{{ tenancy_ocid }}"

## users
test_user_create_required_compartment_id: "{{ tenancy_ocid }}"
test_user_update_using_name_optional_required_compartment_id: "{{ tenancy_ocid }}"
test_user_delete_required_compartment_id: "{{ tenancy_ocid }}"
test_user_create_optional_required_compartment_id: "{{ tenancy_ocid }}"
test_user_list_compartment_id: "{{ tenancy_ocid }}"

## user group memberships
test_user_group_membership_create_dependency_user_compartment_id: "{{ tenancy_ocid }}"
test_user_group_membership_create_dependency_group_compartment_id: "{{ tenancy_ocid }}"
test_user_group_membership_create_required_compartment_id: "{{ tenancy_ocid }}"
test_user_group_membership_update_using_name_optional_required_compartment_id: "{{ tenancy_ocid }}"
test_user_group_membership_delete_required_compartment_id: "{{ tenancy_ocid }}"
test_user_group_membership_create_optional_required_compartment_id: "{{ tenancy_ocid }}"
test_user_group_membership_list_compartment_id: "{{ tenancy_ocid }}"

# one of group_id or user_id params is required for list but generated test doesn't know
# this so it fails
skip_user_group_membership_list_test: True

## oci_identity_ui_password
test_ui_password_create_dependency_user_compartment_id: "{{ tenancy_ocid }}"
ui_password_create_required_original_custom_assertions:
  - result.ui_password.password != ""

# operation has no concept of idempotence, action is always executed
skip_ui_password_create_required_idempotency_test: True
skip_ui_password_create_optional_required_idempotence_test: True

## auth token
test_auth_token_create_dependency_user_compartment_id: "{{ tenancy_ocid }}"

## customer secret key
test_customer_secret_key_create_dependency_user_compartment_id: "{{ tenancy_ocid }}"
# the only updateable field is display_name, and you can't update that using name so skip this test
skip_customer_secret_key_update_using_name_optional_required_test: True
skip_customer_secret_key_update_using_name_optional_required_idempotence_test: True

## smtp credential
test_smtp_credential_create_dependency_user_compartment_id: "{{ tenancy_ocid }}"

## mfa device
test_mfa_totp_device_create_dependency_user_compartment_id: "{{ tenancy_ocid }}"

## policy
test_policy_create_required_statements: [ 'Allow group Administrators to manage instance-family in compartment {{test_compartment_name}}' ]
test_policy_update_using_name_optional_required_statements: [ 'Allow group Administrators to manage volume-family in compartment {{test_compartment_name}}' ]
test_policy_update_using_name_optional_required_version_date: "2020-01-17"
test_policy_create_optional_required_statements: "{{test_policy_create_required_statements}}"
test_policy_create_optional_required_version_date: "2020-01-17"
test_policy_update_optional_required_version_date: "2020-01-17"
test_policy_update_optional_required_statements: "{{test_policy_update_using_name_optional_required_statements}}"

skip_policy_update_using_name_optional_required_idempotence_test: True
