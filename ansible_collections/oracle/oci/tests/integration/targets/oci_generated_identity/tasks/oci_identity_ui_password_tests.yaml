---
- block:
  - name: Create dependency user with required parameters
    oci_identity_user:
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_ui_password_create_dependency_user_compartment_id, omit) }}"
      name: "{{ ('JohnSmith@example.com' + random_suffix_1024) | oracle.oci.override(test_ui_password_create_dependency_user_name, omit) }}"
      description: "{{ 'John Smith' | oracle.oci.override(test_ui_password_create_dependency_user_description, omit) }}"
    register: result
    when: skip_ui_password_create_dependency_user_test is not defined and skip_ui_password_dependencies is not defined
  - name: Assert resource was created
    assert:
      that:
        - result.changed == True
    when: skip_ui_password_create_dependency_user_test is not defined and skip_ui_password_dependencies is not defined
  - set_fact:
      dependency_user: "{{ result.user }}"
      dependency_user_id: "{{ result.user.id }}"
    when: skip_ui_password_create_dependency_user_test is not defined and skip_ui_password_dependencies is not defined
  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ ui_password_create_dependency_user_custom_assertions }}"
    when: ui_password_create_dependency_user_custom_assertions is defined

# ==================================================================================================== #

  - name: Create ui_password (check mode)
    oci_identity_ui_password:
      user_id: "{{ dependency_user_id | oracle.oci.override(test_ui_password_create_required_user_id, omit) }}"
    register: result
    check_mode: yes
    when: skip_ui_password_create_check_mode_test is not defined

  - name: Assert resource would have been created
    assert:
      that:
        - result.changed == True
    when: skip_ui_password_create_check_mode_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ ui_password_create_check_mode_custom_assertions }}"
    when: ui_password_create_check_mode_custom_assertions is defined

# ==================================================================================================== #

  - name: Create ui_password with required parameters
    oci_identity_ui_password:
      user_id: "{{ dependency_user_id | oracle.oci.override(test_ui_password_create_required_user_id, omit) }}"
    register: result
    when: skip_ui_password_create_required_original_test is not defined

  - name: Assert resource was created
    assert:
      that:
        - result.changed == True
    when: skip_ui_password_create_required_original_test is not defined

  - set_fact:
      ui_password: "{{ result.ui_password }}"
    when: skip_ui_password_create_required_original_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ ui_password_create_required_original_custom_assertions }}"
    when: ui_password_create_required_original_custom_assertions is defined

# ==================================================================================================== #

  - name: Re-create ui_password with required parameters(idempotency)
    oci_identity_ui_password:
      user_id: "{{ dependency_user_id | oracle.oci.override(test_ui_password_create_required_user_id, omit) }}"
    register: result
    when: skip_ui_password_create_required_idempotency_test is not defined

  - name: Assert changed is False
    assert:
      that:
        - result.changed == False
    when: skip_ui_password_create_required_idempotency_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ ui_password_create_required_idempotency_custom_assertions }}"
    when: ui_password_create_required_idempotency_custom_assertions is defined

# ==================================================================================================== #

  - name: Create ui_password with optional + required parameters
    oci_identity_ui_password:
      user_id: "{{ dependency_user_id | oracle.oci.override(test_ui_password_create_optional_required_user_id, omit) }}"
    register: result
    when: skip_ui_password_create_optional_required_original_test is not defined

  - name: Assert changed is True
    assert:
      that:
        - result.changed == True
    when: skip_ui_password_create_optional_required_original_test is not defined

  - set_fact:
      ui_password: "{{ result.ui_password }}"
    when: skip_ui_password_create_optional_required_original_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ ui_password_create_optional_required_original_custom_assertions }}"
    when: ui_password_create_optional_required_original_custom_assertions is defined

# ==================================================================================================== #

  - name: Re-create ui_password with optional + required parameters (idempotence)
    oci_identity_ui_password:
      user_id: "{{ dependency_user_id | oracle.oci.override(test_ui_password_create_optional_required_user_id, omit) }}"
    register: result
    when: skip_ui_password_create_optional_required_idempotence_test is not defined

  - name: Assert changed is False
    assert:
      that:
        - result.changed == False
    when: skip_ui_password_create_optional_required_idempotence_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ ui_password_create_optional_required_idempotence_custom_assertions }}"
    when: ui_password_create_optional_required_idempotence_custom_assertions is defined

  always:

    - name: Delete dependency user
      oci_identity_user:
        user_id: "{{ dependency_user_id }}"
        state: absent
      ignore_errors: yes
      when: skip_ui_password_delete_dependency_user_test is not defined and skip_ui_password_dependencies is not defined and dependency_user_id is defined
