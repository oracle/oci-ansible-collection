---
- block:
  - name: Create dependency user with required parameters
    oci_identity_user:
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_customer_secret_key_create_dependency_user_compartment_id, omit) }}"
      name: "{{ ('JohnSmith@example.com' + random_suffix_1024) | oracle.oci.override(test_customer_secret_key_create_dependency_user_name, omit) }}"
      description: "{{ 'John Smith' | oracle.oci.override(test_customer_secret_key_create_dependency_user_description, omit) }}"
    register: result
    when: skip_customer_secret_key_create_dependency_user_test is not defined and skip_customer_secret_key_dependencies is not defined
  - name: Assert resource was created
    assert:
      that:
        - result.changed == True
    when: skip_customer_secret_key_create_dependency_user_test is not defined and skip_customer_secret_key_dependencies is not defined
  - set_fact:
      dependency_user: "{{ result.user }}"
      dependency_user_id: "{{ result.user.id }}"
    when: skip_customer_secret_key_create_dependency_user_test is not defined and skip_customer_secret_key_dependencies is not defined
  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ customer_secret_key_create_dependency_user_custom_assertions }}"
    when: customer_secret_key_create_dependency_user_custom_assertions is defined

# ==================================================================================================== #

  - name: Create customer_secret_key (check mode)
    oci_identity_customer_secret_key:
      display_name: "{{ ('display_name_example' + random_suffix_1024) | oracle.oci.override(test_customer_secret_key_create_required_display_name, omit) }}"
      user_id: "{{ dependency_user_id | oracle.oci.override(test_customer_secret_key_create_required_user_id, omit) }}"
    register: result
    check_mode: yes
    when: skip_customer_secret_key_create_check_mode_test is not defined

  - name: Assert resource would have been created
    assert:
      that:
        - result.changed == True
    when: skip_customer_secret_key_create_check_mode_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ customer_secret_key_create_check_mode_custom_assertions }}"
    when: customer_secret_key_create_check_mode_custom_assertions is defined

# ==================================================================================================== #

  - name: Create customer_secret_key with required parameters
    oci_identity_customer_secret_key:
      display_name: "{{ ('display_name_example' + random_suffix_1024) | oracle.oci.override(test_customer_secret_key_create_required_display_name, omit) }}"
      user_id: "{{ dependency_user_id | oracle.oci.override(test_customer_secret_key_create_required_user_id, omit) }}"
    register: result
    when: skip_customer_secret_key_create_required_original_test is not defined

  - name: Assert resource was created
    assert:
      that:
        - result.changed == True
    when: skip_customer_secret_key_create_required_original_test is not defined

  - set_fact:
      customer_secret_key_resource_id: "{{ result.customer_secret_key.id }}"
    when: skip_customer_secret_key_create_required_original_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ customer_secret_key_create_required_original_custom_assertions }}"
    when: customer_secret_key_create_required_original_custom_assertions is defined

# ==================================================================================================== #

  - name: Re-create customer_secret_key with required parameters(idempotency)
    oci_identity_customer_secret_key:
      display_name: "{{ ('display_name_example' + random_suffix_1024) | oracle.oci.override(test_customer_secret_key_create_required_display_name, omit) }}"
      user_id: "{{ dependency_user_id | oracle.oci.override(test_customer_secret_key_create_required_user_id, omit) }}"
    register: result
    when: skip_customer_secret_key_create_required_idempotency_test is not defined

  - name: Assert changed is False
    assert:
      that:
        - result.changed == False
    when: skip_customer_secret_key_create_required_idempotency_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ customer_secret_key_create_required_idempotency_custom_assertions }}"
    when: customer_secret_key_create_required_idempotency_custom_assertions is defined

# ==================================================================================================== #

  - name: Update customer_secret_key using name with optional + required parameters
    oci_identity_customer_secret_key:
      display_name: "{{ ('display_name_example' + random_suffix_1024) | oracle.oci.override(test_customer_secret_key_update_using_name_optional_required_display_name, omit) }}"
      user_id: "{{ dependency_user_id | oracle.oci.override(test_customer_secret_key_update_using_name_optional_required_user_id, omit) }}"
    environment:
      OCI_USE_NAME_AS_IDENTIFIER: 1
    register: result
    when: skip_customer_secret_key_update_using_name_optional_required_test is not defined

  - name: Assert resource was updated
    assert:
      that:
        - result.changed == True
    when: skip_customer_secret_key_update_using_name_optional_required_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ customer_secret_key_update_using_name_optional_required_custom_assertions }}"
    when: customer_secret_key_update_using_name_optional_required_custom_assertions is defined

# ==================================================================================================== #

  - name: Update customer_secret_key using name with optional + required parameters (idempotence)
    oci_identity_customer_secret_key:
      display_name: "{{ ('display_name_example' + random_suffix_1024) | oracle.oci.override(test_customer_secret_key_update_using_name_optional_required_display_name, omit) }}"
      user_id: "{{ dependency_user_id | oracle.oci.override(test_customer_secret_key_update_using_name_optional_required_user_id, omit) }}"
    environment:
      OCI_USE_NAME_AS_IDENTIFIER: 1
    register: result
    when: skip_customer_secret_key_update_using_name_optional_required_idempotence_test is not defined

  - name: Assert changed is False
    assert:
      that:
        - result.changed == False
    when: skip_customer_secret_key_update_using_name_optional_required_idempotence_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ customer_secret_key_update_using_name_optional_required_idempotence_custom_assertions }}"
    when: customer_secret_key_update_using_name_optional_required_idempotence_custom_assertions is defined

# ==================================================================================================== #

  - name: Delete customer_secret_key
    oci_identity_customer_secret_key:
      display_name: "{{ ('display_name_example' + random_suffix_1024) | oracle.oci.override(test_customer_secret_key_delete_required_display_name, omit) }}"
      user_id: "{{ dependency_user_id | oracle.oci.override(test_customer_secret_key_delete_required_user_id, omit) }}"
      state: absent
    environment:
      OCI_USE_NAME_AS_IDENTIFIER: 1
    register: result
    when: skip_customer_secret_key_delete_required_test is not defined

  - name: Assert resource was deleted
    assert:
      that:
        - result.changed == True
    when: skip_customer_secret_key_delete_required_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ customer_secret_key_delete_required_custom_assertions }}"
    when: customer_secret_key_delete_required_custom_assertions is defined

# ==================================================================================================== #

  - name: Delete customer_secret_key (idempotency)
    oci_identity_customer_secret_key:
      display_name: "{{ ('display_name_example' + random_suffix_1024) | oracle.oci.override(test_customer_secret_key_delete_required_display_name, omit) }}"
      user_id: "{{ dependency_user_id | oracle.oci.override(test_customer_secret_key_delete_required_user_id, omit) }}"
      state: absent
    environment:
      OCI_USE_NAME_AS_IDENTIFIER: 1
    register: result
    when: skip_customer_secret_key_delete_required_idempotency_test is not defined

  - name: Assert changed is False
    assert:
      that:
        - result.changed == False
    when: skip_customer_secret_key_delete_required_idempotency_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ customer_secret_key_delete_required_idempotency_custom_assertions }}"
    when: customer_secret_key_delete_required_idempotency_custom_assertions is defined

# ==================================================================================================== #

  - name: Create customer_secret_key with optional + required parameters
    oci_identity_customer_secret_key:
      display_name: "{{ ('display_name_example' + random_suffix_1024) | oracle.oci.override(test_customer_secret_key_create_optional_required_display_name, omit) }}"
      user_id: "{{ dependency_user_id | oracle.oci.override(test_customer_secret_key_create_optional_required_user_id, omit) }}"
    register: result
    when: skip_customer_secret_key_create_optional_required_original_test is not defined

  - name: Assert changed is True
    assert:
      that:
        - result.changed == True
    when: skip_customer_secret_key_create_optional_required_original_test is not defined

  - set_fact:
      customer_secret_key_resource_id: "{{ result.customer_secret_key.id }}"
    when: skip_customer_secret_key_create_optional_required_original_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ customer_secret_key_create_optional_required_original_custom_assertions }}"
    when: customer_secret_key_create_optional_required_original_custom_assertions is defined

# ==================================================================================================== #

  - name: Re-create customer_secret_key with optional + required parameters (idempotence)
    oci_identity_customer_secret_key:
      display_name: "{{ ('display_name_example' + random_suffix_1024) | oracle.oci.override(test_customer_secret_key_create_optional_required_display_name, omit) }}"
      user_id: "{{ dependency_user_id | oracle.oci.override(test_customer_secret_key_create_optional_required_user_id, omit) }}"
    register: result
    when: skip_customer_secret_key_create_optional_required_idempotence_test is not defined

  - name: Assert changed is False
    assert:
      that:
        - result.changed == False
    when: skip_customer_secret_key_create_optional_required_idempotence_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ customer_secret_key_create_optional_required_idempotence_custom_assertions }}"
    when: customer_secret_key_create_optional_required_idempotence_custom_assertions is defined

# ==================================================================================================== #

  - name: Update customer_secret_key with optional + required parameters
    oci_identity_customer_secret_key:
      display_name: "{{ ('display_name_exampleupdated' + random_suffix_1024) | oracle.oci.override(test_customer_secret_key_update_optional_required_display_name, omit) }}"
      user_id: "{{ dependency_user_id | oracle.oci.override(test_customer_secret_key_update_optional_required_user_id, omit) }}"
      customer_secret_key_id: "{{ customer_secret_key_resource_id | oracle.oci.override(test_customer_secret_key_update_optional_required_customer_secret_key_id, omit) }}"
    register: result
    when: skip_customer_secret_key_update_optional_required_test is not defined

  - name: Assert resource was updated
    assert:
      that:
        - result.changed == True
    when: skip_customer_secret_key_update_optional_required_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ customer_secret_key_update_optional_required_custom_assertions }}"
    when: customer_secret_key_update_optional_required_custom_assertions is defined

# ==================================================================================================== #

  - name: Update customer_secret_key with optional + required parameters (idempotence)
    oci_identity_customer_secret_key:
      display_name: "{{ ('display_name_exampleupdated' + random_suffix_1024) | oracle.oci.override(test_customer_secret_key_update_optional_required_display_name, omit) }}"
      user_id: "{{ dependency_user_id | oracle.oci.override(test_customer_secret_key_update_optional_required_user_id, omit) }}"
      customer_secret_key_id: "{{ customer_secret_key_resource_id | oracle.oci.override(test_customer_secret_key_update_optional_required_customer_secret_key_id, omit) }}"
    register: result
    when: skip_customer_secret_key_update_optional_required_idempotence_test is not defined

  - name: Assert changed is False
    assert:
      that:
        - result.changed == False
    when: skip_customer_secret_key_update_optional_required_idempotence_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ customer_secret_key_update_optional_required_idempotence_custom_assertions }}"
    when: customer_secret_key_update_optional_required_idempotence_custom_assertions is defined

# ==================================================================================================== #

  - name: List customer_secret_keys
    oci_identity_customer_secret_key_facts:
      user_id: "{{ dependency_user_id | oracle.oci.override(test_customer_secret_key_list_user_id, omit) }}"
    register: result
    when: skip_customer_secret_key_list_test is not defined

  - name: Assert resource was listed
    assert:
      that:
        - result.customer_secret_keys | length > 0
    when: skip_customer_secret_key_list_test is not defined


  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ customer_secret_key_list_custom_assertions }}"
    when: customer_secret_key_list_custom_assertions is defined

  always:

    - name: Delete customer_secret_key
      oci_identity_customer_secret_key:
        user_id: "{{ dependency_user_id | oracle.oci.override(test_customer_secret_key_delete_rescue_user_id, omit) }}"
        customer_secret_key_id: "{{ customer_secret_key_resource_id | oracle.oci.override(test_customer_secret_key_delete_rescue_customer_secret_key_id, omit) }}"
        state: absent
      register: result
      ignore_errors: yes
      when: customer_secret_key_resource_id is defined

    - name: Delete dependency user
      oci_identity_user:
        user_id: "{{ dependency_user_id }}"
        state: absent
      ignore_errors: yes
      when: skip_customer_secret_key_delete_dependency_user_test is not defined and skip_customer_secret_key_dependencies is not defined and dependency_user_id is defined
