---

vcn_name: "test_vcn_{{random_suffix_1024}}"
cidr_block: "10.0.0.0/16"
dns_label: "ansiblevcn{{random_suffix_1024}}"

subnet_cidr_block: "10.0.2.0/24"
subnet_cidr_block_ad2: "10.0.4.0/24"
lb_name: "ansible_lb{{random_suffix_1024}}"
lb_name_updated: "ansible_lb{{random_suffix_1024}}_updated"

backend_sets:
    backendset1:
      backends:
          - ip_address: "10.159.34.21"
            port: 8080
      health_checker:
          interval_in_millis: 30000
          port: 8080
          protocol: "HTTP"
          response_body_regex: "^(500|40[1348])$"
          retries: 3
          timeout_in_millis: 6000
          return_code: 200
          url_path: "/healthcheck"
      policy: "LEAST_CONNECTIONS"

ca_cert_file_path: "{{cert_path}}/ca_cert.pem"
private_key_file_path: "{{cert_path}}/private_key.pem"
public_certificate_file_path: "{{cert_path}}/cert.pem"
private_key_with_passphrase_file_path: "{{cert_path}}/private_key_with_passphrase.pem"
cert_with_passphrase_file_path: "{{cert_path}}/cert_with_passphrase.pem"

certificates:
   certs1:
     ca_certificate: "{{ lookup('file', ca_cert_file_path) }}"
     private_key: "{{ lookup('file', private_key_file_path) }}"
     public_certificate: "{{ lookup('file', public_certificate_file_path) }}"
     name: "certs1"
shape_name: "100Mbps"
listeners: 
  listerner1:
    default_backend_set_name: "backendset1"
    port: 80
    protocol: "HTTP"

backend_set_name: "backendset1"

first_backend_ip_address: "10.159.34.21"
first_backend_port: 8181
second_backend_ip_address: "10.159.34.25"
second_backend_port: 8282

first_listener_name: 'listener_one'
second_listener_name: 'listener_two'

first_listener_port: 85
first_listener_port_updated: 86
second_listener_port: 87
listener_protocol: 'HTTP'

listener_ssl_configuration:
        certificate_name: 'certs1'
        verify_depth: 1
        verify_peer_certificate: True

listener_ssl_configuration_updated:
        certificate_name: 'certs1'
        verify_depth: 1
        verify_peer_certificate: False

connection_configuration:
        idle_timeout: 600 

connection_configuration_updated:
          idle_timeout: 1200

# Backend Set tests related variables
first_backend_set_backend_one:
        - ip_address: "10.159.34.21"
          port: 8080

first_backend_set_backend_two:
        - ip_address: "10.159.34.21"
          port: 8282

first_backend_set_health_checker:
    interval_in_millis: 30000
    port: 8080
    protocol: "HTTP"
    response_body_regex: "^(500|40[1348])$"
    retries: 3
    timeout_in_millis: 6000
    return_code: 200
    url_path: "/healthcheck"

first_backend_set_health_checker_updated:
    interval_in_millis: 30000
    port: 8080
    protocol: "HTTP"
    response_body_regex: "^(500|40[1348])$"
    retries: 3
    timeout_in_millis: 6000
    return_code: 500
    url_path: "/healthcheck"

first_backend_set_policy: "LEAST_CONNECTIONS"

first_backend_set_policy_updated: "IP_HASH"

first_backend_set_name: "backend_set_1"

first_backend_set_session_persistence_configuration:
      cookie_name: "first_backend_set_cookie"
      disable_fallback: True

first_backend_set_session_persistence_configuration_updated:
      cookie_name: "first_backend_set_cookie_updated"
      disable_fallback: True

first_backend_set_ssl_configuration:
      certificate_name: "certs1"
      verify_depth: 1
      verify_peer_certificate: True

first_backend_set_ssl_configuration_updated:
      certificate_name: "certs1"
      verify_depth: 3
      verify_peer_certificate: True

# certificate tests related variables
certificate_name_without_passphrase: "ansible_cert"
certificate_name_with_passphrase: "ansible_cert_with_passphrase"
passphrase: "ansible"

# Health-checker tests related variables
initial_lb_backend_ip_address: '10.159.34.21'
initial_lb_backend_port: 8080

load_balancer_policy: 'ROUND_ROBIN'
load_balancer_protocol: 'HTTP'
load_balancer_shape: '100Mbps'

#Path Route Set related variables
lb_path_route_set_name: 'lb_path_route_set'
load_balancer_embedded_path_route_set:
        lb_path_route_set:
                path_routes:
                    - backend_set_name: "{{ backend_set_name }}"
                      path: "test/user"
                      path_match_type:
                          match_type: "EXACT_MATCH"

path_route_set_name: 'additional_path_route_set'

path_routes_exact_match:
   - backend_set_name: "{{ first_backend_set_name }}"
     path: "prod/group"
     path_match_type:
         match_type: "EXACT_MATCH"

path_routes_force_longest_prefix_match:
   - backend_set_name: "{{ first_backend_set_name }}"
     path: "prod/group"
     path_match_type:
         match_type: "FORCE_LONGEST_PREFIX_MATCH"

path_routes_changed_path:
   - backend_set_name: "{{ first_backend_set_name }}"
     path: "test/group"
     path_match_type:
         match_type: "FORCE_LONGEST_PREFIX_MATCH"

path_routes_changed_backend_set:
   - backend_set_name: "{{ backend_set_name }}"
     path: "test/group"
     path_match_type:
         match_type: "FORCE_LONGEST_PREFIX_MATCH"

# hostname test related variables
lb_hostname_name: 'hostname_001'
lb_hostnames:
     hostname_001:
          name: 'hostname_001'
          hostname: 'app.test.com'
additional_hostname_name: 'hostname_002'
additional_hostname: 'app.example.com'
additional_hostname_updated: 'app.production.com'

# tags variables
creation_freeform_tag:
     ansible_tag: "tag while resource creation"
updation_freeform_tag:
     ansible_tag: "tag while resource updation"
creation_defined_tag:
     ansible_tag_namespace_integration_test_1:
         ansible_tag_1: 'school'
updation_defined_tag:
     ansible_tag_namespace_integration_test_1:
         ansible_tag_1: 'office'
