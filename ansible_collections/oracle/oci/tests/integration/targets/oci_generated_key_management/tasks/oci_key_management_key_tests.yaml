---
- block:
  - set_fact:
      test_key_create_required_key_shape:
        algorithm: "{{ 'AES' | oracle.oci.override(test_key_create_required_key_shape_algorithm, omit) }}"
        length: "{{ 16 | oracle.oci.override(test_key_create_required_key_shape_length, omit) }}"
    when: test_key_create_required_key_shape is not defined

  - name: Create key (check mode)
    oci_key_management_key:
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_key_create_required_compartment_id, omit) }}"
      display_name: "{{ ('Key C' + random_suffix_1024) | oracle.oci.override(test_key_create_required_display_name, omit) }}"
      key_shape: "{{ '{}' | oracle.oci.override(test_key_create_required_key_shape, omit) }}"
      service_endpoint: "{{ test_kmsmanagement_service_endpoint | oracle.oci.override(test_key_create_check_mode_service_endpoint, omit) }}"
    register: result
    check_mode: yes
    when: skip_key_create_check_mode_test is not defined

  - name: Assert resource would have been created
    assert:
      that:
        - result.changed == True
    when: skip_key_create_check_mode_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ key_create_check_mode_custom_assertions }}"
    when: key_create_check_mode_custom_assertions is defined

# ==================================================================================================== #

  - name: Create key with required parameters
    oci_key_management_key:
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_key_create_required_compartment_id, omit) }}"
      display_name: "{{ ('Key C' + random_suffix_1024) | oracle.oci.override(test_key_create_required_display_name, omit) }}"
      key_shape: "{{ '{}' | oracle.oci.override(test_key_create_required_key_shape, omit) }}"
      service_endpoint: "{{ test_kmsmanagement_service_endpoint | oracle.oci.override(test_key_create_required_original_service_endpoint, omit) }}"
    register: result
    when: skip_key_create_required_original_test is not defined

  - name: Assert resource was created
    assert:
      that:
        - result.changed == True
    when: skip_key_create_required_original_test is not defined

  - set_fact:
      key_resource_id: "{{ result.key.id }}"
    when: skip_key_create_required_original_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - result.key.compartment_id is defined
        - result.key.current_key_version is defined
        - result.key.defined_tags is defined
        - result.key.display_name is defined
        - result.key.freeform_tags is defined
        - result.key.id is defined
        - result.key.key_shape is defined
        - result.key.lifecycle_state is defined
        - result.key.time_created is defined
        - result.key.time_of_deletion is defined
        - result.key.vault_id is defined
    when: skip_key_create_required_original_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ key_create_required_original_custom_assertions }}"
    when: key_create_required_original_custom_assertions is defined

# ==================================================================================================== #

  - name: Re-create key with required parameters(idempotency)
    oci_key_management_key:
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_key_create_required_compartment_id, omit) }}"
      display_name: "{{ ('Key C' + random_suffix_1024) | oracle.oci.override(test_key_create_required_display_name, omit) }}"
      key_shape: "{{ '{}' | oracle.oci.override(test_key_create_required_key_shape, omit) }}"
      service_endpoint: "{{ test_kmsmanagement_service_endpoint | oracle.oci.override(test_key_create_required_idempotency_service_endpoint, omit) }}"
    register: result
    when: skip_key_create_required_idempotency_test is not defined

  - name: Assert changed is False
    assert:
      that:
        - result.changed == False
    when: skip_key_create_required_idempotency_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - result.key.compartment_id is defined
        - result.key.current_key_version is defined
        - result.key.defined_tags is defined
        - result.key.display_name is defined
        - result.key.freeform_tags is defined
        - result.key.id is defined
        - result.key.key_shape is defined
        - result.key.lifecycle_state is defined
        - result.key.time_created is defined
        - result.key.time_of_deletion is defined
        - result.key.vault_id is defined
    when: skip_key_create_required_idempotency_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ key_create_required_idempotency_custom_assertions }}"
    when: key_create_required_idempotency_custom_assertions is defined

# ==================================================================================================== #

  - name: Update key using name with optional + required parameters
    oci_key_management_key:
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_key_update_using_name_optional_required_compartment_id, omit) }}"
      defined_tags: "{{ test_default_updated_defined_tags | oracle.oci.override(test_key_update_using_name_optional_required_defined_tags, omit) }}"
      display_name: "{{ ('Key C' + random_suffix_1024) | oracle.oci.override(test_key_update_using_name_optional_required_display_name, omit) }}"
      freeform_tags: "{{ test_default_updated_freeform_tags | oracle.oci.override(test_key_update_using_name_optional_required_freeform_tags, omit) }}"
      service_endpoint: "{{ test_kmsmanagement_service_endpoint | oracle.oci.override(test_key_update_using_name_optional_required_service_endpoint, omit) }}"
    environment:
      OCI_USE_NAME_AS_IDENTIFIER: 1
    register: result
    when: skip_key_update_using_name_optional_required_test is not defined

  - name: Assert resource was updated
    assert:
      that:
        - result.changed == True
    when: skip_key_update_using_name_optional_required_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - result.key.compartment_id is defined
        - result.key.current_key_version is defined
        - result.key.defined_tags is defined
        - result.key.display_name is defined
        - result.key.freeform_tags is defined
        - result.key.id is defined
        - result.key.key_shape is defined
        - result.key.lifecycle_state is defined
        - result.key.time_created is defined
        - result.key.time_of_deletion is defined
        - result.key.vault_id is defined
    when: skip_key_update_using_name_optional_required_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ key_update_using_name_optional_required_custom_assertions }}"
    when: key_update_using_name_optional_required_custom_assertions is defined

# ==================================================================================================== #

  - name: Update key using name with optional + required parameters (idempotence)
    oci_key_management_key:
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_key_update_using_name_optional_required_compartment_id, omit) }}"
      defined_tags: "{{ test_default_updated_defined_tags | oracle.oci.override(test_key_update_using_name_optional_required_defined_tags, omit) }}"
      display_name: "{{ ('Key C' + random_suffix_1024) | oracle.oci.override(test_key_update_using_name_optional_required_display_name, omit) }}"
      freeform_tags: "{{ test_default_updated_freeform_tags | oracle.oci.override(test_key_update_using_name_optional_required_freeform_tags, omit) }}"
      service_endpoint: "{{ test_kmsmanagement_service_endpoint | oracle.oci.override(test_key_update_using_name_optional_required_idempotence_service_endpoint, omit) }}"
    environment:
      OCI_USE_NAME_AS_IDENTIFIER: 1
    register: result
    when: skip_key_update_using_name_optional_required_idempotence_test is not defined

  - name: Assert changed is False
    assert:
      that:
        - result.changed == False
    when: skip_key_update_using_name_optional_required_idempotence_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - result.key.compartment_id is defined
        - result.key.current_key_version is defined
        - result.key.defined_tags is defined
        - result.key.display_name is defined
        - result.key.freeform_tags is defined
        - result.key.id is defined
        - result.key.key_shape is defined
        - result.key.lifecycle_state is defined
        - result.key.time_created is defined
        - result.key.time_of_deletion is defined
        - result.key.vault_id is defined
    when: skip_key_update_using_name_optional_required_idempotence_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ key_update_using_name_optional_required_idempotence_custom_assertions }}"
    when: key_update_using_name_optional_required_idempotence_custom_assertions is defined

# ==================================================================================================== #

  - set_fact:
      test_key_create_optional_required_key_shape:
        algorithm: "{{ 'AES' | oracle.oci.override(test_key_create_optional_required_key_shape_algorithm, omit) }}"
        length: "{{ 16 | oracle.oci.override(test_key_create_optional_required_key_shape_length, omit) }}"
    when: test_key_create_optional_required_key_shape is not defined

  - name: Create key with optional + required parameters
    oci_key_management_key:
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_key_create_optional_required_compartment_id, omit) }}"
      defined_tags: "{{ test_default_defined_tags | oracle.oci.override(test_key_create_optional_required_defined_tags, omit) }}"
      display_name: "{{ ('Key C' + random_suffix_1024) | oracle.oci.override(test_key_create_optional_required_display_name, omit) }}"
      freeform_tags: "{{ {'Department': 'Finance'} | oracle.oci.override(test_key_create_optional_required_freeform_tags, omit) }}"
      key_shape: "{{ '{}' | oracle.oci.override(test_key_create_optional_required_key_shape, omit) }}"
      service_endpoint: "{{ test_kmsmanagement_service_endpoint | oracle.oci.override(test_key_create_optional_required_original_service_endpoint, omit) }}"
    register: result
    when: skip_key_create_optional_required_original_test is not defined

  - name: Assert changed is True
    assert:
      that:
        - result.changed == True
    when: skip_key_create_optional_required_original_test is not defined

  - set_fact:
      key_resource_id: "{{ result.key.id }}"
    when: skip_key_create_optional_required_original_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - result.key.compartment_id is defined
        - result.key.current_key_version is defined
        - result.key.defined_tags is defined
        - result.key.display_name is defined
        - result.key.freeform_tags is defined
        - result.key.id is defined
        - result.key.key_shape is defined
        - result.key.lifecycle_state is defined
        - result.key.time_created is defined
        - result.key.time_of_deletion is defined
        - result.key.vault_id is defined
    when: skip_key_create_optional_required_original_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ key_create_optional_required_original_custom_assertions }}"
    when: key_create_optional_required_original_custom_assertions is defined

# ==================================================================================================== #

  - name: Re-create key with optional + required parameters (idempotence)
    oci_key_management_key:
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_key_create_optional_required_compartment_id, omit) }}"
      defined_tags: "{{ test_default_defined_tags | oracle.oci.override(test_key_create_optional_required_defined_tags, omit) }}"
      display_name: "{{ ('Key C' + random_suffix_1024) | oracle.oci.override(test_key_create_optional_required_display_name, omit) }}"
      freeform_tags: "{{ {'Department': 'Finance'} | oracle.oci.override(test_key_create_optional_required_freeform_tags, omit) }}"
      key_shape: "{{ '{}' | oracle.oci.override(test_key_create_optional_required_key_shape, omit) }}"
      service_endpoint: "{{ test_kmsmanagement_service_endpoint | oracle.oci.override(test_key_create_optional_required_idempotence_service_endpoint, omit) }}"
    register: result
    when: skip_key_create_optional_required_idempotence_test is not defined

  - name: Assert changed is False
    assert:
      that:
        - result.changed == False
    when: skip_key_create_optional_required_idempotence_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - result.key.compartment_id is defined
        - result.key.current_key_version is defined
        - result.key.defined_tags is defined
        - result.key.display_name is defined
        - result.key.freeform_tags is defined
        - result.key.id is defined
        - result.key.key_shape is defined
        - result.key.lifecycle_state is defined
        - result.key.time_created is defined
        - result.key.time_of_deletion is defined
        - result.key.vault_id is defined
    when: skip_key_create_optional_required_idempotence_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ key_create_optional_required_idempotence_custom_assertions }}"
    when: key_create_optional_required_idempotence_custom_assertions is defined

# ==================================================================================================== #

  - name: Update key with optional + required parameters
    oci_key_management_key:
      defined_tags: "{{ test_default_updated_defined_tags | oracle.oci.override(test_key_update_optional_required_defined_tags, omit) }}"
      display_name: "{{ ('Key Cupdated' + random_suffix_1024) | oracle.oci.override(test_key_update_optional_required_display_name, omit) }}"
      freeform_tags: "{{ test_default_updated_freeform_tags | oracle.oci.override(test_key_update_optional_required_freeform_tags, omit) }}"
      key_id: "{{ key_resource_id | oracle.oci.override(test_key_update_optional_required_key_id, omit) }}"
      service_endpoint: "{{ test_kmsmanagement_service_endpoint | oracle.oci.override(test_key_update_optional_required_service_endpoint, omit) }}"
    register: result
    when: skip_key_update_optional_required_test is not defined

  - name: Assert resource was updated
    assert:
      that:
        - result.changed == True
    when: skip_key_update_optional_required_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - result.key.compartment_id is defined
        - result.key.current_key_version is defined
        - result.key.defined_tags is defined
        - result.key.display_name is defined
        - result.key.freeform_tags is defined
        - result.key.id is defined
        - result.key.key_shape is defined
        - result.key.lifecycle_state is defined
        - result.key.time_created is defined
        - result.key.time_of_deletion is defined
        - result.key.vault_id is defined
    when: skip_key_update_optional_required_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ key_update_optional_required_custom_assertions }}"
    when: key_update_optional_required_custom_assertions is defined

# ==================================================================================================== #

  - name: Update key with optional + required parameters (idempotence)
    oci_key_management_key:
      defined_tags: "{{ test_default_updated_defined_tags | oracle.oci.override(test_key_update_optional_required_defined_tags, omit) }}"
      display_name: "{{ ('Key Cupdated' + random_suffix_1024) | oracle.oci.override(test_key_update_optional_required_display_name, omit) }}"
      freeform_tags: "{{ test_default_updated_freeform_tags | oracle.oci.override(test_key_update_optional_required_freeform_tags, omit) }}"
      key_id: "{{ key_resource_id | oracle.oci.override(test_key_update_optional_required_key_id, omit) }}"
      service_endpoint: "{{ test_kmsmanagement_service_endpoint | oracle.oci.override(test_key_update_optional_required_idempotence_service_endpoint, omit) }}"
    register: result
    when: skip_key_update_optional_required_idempotence_test is not defined

  - name: Assert changed is False
    assert:
      that:
        - result.changed == False
    when: skip_key_update_optional_required_idempotence_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - result.key.compartment_id is defined
        - result.key.current_key_version is defined
        - result.key.defined_tags is defined
        - result.key.display_name is defined
        - result.key.freeform_tags is defined
        - result.key.id is defined
        - result.key.key_shape is defined
        - result.key.lifecycle_state is defined
        - result.key.time_created is defined
        - result.key.time_of_deletion is defined
        - result.key.vault_id is defined
    when: skip_key_update_optional_required_idempotence_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ key_update_optional_required_idempotence_custom_assertions }}"
    when: key_update_optional_required_idempotence_custom_assertions is defined

# ==================================================================================================== #

  - name: List keys
    oci_key_management_key_facts:
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_key_list_compartment_id, omit) }}"
      service_endpoint: "{{ test_kmsmanagement_service_endpoint | oracle.oci.override(test_key_list_service_endpoint, omit) }}"
    register: result
    when: skip_key_list_test is not defined

  - name: Assert resource was listed
    assert:
      that:
        - result['keys'] | length > 0
    when: skip_key_list_test is not defined


  - name: Assert response properties are populated
    assert:
      that:
        - item.compartment_id is defined
        - item.defined_tags is defined
        - item.display_name is defined
        - item.freeform_tags is defined
        - item.id is defined
        - item.lifecycle_state is defined
        - item.time_created is defined
        - item.vault_id is defined
    with_items: "{{ result['keys'] }}"
    when: skip_key_list_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ key_list_custom_assertions }}"
    when: key_list_custom_assertions is defined

# ==================================================================================================== #

  - name: Get key
    oci_key_management_key_facts:
      key_id: "{{ key_resource_id | oracle.oci.override(test_key_get_key_id, omit) }}"
      service_endpoint: "{{ test_kmsmanagement_service_endpoint | oracle.oci.override(test_key_get_service_endpoint, omit) }}"
    register: result
    when: skip_key_get_test is not defined

  - name: Assert resource was listed
    assert:
      that:
        - result['keys'] | length == 1
    when: skip_key_get_test is not defined

  - name: Assert response properties are populated
    assert:
      that:
        - item.compartment_id is defined
        - item.defined_tags is defined
        - item.display_name is defined
        - item.freeform_tags is defined
        - item.id is defined
        - item.lifecycle_state is defined
        - item.time_created is defined
        - item.vault_id is defined
    with_items: "{{ result['keys'] }}"
    when: skip_key_get_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ key_get_custom_assertions }}"
    when: key_get_custom_assertions is defined

  always:
    - debug:
        msg: "Nothing to clean up since this resource does not have delete operation and also no dependencies."
