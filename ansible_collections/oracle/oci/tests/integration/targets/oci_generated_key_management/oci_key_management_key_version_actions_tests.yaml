---
- name: List key_versions
  oci_key_management_key_version_facts:
    key_id: "{{ dependency_key_id | oracle.oci.override(test_key_version_list_key_id, omit) }}"
    service_endpoint: "{{ test_kmsmanagement_service_endpoint | oracle.oci.override(test_key_version_list_service_endpoint, omit) }}"
  register: result

- name: Assert resource was listed
  assert:
    that:
      - result['key_versions'] | length > 1

# We can't delete the last active version, get second entry
- name: Get the second key_version from the list
  set_fact:
    key_version_resource_id: "{{ result['key_versions'][1].id }}"


- name: Perform action schedule_key_version_deletion on key_version
  oci_key_management_key_version_actions:
    time_of_deletion: "{{ current_date_time }}"
    key_id: "{{ dependency_key_id }}"
    key_version_id: "{{ key_version_resource_id }}"
    action: schedule_key_version_deletion
    service_endpoint: "{{ test_kmsmanagement_service_endpoint }}"
  register: result
- name: Assert that changed is true
  assert:
    that:
    - result.changed == True
    - result.key_version.id == key_version_resource_id
    - result.key_version.lifecycle_state == "PENDING_DELETION"

# Idempotency works only when delete date is the same as original
- name: Perform action schedule_key_version_deletion on key_version - idempotency
  oci_key_management_key_version_actions:
    time_of_deletion: "{{ current_date_time }}"
    key_id: "{{ dependency_key_id }}"
    key_version_id: "{{ key_version_resource_id }}"
    action: schedule_key_version_deletion
    service_endpoint: "{{ test_kmsmanagement_service_endpoint }}"
  register: result
- name: Assert that changed is false
  assert:
    that:
    - result.changed == False
    - result.key_version.id == key_version_resource_id
    - result.key_version.lifecycle_state == "PENDING_DELETION"

- name: Perform action cancel_key_version_deletion on key_version
  oci_key_management_key_version_actions:
    key_id: "{{ dependency_key_id }}"
    key_version_id: "{{ key_version_resource_id }}"
    action: cancel_key_version_deletion
    service_endpoint: "{{ test_kmsmanagement_service_endpoint }}"
  register: result
- name: Assert that changed is true
  assert:
    that:
    - result.changed == True
    - result.key_version.id == key_version_resource_id
    - result.key_version.lifecycle_state == "ENABLED"

- name: Perform action cancel_key_version_deletion on key_version - idempotency
  oci_key_management_key_version_actions:
    key_id: "{{ dependency_key_id }}"
    key_version_id: "{{ key_version_resource_id }}"
    action: cancel_key_version_deletion
    service_endpoint: "{{ test_kmsmanagement_service_endpoint }}"
  register: result
- name: Assert that changed is false
  assert:
    that:
    - result.changed == False
    - result.key_version.id == key_version_resource_id
    - result.key_version.lifecycle_state == "ENABLED"