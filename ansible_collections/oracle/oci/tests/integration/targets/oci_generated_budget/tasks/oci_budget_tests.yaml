---
- block:
  - name: Create budget (check mode)
    oci_budget:
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_budget_create_required_compartment_id, omit) }}"
      target_compartment_id: "{{ dependency_target_compartment_id | oracle.oci.override(test_budget_create_required_target_compartment_id, omit) }}"
      display_name: "{{ ('display_name_example' + random_suffix_1024) | oracle.oci.override(test_budget_create_required_display_name, omit) }}"
      amount: "{{ 10 | oracle.oci.override(test_budget_create_required_amount, omit) }}"
      reset_period: "{{ 'MONTHLY' | oracle.oci.override(test_budget_create_required_reset_period, omit) }}"
    register: result
    check_mode: yes
    when: skip_budget_create_check_mode_test is not defined

  - name: Assert resource would have been created
    assert:
      that:
        - result.changed == True
    when: skip_budget_create_check_mode_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ budget_create_check_mode_custom_assertions }}"
    when: budget_create_check_mode_custom_assertions is defined

# ==================================================================================================== #

  - name: Create budget with required parameters
    oci_budget:
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_budget_create_required_compartment_id, omit) }}"
      target_compartment_id: "{{ dependency_target_compartment_id | oracle.oci.override(test_budget_create_required_target_compartment_id, omit) }}"
      display_name: "{{ ('display_name_example' + random_suffix_1024) | oracle.oci.override(test_budget_create_required_display_name, omit) }}"
      amount: "{{ 10 | oracle.oci.override(test_budget_create_required_amount, omit) }}"
      reset_period: "{{ 'MONTHLY' | oracle.oci.override(test_budget_create_required_reset_period, omit) }}"
    register: result
    when: skip_budget_create_required_original_test is not defined

  - name: Assert resource was created
    assert:
      that:
        - result.changed == True
    when: skip_budget_create_required_original_test is not defined

  - set_fact:
      budget_resource_id: "{{ result.budget.id }}"
    when: skip_budget_create_required_original_test is not defined

  - name: Assert required properties are populated
    assert:
      that:
        - result.budget.id is defined
        - result.budget.compartment_id is defined
        - result.budget.target_compartment_id is defined
        - result.budget.display_name is defined
        - result.budget.amount is defined
        - result.budget.reset_period is defined
        - result.budget.lifecycle_state is defined
        - result.budget.alert_rule_count is defined
        - result.budget.time_created is defined
        - result.budget.time_updated is defined
    when: skip_budget_create_required_original_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ budget_create_required_original_custom_assertions }}"
    when: budget_create_required_original_custom_assertions is defined

# ==================================================================================================== #

  - name: Re-create budget with required parameters(idempotency)
    oci_budget:
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_budget_create_required_compartment_id, omit) }}"
      target_compartment_id: "{{ dependency_target_compartment_id | oracle.oci.override(test_budget_create_required_target_compartment_id, omit) }}"
      display_name: "{{ ('display_name_example' + random_suffix_1024) | oracle.oci.override(test_budget_create_required_display_name, omit) }}"
      amount: "{{ 10 | oracle.oci.override(test_budget_create_required_amount, omit) }}"
      reset_period: "{{ 'MONTHLY' | oracle.oci.override(test_budget_create_required_reset_period, omit) }}"
    register: result
    when: skip_budget_create_required_idempotency_test is not defined

  - name: Assert changed is False
    assert:
      that:
        - result.changed == False
    when: skip_budget_create_required_idempotency_test is not defined

  - name: Assert required properties are populated
    assert:
      that:
        - result.budget.id is defined
        - result.budget.compartment_id is defined
        - result.budget.target_compartment_id is defined
        - result.budget.display_name is defined
        - result.budget.amount is defined
        - result.budget.reset_period is defined
        - result.budget.lifecycle_state is defined
        - result.budget.alert_rule_count is defined
        - result.budget.time_created is defined
        - result.budget.time_updated is defined
    when: skip_budget_create_required_idempotency_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ budget_create_required_idempotency_custom_assertions }}"
    when: budget_create_required_idempotency_custom_assertions is defined

# ==================================================================================================== #

  - name: Update budget using name with optional + required parameters
    oci_budget:
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_budget_update_using_name_optional_required_compartment_id, omit) }}"
      display_name: "{{ ('display_name_example' + random_suffix_1024) | oracle.oci.override(test_budget_update_using_name_optional_required_display_name, omit) }}"
      description: "{{ ('description_exampleupdated' + random_suffix_1024) | oracle.oci.override(test_budget_update_using_name_optional_required_description, omit) }}"
      amount: "{{ 20.0 | oracle.oci.override(test_budget_update_using_name_optional_required_amount, omit) }}"
      reset_period: "{{ 'MONTHLY' | oracle.oci.override(test_budget_update_using_name_optional_required_reset_period, omit) }}"
      freeform_tags: "{{ test_default_updated_freeform_tags | oracle.oci.override(test_budget_update_using_name_optional_required_freeform_tags, omit) }}"
      defined_tags: "{{ test_default_updated_defined_tags | oracle.oci.override(test_budget_update_using_name_optional_required_defined_tags, omit) }}"
    environment:
      OCI_USE_NAME_AS_IDENTIFIER: 1
    register: result
    when: skip_budget_update_using_name_optional_required_test is not defined

  - name: Assert resource was updated
    assert:
      that:
        - result.changed == True
    when: skip_budget_update_using_name_optional_required_test is not defined

  - name: Assert required properties are populated
    assert:
      that:
        - result.budget.id is defined
        - result.budget.compartment_id is defined
        - result.budget.target_compartment_id is defined
        - result.budget.display_name is defined
        - result.budget.amount is defined
        - result.budget.reset_period is defined
        - result.budget.lifecycle_state is defined
        - result.budget.alert_rule_count is defined
        - result.budget.time_created is defined
        - result.budget.time_updated is defined
    when: skip_budget_update_using_name_optional_required_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ budget_update_using_name_optional_required_custom_assertions }}"
    when: budget_update_using_name_optional_required_custom_assertions is defined

# ==================================================================================================== #

  - name: Update budget using name with optional + required parameters (idempotence)
    oci_budget:
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_budget_update_using_name_optional_required_compartment_id, omit) }}"
      display_name: "{{ ('display_name_example' + random_suffix_1024) | oracle.oci.override(test_budget_update_using_name_optional_required_display_name, omit) }}"
      description: "{{ ('description_exampleupdated' + random_suffix_1024) | oracle.oci.override(test_budget_update_using_name_optional_required_description, omit) }}"
      amount: "{{ 20.0 | oracle.oci.override(test_budget_update_using_name_optional_required_amount, omit) }}"
      reset_period: "{{ 'MONTHLY' | oracle.oci.override(test_budget_update_using_name_optional_required_reset_period, omit) }}"
      freeform_tags: "{{ test_default_updated_freeform_tags | oracle.oci.override(test_budget_update_using_name_optional_required_freeform_tags, omit) }}"
      defined_tags: "{{ test_default_updated_defined_tags | oracle.oci.override(test_budget_update_using_name_optional_required_defined_tags, omit) }}"
    environment:
      OCI_USE_NAME_AS_IDENTIFIER: 1
    register: result
    when: skip_budget_update_using_name_optional_required_idempotence_test is not defined

  - name: Assert changed is False
    assert:
      that:
        - result.changed == False
    when: skip_budget_update_using_name_optional_required_idempotence_test is not defined

  - name: Assert required properties are populated
    assert:
      that:
        - result.budget.id is defined
        - result.budget.compartment_id is defined
        - result.budget.target_compartment_id is defined
        - result.budget.display_name is defined
        - result.budget.amount is defined
        - result.budget.reset_period is defined
        - result.budget.lifecycle_state is defined
        - result.budget.alert_rule_count is defined
        - result.budget.time_created is defined
        - result.budget.time_updated is defined
    when: skip_budget_update_using_name_optional_required_idempotence_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ budget_update_using_name_optional_required_idempotence_custom_assertions }}"
    when: budget_update_using_name_optional_required_idempotence_custom_assertions is defined

# ==================================================================================================== #

  - name: Delete budget
    oci_budget:
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_budget_delete_required_compartment_id, omit) }}"
      display_name: "{{ ('display_name_example' + random_suffix_1024) | oracle.oci.override(test_budget_delete_required_display_name, omit) }}"
      state: absent
    environment:
      OCI_USE_NAME_AS_IDENTIFIER: 1
    register: result
    when: skip_budget_delete_required_test is not defined

  - name: Assert resource was deleted
    assert:
      that:
        - result.changed == True
    when: skip_budget_delete_required_test is not defined

  - name: Assert required properties are populated
    assert:
      that:
        - result.budget.id is defined
        - result.budget.compartment_id is defined
        - result.budget.target_compartment_id is defined
        - result.budget.display_name is defined
        - result.budget.amount is defined
        - result.budget.reset_period is defined
        - result.budget.lifecycle_state is defined
        - result.budget.alert_rule_count is defined
        - result.budget.time_created is defined
        - result.budget.time_updated is defined
    when: skip_budget_delete_required_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ budget_delete_required_custom_assertions }}"
    when: budget_delete_required_custom_assertions is defined

# ==================================================================================================== #

  - name: Delete budget (idempotency)
    oci_budget:
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_budget_delete_required_compartment_id, omit) }}"
      display_name: "{{ ('display_name_example' + random_suffix_1024) | oracle.oci.override(test_budget_delete_required_display_name, omit) }}"
      state: absent
    environment:
      OCI_USE_NAME_AS_IDENTIFIER: 1
    register: result
    when: skip_budget_delete_required_idempotency_test is not defined

  - name: Assert changed is False
    assert:
      that:
        - result.changed == False
    when: skip_budget_delete_required_idempotency_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ budget_delete_required_idempotency_custom_assertions }}"
    when: budget_delete_required_idempotency_custom_assertions is defined

# ==================================================================================================== #

  - name: Create budget with optional + required parameters
    oci_budget:
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_budget_create_optional_required_compartment_id, omit) }}"
      target_compartment_id: "{{ dependency_target_compartment_id | oracle.oci.override(test_budget_create_optional_required_target_compartment_id, omit) }}"
      display_name: "{{ ('display_name_example' + random_suffix_1024) | oracle.oci.override(test_budget_create_optional_required_display_name, omit) }}"
      description: "{{ 'description_example' | oracle.oci.override(test_budget_create_optional_required_description, omit) }}"
      amount: "{{ 10 | oracle.oci.override(test_budget_create_optional_required_amount, omit) }}"
      reset_period: "{{ 'MONTHLY' | oracle.oci.override(test_budget_create_optional_required_reset_period, omit) }}"
      freeform_tags: "{{ {'Department': 'Finance'} | oracle.oci.override(test_budget_create_optional_required_freeform_tags, omit) }}"
      defined_tags: "{{ test_default_defined_tags | oracle.oci.override(test_budget_create_optional_required_defined_tags, omit) }}"
    register: result
    when: skip_budget_create_optional_required_original_test is not defined

  - name: Assert changed is True
    assert:
      that:
        - result.changed == True
    when: skip_budget_create_optional_required_original_test is not defined

  - set_fact:
      budget_resource_id: "{{ result.budget.id }}"
    when: skip_budget_create_optional_required_original_test is not defined

  - name: Assert required properties are populated
    assert:
      that:
        - result.budget.id is defined
        - result.budget.compartment_id is defined
        - result.budget.target_compartment_id is defined
        - result.budget.display_name is defined
        - result.budget.amount is defined
        - result.budget.reset_period is defined
        - result.budget.lifecycle_state is defined
        - result.budget.alert_rule_count is defined
        - result.budget.time_created is defined
        - result.budget.time_updated is defined
    when: skip_budget_create_optional_required_original_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ budget_create_optional_required_original_custom_assertions }}"
    when: budget_create_optional_required_original_custom_assertions is defined

# ==================================================================================================== #

  - name: Re-create budget with optional + required parameters (idempotence)
    oci_budget:
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_budget_create_optional_required_compartment_id, omit) }}"
      target_compartment_id: "{{ dependency_target_compartment_id | oracle.oci.override(test_budget_create_optional_required_target_compartment_id, omit) }}"
      display_name: "{{ ('display_name_example' + random_suffix_1024) | oracle.oci.override(test_budget_create_optional_required_display_name, omit) }}"
      description: "{{ 'description_example' | oracle.oci.override(test_budget_create_optional_required_description, omit) }}"
      amount: "{{ 10 | oracle.oci.override(test_budget_create_optional_required_amount, omit) }}"
      reset_period: "{{ 'MONTHLY' | oracle.oci.override(test_budget_create_optional_required_reset_period, omit) }}"
      freeform_tags: "{{ {'Department': 'Finance'} | oracle.oci.override(test_budget_create_optional_required_freeform_tags, omit) }}"
      defined_tags: "{{ test_default_defined_tags | oracle.oci.override(test_budget_create_optional_required_defined_tags, omit) }}"
    register: result
    when: skip_budget_create_optional_required_idempotence_test is not defined

  - name: Assert changed is False
    assert:
      that:
        - result.changed == False
    when: skip_budget_create_optional_required_idempotence_test is not defined

  - name: Assert required properties are populated
    assert:
      that:
        - result.budget.id is defined
        - result.budget.compartment_id is defined
        - result.budget.target_compartment_id is defined
        - result.budget.display_name is defined
        - result.budget.amount is defined
        - result.budget.reset_period is defined
        - result.budget.lifecycle_state is defined
        - result.budget.alert_rule_count is defined
        - result.budget.time_created is defined
        - result.budget.time_updated is defined
    when: skip_budget_create_optional_required_idempotence_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ budget_create_optional_required_idempotence_custom_assertions }}"
    when: budget_create_optional_required_idempotence_custom_assertions is defined

# ==================================================================================================== #

  - name: Update budget with optional + required parameters
    oci_budget:
      display_name: "{{ ('display_name_exampleupdated' + random_suffix_1024) | oracle.oci.override(test_budget_update_optional_required_display_name, omit) }}"
      description: "{{ ('description_exampleupdated' + random_suffix_1024) | oracle.oci.override(test_budget_update_optional_required_description, omit) }}"
      amount: "{{ 20.0 | oracle.oci.override(test_budget_update_optional_required_amount, omit) }}"
      reset_period: "{{ 'MONTHLY' | oracle.oci.override(test_budget_update_optional_required_reset_period, omit) }}"
      freeform_tags: "{{ test_default_updated_freeform_tags | oracle.oci.override(test_budget_update_optional_required_freeform_tags, omit) }}"
      defined_tags: "{{ test_default_updated_defined_tags | oracle.oci.override(test_budget_update_optional_required_defined_tags, omit) }}"
      budget_id: "{{ budget_resource_id | oracle.oci.override(test_budget_update_optional_required_budget_id, omit) }}"
    register: result
    when: skip_budget_update_optional_required_test is not defined

  - name: Assert resource was updated
    assert:
      that:
        - result.changed == True
    when: skip_budget_update_optional_required_test is not defined

  - name: Assert required properties are populated
    assert:
      that:
        - result.budget.id is defined
        - result.budget.compartment_id is defined
        - result.budget.target_compartment_id is defined
        - result.budget.display_name is defined
        - result.budget.amount is defined
        - result.budget.reset_period is defined
        - result.budget.lifecycle_state is defined
        - result.budget.alert_rule_count is defined
        - result.budget.time_created is defined
        - result.budget.time_updated is defined
    when: skip_budget_update_optional_required_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ budget_update_optional_required_custom_assertions }}"
    when: budget_update_optional_required_custom_assertions is defined

# ==================================================================================================== #

  - name: Update budget with optional + required parameters (idempotence)
    oci_budget:
      display_name: "{{ ('display_name_exampleupdated' + random_suffix_1024) | oracle.oci.override(test_budget_update_optional_required_display_name, omit) }}"
      description: "{{ ('description_exampleupdated' + random_suffix_1024) | oracle.oci.override(test_budget_update_optional_required_description, omit) }}"
      amount: "{{ 20.0 | oracle.oci.override(test_budget_update_optional_required_amount, omit) }}"
      reset_period: "{{ 'MONTHLY' | oracle.oci.override(test_budget_update_optional_required_reset_period, omit) }}"
      freeform_tags: "{{ test_default_updated_freeform_tags | oracle.oci.override(test_budget_update_optional_required_freeform_tags, omit) }}"
      defined_tags: "{{ test_default_updated_defined_tags | oracle.oci.override(test_budget_update_optional_required_defined_tags, omit) }}"
      budget_id: "{{ budget_resource_id | oracle.oci.override(test_budget_update_optional_required_budget_id, omit) }}"
    register: result
    when: skip_budget_update_optional_required_idempotence_test is not defined

  - name: Assert changed is False
    assert:
      that:
        - result.changed == False
    when: skip_budget_update_optional_required_idempotence_test is not defined

  - name: Assert required properties are populated
    assert:
      that:
        - result.budget.id is defined
        - result.budget.compartment_id is defined
        - result.budget.target_compartment_id is defined
        - result.budget.display_name is defined
        - result.budget.amount is defined
        - result.budget.reset_period is defined
        - result.budget.lifecycle_state is defined
        - result.budget.alert_rule_count is defined
        - result.budget.time_created is defined
        - result.budget.time_updated is defined
    when: skip_budget_update_optional_required_idempotence_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ budget_update_optional_required_idempotence_custom_assertions }}"
    when: budget_update_optional_required_idempotence_custom_assertions is defined

# ==================================================================================================== #

  - name: List budgets
    oci_budget_facts:
      compartment_id: "{{ test_compartment_ocid | oracle.oci.override(test_budget_list_compartment_id, omit) }}"
    register: result
    when: skip_budget_list_test is not defined

  - name: Assert resource was listed
    assert:
      that:
        - result.budgets | length > 0
    when: skip_budget_list_test is not defined


  - name: Assert required properties are populated
    assert:
      that:
        - item.id is defined
        - item.compartment_id is defined
        - item.target_compartment_id is defined
        - item.display_name is defined
        - item.amount is defined
        - item.reset_period is defined
        - item.lifecycle_state is defined
        - item.alert_rule_count is defined
        - item.time_created is defined
        - item.time_updated is defined
    with_items: "{{ result.budgets }}"
    when: skip_budget_list_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ budget_list_custom_assertions }}"
    when: budget_list_custom_assertions is defined

# ==================================================================================================== #

  - name: Get budget
    oci_budget_facts:
      budget_id: "{{ budget_resource_id | oracle.oci.override(test_budget_get_budget_id, omit) }}"
    register: result
    when: skip_budget_get_test is not defined

  - name: Assert resource was listed
    assert:
      that:
        - result.budgets | length == 1
    when: skip_budget_get_test is not defined

  - name: Assert required properties are populated
    assert:
      that:
        - item.id is defined
        - item.compartment_id is defined
        - item.target_compartment_id is defined
        - item.display_name is defined
        - item.amount is defined
        - item.reset_period is defined
        - item.lifecycle_state is defined
        - item.alert_rule_count is defined
        - item.time_created is defined
        - item.time_updated is defined
    with_items: "{{ result.budgets }}"
    when: skip_budget_get_test is not defined

  - name: Assert custom assertions
    assert:
      that:
        - "{{ item }}"
    with_items: "{{ budget_get_custom_assertions }}"
    when: budget_get_custom_assertions is defined

  always:

    - name: Delete budget
      oci_budget:
        budget_id: "{{ budget_resource_id | oracle.oci.override(test_budget_delete_rescue_budget_id, omit) }}"
        state: absent
      register: result
      ignore_errors: yes
      when: budget_resource_id is defined
