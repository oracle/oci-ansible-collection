#! /bin/bash

set -e # fail-fast -- fail on first unit-test suite failure

. "$CI_PROJECT_DIR"/scripts/common-vars.sh

export MCAFEE_ROOT="$WKSP_ROOT/mcafee"
echo $MCAFEE_ROOT
# This script assumes that mcafee is installed under $MCAFEE_ROOT
if [ ! -d "$MCAFEE_ROOT" ]; then
    echo "$MCAFEE_ROOT doesn't exist. Please install mcafee under $MCAFEE_ROOT. Instructions are in scripts/setup-gitlab-runner-oel.sh"
fi

# update virus scan definitions
rm $MCAFEE_ROOT/avvdat.ini
export http_proxy=http://pdit-b2b-proxy.oraclecorp.com
echo "Fetching avvdat.ini for list of definitions..."
wget -q -P "$MCAFEE_ROOT" http://update.nai.com/products/commonupdater/current/vscandat1000/dat/0000/avvdat.ini || {
  echo "Something went wrong with http. Exiting"
  exit 1
}
latestdat=$(grep FileName "$MCAFEE_ROOT"/avvdat.ini | head -1 | sed -n "s/.*=\(.*.zip\).*/\1/p")

if [ -f "$MCAFEE_ROOT/$latestdat" ]; then
        echo "Already using latest dat files."
else
    echo "Retrieving $latestdat. This may take a few minutes..."
    wget -q -P "$MCAFEE_ROOT" http://update.nai.com/products/commonupdater/current/vscandat1000/dat/0000/$latestdat || {
    echo "Something went wrong with http. Exiting"
    exit 1
  }
    unzip -q -o -d "$MCAFEE_ROOT" "$MCAFEE_ROOT/$latestdat" || exit 1
fi

rm "$MCAFEE_ROOT/avvdat.ini"

# print uvscan version
"$MCAFEE_ROOT"/uvscan --VERSION

# run scan
"$MCAFEE_ROOT"/uvscan -v --unzip --analyze --summary --afc 512 --program --mime --recursive --report=report.txt --rptall --rptcor --rpterr --rptobjects "$CI_PROJECT_DIR"

# report in $CI_PROJECT_DIR/report.txt
# check if report indicates any possible infections
# A valid run should have the following lines
#	Possibly Infected:.............     0
#	Objects Possibly Infected:.....     0
# A failure will have a non-zero exit code for those lines 
grep "Possibly" report.txt|grep -q "  0$"
