---
################################################################
## This playbook is intended to deploy a given service into
## a given OCI tenancy.
## Example:
##   ansible-playbook playbooks/deploy_service.yml
##     -e "env=free region=us-ashburn-1 service=mushop"
##
#################################################################

# Run common validation steps
- import_playbook: validation/common.yml
  tags:
    - validate_common
    - validate

- import_playbook: validation/tenancy.yml
  tags:
    - validate_tenancy
    - validate

- import_playbook: validation/confirmation.yml
  tags:
    - validate_confirmation
    - validate

- hosts: localhost
  collections:
    - oracle.oci
  gather_facts: True
  vars_files:
    - "../vars/defaults.yml"
    - "../vars/envs/{{ env }}.yml"
    - "../vars/regions/{{ region }}.yml"
    - "../vars/services/mushop.yml"
  pre_tasks:
    - name: Playbook | Include variables for relevant environment
      include_vars:
        dir: '../vars/oci'
        extensions:
          - yaml
          - yml
      tags:
        - always
  tasks:
    - name: Teardown | Get tenancy namespace
      oci_object_storage_namespace_facts:
      register: oci_tenancy_namespace
      tags:
        - always

    - name: Teardown | Find VCN
      oci_network_vcn_facts:
        compartment_id: "{{ vcn.compartment_id }}"
        display_name: 'mushop-vcn'
      register: mushop_vcn_reg
      tags:
        - always

    - name: Teardown | Set VCN facts
      set_fact:
        mushop_vcn_id: "{{ (mushop_vcn_reg.vcns | first).id }}"
        mushop_vcn_name: "{{ (mushop_vcn_reg.vcns | first).display_name }}"
      tags:
        - always

    - name: Teardown | Find load balancers
      oci_loadbalancer_load_balancer_facts:
        compartment_id: "{{ vcn.compartment_id }}"
        tenancy: "{{ oci_tenancy_ocid }}"
        region: "{{ region }}"
      register: mushop_lbaas_reg
      tags:
        - lbaas

    - name: Teardown | Delete load_balancer
      oci_loadbalancer_load_balancer:
        load_balancer_id: "{{ item.id }}"
        state: absent
      loop: "{{ mushop_lbaas_reg.load_balancers }}"
      loop_control:
        label: "{{ item.display_name }}"
      tags:
        - lbaas

    - name: Teardown | Find MuShop instances
      oci_compute_instance_facts:
        compartment_id: "{{ vcn.compartment_id }}"
        tenancy: "{{ oci_tenancy_ocid }}"
        region: "{{ region }}"
      register: mushop_instances_reg
      tags:
        - compute

    - name: Teardown | Delete instance
      oci_compute_instance:
        instance_id: "{{ item.id }}"
        state: absent
      loop: "{{ mushop_instances_reg.instances }}"
      loop_control:
        label: "{{ item.display_name }}"
      tags:
        - compute

    - name: Teardown | Get MuShop Bucket Objects
      oci_object_storage_object_facts:
        namespace_name: "{{ oci_tenancy_namespace.namespace }}"
        bucket_name: "{{ env }}-mushop-bucket"
      register: mushop_bucket_objects_reg
      failed_when: "'BucketNotFound' not in (mushop_bucket_objects_reg.module_stderr | default('BucketNotFound'))
                    or mushop_bucket_objects_reg is not success"
      tags:
        - os

    - name: Teardown | Delete MuShop Bucket Objects
      oci_object_storage_object:
        namespace_name: "{{ oci_tenancy_namespace.namespace }}"
        bucket_name: "{{ env }}-mushop-bucket"
        object_name: "{{ item.name }}"
        state: absent
      loop: "{{ mushop_bucket_objects_reg.objects | default([]) }}"
      loop_control:
        label: "{{ item.name }}"
      when: mushop_bucket_objects_reg is not failed
      tags:
        - os
        - objects

    - name: Teardown | Get MuShop Media Bucket Objects
      oci_object_storage_object_facts:
        namespace_name: "{{ oci_tenancy_namespace.namespace }}"
        bucket_name: "{{ env }}-mushop-media"
      register: mushop_media_objects_reg
      failed_when: "'BucketNotFound' not in (mushop_media_objects_reg.module_stderr | default('BucketNotFound'))"
      tags:
        - os
        - objects

    - name: Teardown | Delete MuShop Media Bucket Objects
      oci_object_storage_object:
        namespace_name: "{{ oci_tenancy_namespace.namespace }}"
        bucket_name: "{{ env }}-mushop-media"
        object_name: "{{ item.name }}"
        state: absent
      tags:
        - os
        - objects
      loop: "{{ mushop_media_objects_reg.objects | default([]) }}"
      loop_control:
        label: "{{ item.name }}"
      when: mushop_media_objects_reg is not failed

    - name: Teardown | Get mushop bucket preauthenticated_requests
      oci_object_storage_preauthenticated_request_facts:
        namespace_name: "{{ oci_tenancy_namespace.namespace }}"
        bucket_name: "{{ env }}-mushop-bucket"
      register: preauth_bucket_reg
      failed_when: "'BucketNotFound' not in (preauth_bucket_reg.module_stderr | default('BucketNotFound'))"
      tags:
        - os
        - preauth

    - name: Teardown | Delete mushop bucket preauth requests
      oci_object_storage_preauthenticated_request:
        namespace_name: "{{ oci_tenancy_namespace.namespace }}"
        bucket_name: "{{ env }}-mushop-bucket"
        state: absent
        par_id: "{{ item.id }}"
      loop: "{{ preauth_bucket_reg.preauthenticated_requests | default([]) }}"
      loop_control:
        label: "{{ item.name }}"
      tags:
        - os
        - preauth

    - name: Teardown | Get media bucket preauthenticated_requests
      oci_object_storage_preauthenticated_request_facts:
        namespace_name: "{{ oci_tenancy_namespace.namespace }}"
        bucket_name: "{{ env }}-mushop-media"
      register: preauth_media_reg
      failed_when: "'BucketNotFound' not in (preauth_media_reg.module_stderr | default('BucketNotFound'))"
      tags:
        - os
        - preauth

    - name: Teardown | Destroy media bucket preauth requests
      oci_object_storage_preauthenticated_request:
        namespace_name: "{{ oci_tenancy_namespace.namespace }}"
        bucket_name: "{{ env }}-mushop-media"
        state: absent
        par_id: "{{ item.id }}"
      loop: "{{ preauth_media_reg.preauthenticated_requests | default([]) }}"
      loop_control:
        label: "{{ item.name }}"
      tags:
        - os
        - preauth

    - name: Teardown | Delete buckets
      oci_object_storage_bucket:
        namespace_name: "{{ oci_tenancy_namespace.namespace }}"
        name: "{{ item }}"
        state: absent
      loop:
        - "{{ env }}-mushop-media"
        - "{{ env }}-mushop-bucket"
      tags:
        - os
        - buckets

    - name: Teardown | Find MuShop autonomous_databases
      oci_database_autonomous_database_facts:
        compartment_id: "{{ vcn.compartment_id }}"
        display_name: "{{ env }}-{{ region }}-mushop-atp"
        db_version: "{{ atp.db_version }}"
        db_workload: "{{ atp.db_workload }}"
        is_free_tier: "{{ atp.is_free_tier }}"
      register: mushop_atp_reg
      tags:
        - atps
        - atp

    - name: Teardown | ATPs
      oci_database_autonomous_database:
        autonomous_database_id: "{{ item.id }}"
        state: absent
      loop: "{{ mushop_atp_reg.autonomous_databases }}"
      loop_control:
        label: "{{ item.display_name }}"
      tags:
        - atps
        - atp

    - name: Teardown | Find MuShop policies
      oci_identity_policy_facts:
        compartment_id: "{{ oci_tenancy_ocid }}"
      register: mushop_policies_reg
      tags:
        - policies
        - policy

    - name: Teardown | Delete policies
      oci_identity_policy:
        state: absent
        policy_id: "{{ item.id }}"
      loop: "{{ mushop_policies_reg.policies | default([]) }}"
      loop_control:
        label: "{{ item.name }}"
      when: item.freeform_tags == oci_ansible_free_default_tags
      tags:
        - policies
        - policy

    - name: Teardown | Find MuShop subnets
      oci_network_subnet_facts:
        compartment_id: "{{ oci_tenancy_ocid }}"
        vcn_id: "{{ mushop_vcn_id }}"
      register: mushop_subnet_reg
      tags:
        - subnets
        - subnet

    - name: Teardown | Delete subnets
      oci_network_subnet:
        state: absent
        subnet_id: "{{ item.id }}"
      loop: "{{ mushop_subnet_reg.subnets }}"
      loop_control:
        label: "{{ item.display_name }}"
      tags:
        - subnets
        - subnet

    - name: Teardown | Find MuShop security_lists
      oci_network_security_list_facts:
        compartment_id: "{{ oci_tenancy_ocid }}"
        vcn_id: "{{ mushop_vcn_id }}"
      register: mushop_seclist_reg
      tags:
        - seclists
        - seclist

    - name: Teardown | Delete security_lists
      oci_network_security_list:
        state: absent
        security_list_id: "{{ item.id }}"
      loop: "{{ mushop_seclist_reg.security_lists }}"
      loop_control:
        label: "{{ item.display_name }}"
      when: "'Default Security List' not in item.display_name"
      tags:
        - seclists
        - seclist

    - name: Teardown | Find MuShop route_tables
      oci_network_route_table_facts:
        compartment_id: "{{ oci_tenancy_ocid }}"
        vcn_id: "{{ mushop_vcn_id }}"
      register: mushop_rt_reg
      tags:
        - route_tables
        - route_table

    - name: Teardown | Delete route tables
      oci_network_route_table:
        state: absent
        rt_id: "{{ item.id }}"
      loop: "{{ mushop_rt_reg.route_tables }}"
      loop_control:
        label: "{{ item.display_name }}"
      when: "'Default Route Table' not in item.display_name"
      tags:
        - route_tables
        - route_table

    - name: Teardown | Find MuShop internet_gateways
      oci_network_internet_gateway_facts:
        compartment_id: "{{ oci_tenancy_ocid }}"
        vcn_id: "{{ mushop_vcn_id }}"
      register: mushop_igw_reg
      tags:
        - igws
        - igw

    - name: Teardown | Delete IGWs
      oci_network_internet_gateway:
        state: absent
        ig_id: "{{ item.id }}"
      loop: "{{ mushop_igw_reg.internet_gateways }}"
      loop_control:
        label: "{{ item.display_name }}"
      tags:
        - igws
        - igw

    - name: Teardown | Delete VCN
      oci_network_vcn:
        state: absent
        vcn_id: "{{ mushop_vcn_id }}"
      tags:
        - vcns
        - vcn
