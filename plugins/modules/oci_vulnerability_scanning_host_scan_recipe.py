#!/usr/bin/python
# Copyright (c) 2017, 2021 Oracle and/or its affiliates.
# This software is made available to you under the terms of the GPL 3.0 license or the Apache 2.0 license.
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
# Apache License v2.0
# See LICENSE.TXT for details.
# GENERATED FILE - DO NOT EDIT - MANUAL CHANGES WILL BE OVERWRITTEN


from __future__ import absolute_import, division, print_function

__metaclass__ = type

ANSIBLE_METADATA = {
    "metadata_version": "1.1",
    "status": ["preview"],
    "supported_by": "community",
}

DOCUMENTATION = """
---
module: oci_vulnerability_scanning_host_scan_recipe
short_description: Manage a HostScanRecipe resource in Oracle Cloud Infrastructure
description:
    - This module allows the user to create, update and delete a HostScanRecipe resource in Oracle Cloud Infrastructure
    - For I(state=present), creates a new HostScanRecipe. A recipe determines the types of security issues that you want scanned, and how often to scan.
version_added: "2.9"
author: Oracle (@oracle)
options:
    display_name:
        description:
            - Recipe identifier, which can be renamed. If not present, it will be auto-generated. Avoid entering confidential information.
            - Required for create, update, delete when environment variable C(OCI_USE_NAME_AS_IDENTIFIER) is set.
            - This parameter is updatable when C(OCI_USE_NAME_AS_IDENTIFIER) is not set.
        type: str
        aliases: ["name"]
    compartment_id:
        description:
            - Compartment ID of the scanning config. If no individual hosts are specified, all hosts in this compartment are scanned
            - Required for create using I(state=present).
            - Required for update when environment variable C(OCI_USE_NAME_AS_IDENTIFIER) is set.
            - Required for delete when environment variable C(OCI_USE_NAME_AS_IDENTIFIER) is set.
        type: str
    port_settings:
        description:
            - ""
            - Required for create using I(state=present).
            - This parameter is updatable.
        type: dict
        suboptions:
            scan_level:
                description:
                    - The scan level
                type: str
                choices:
                    - "NONE"
                    - "LIGHT"
                    - "STANDARD"
                required: true
    agent_settings:
        description:
            - ""
            - Required for create using I(state=present).
            - This parameter is updatable.
        type: dict
        suboptions:
            scan_level:
                description:
                    - The scan level
                type: str
                choices:
                    - "NONE"
                    - "STANDARD"
                required: true
            agent_configuration:
                description:
                    - ""
                type: dict
                suboptions:
                    vendor:
                        description:
                            - Vendor to use for the host scan agent.
                        type: str
                        choices:
                            - "OCI"
                        required: true
                    cis_benchmark_settings:
                        description:
                            - ""
                        type: dict
                        suboptions:
                            scan_level:
                                description:
                                    - The level of strictness to apply for CIS Benchmarks. Use 'NONE' to disable CIS Benchmark checks entirely.
                                type: str
                                choices:
                                    - "NONE"
                                    - "LIGHT"
                                    - "MEDIUM"
                                    - "STRICT"
                    endpoint_protection_settings:
                        description:
                            - ""
                        type: dict
                        suboptions:
                            scan_level:
                                description:
                                    - The scan level. Use 'NONE' to disable Endpoint Protection checks entirely.
                                type: str
                                choices:
                                    - "NONE"
                                    - "STANDARD"
    schedule:
        description:
            - ""
            - Required for create using I(state=present).
            - This parameter is updatable.
        type: dict
        suboptions:
            type:
                description:
                    - How often the scan occurs
                type: str
                choices:
                    - "DAILY"
                    - "WEEKLY"
                required: true
            day_of_week:
                description:
                    - Day of week the scheduled scan occurs (not applicable for DAILY type)
                type: str
                choices:
                    - "SUNDAY"
                    - "MONDAY"
                    - "TUESDAY"
                    - "WEDNESDAY"
                    - "THURSDAY"
                    - "FRIDAY"
                    - "SATURDAY"
    freeform_tags:
        description:
            - "Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
              Example: `{\\"bar-key\\": \\"value\\"}`"
            - This parameter is updatable.
        type: dict
    defined_tags:
        description:
            - "Defined tags for this resource. Each key is predefined and scoped to a namespace.
              Example: `{\\"foo-namespace\\": {\\"bar-key\\": \\"value\\"}}`"
            - This parameter is updatable.
        type: dict
    host_scan_recipe_id:
        description:
            - unique HostScanRecipe identifier
            - Required for update using I(state=present) when environment variable C(OCI_USE_NAME_AS_IDENTIFIER) is not set.
            - Required for delete using I(state=absent) when environment variable C(OCI_USE_NAME_AS_IDENTIFIER) is not set.
        type: str
        aliases: ["id"]
    state:
        description:
            - The state of the HostScanRecipe.
            - Use I(state=present) to create or update a HostScanRecipe.
            - Use I(state=absent) to delete a HostScanRecipe.
        type: str
        required: false
        default: 'present'
        choices: ["present", "absent"]
extends_documentation_fragment: [ oracle.oci.oracle, oracle.oci.oracle_creatable_resource, oracle.oci.oracle_wait_options ]
"""

EXAMPLES = """
- name: Create host_scan_recipe
  oci_vulnerability_scanning_host_scan_recipe:
    compartment_id: "ocid1.compartment.oc1..xxxxxxEXAMPLExxxxxx"
    port_settings:
      scan_level: NONE
    agent_settings:
      scan_level: NONE
    schedule:
      type: DAILY

- name: Update host_scan_recipe using name (when environment variable OCI_USE_NAME_AS_IDENTIFIER is set)
  oci_vulnerability_scanning_host_scan_recipe:
    display_name: display_name_example
    compartment_id: "ocid1.compartment.oc1..xxxxxxEXAMPLExxxxxx"
    port_settings:
      scan_level: NONE
    agent_settings:
      scan_level: NONE
    schedule:
      type: DAILY
    freeform_tags: {'Department': 'Finance'}
    defined_tags: {'Operations': {'CostCenter': 'US'}}

- name: Update host_scan_recipe
  oci_vulnerability_scanning_host_scan_recipe:
    display_name: display_name_example
    port_settings:
      scan_level: NONE
    host_scan_recipe_id: "ocid1.hostscanrecipe.oc1..xxxxxxEXAMPLExxxxxx"

- name: Delete host_scan_recipe
  oci_vulnerability_scanning_host_scan_recipe:
    host_scan_recipe_id: "ocid1.hostscanrecipe.oc1..xxxxxxEXAMPLExxxxxx"
    state: absent

- name: Delete host_scan_recipe using name (when environment variable OCI_USE_NAME_AS_IDENTIFIER is set)
  oci_vulnerability_scanning_host_scan_recipe:
    display_name: display_name_example
    compartment_id: "ocid1.compartment.oc1..xxxxxxEXAMPLExxxxxx"
    state: absent

"""

RETURN = """
host_scan_recipe:
    description:
        - Details of the HostScanRecipe resource acted upon by the current operation
    returned: on success
    type: complex
    contains:
        id:
            description:
                - Unique identifier of the config that is immutable on creation
            returned: on success
            type: string
            sample: "ocid1.resource.oc1..xxxxxxEXAMPLExxxxxx"
        display_name:
            description:
                - Recipe identifier, which can be renamed
            returned: on success
            type: string
            sample: display_name_example
        compartment_id:
            description:
                - Compartment ID of the scan recipe
            returned: on success
            type: string
            sample: "ocid1.compartment.oc1..xxxxxxEXAMPLExxxxxx"
        lifecycle_state:
            description:
                - The current state of the config.
            returned: on success
            type: string
            sample: CREATING
        time_created:
            description:
                - Date and time the recipe was created, format as described in L(RFC 3339,https://tools.ietf.org/rfc/rfc3339)
            returned: on success
            type: string
            sample: 2013-10-20T19:20:30+01:00
        time_updated:
            description:
                - Date and time the recipe was last updated, format as described in L(RFC 3339,https://tools.ietf.org/rfc/rfc3339)
            returned: on success
            type: string
            sample: 2013-10-20T19:20:30+01:00
        port_settings:
            description:
                - ""
            returned: on success
            type: complex
            contains:
                scan_level:
                    description:
                        - The scan level
                    returned: on success
                    type: string
                    sample: NONE
        agent_settings:
            description:
                - ""
            returned: on success
            type: complex
            contains:
                scan_level:
                    description:
                        - The scan level
                    returned: on success
                    type: string
                    sample: NONE
                agent_configuration:
                    description:
                        - ""
                    returned: on success
                    type: complex
                    contains:
                        vendor:
                            description:
                                - Vendor to use for the host scan agent.
                            returned: on success
                            type: string
                            sample: OCI
                        cis_benchmark_settings:
                            description:
                                - ""
                            returned: on success
                            type: complex
                            contains:
                                scan_level:
                                    description:
                                        - The level of strictness to apply for CIS Benchmarks. Use 'NONE' to disable CIS Benchmark checks entirely.
                                    returned: on success
                                    type: string
                                    sample: NONE
                        endpoint_protection_settings:
                            description:
                                - ""
                            returned: on success
                            type: complex
                            contains:
                                scan_level:
                                    description:
                                        - The scan level. Use 'NONE' to disable Endpoint Protection checks entirely.
                                    returned: on success
                                    type: string
                                    sample: NONE
        schedule:
            description:
                - ""
            returned: on success
            type: complex
            contains:
                type:
                    description:
                        - How often the scan occurs
                    returned: on success
                    type: string
                    sample: DAILY
                day_of_week:
                    description:
                        - Day of week the scheduled scan occurs (not applicable for DAILY type)
                    returned: on success
                    type: string
                    sample: SUNDAY
        freeform_tags:
            description:
                - "Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
                  Example: `{\\"bar-key\\": \\"value\\"}`"
            returned: on success
            type: dict
            sample: {'Department': 'Finance'}
        defined_tags:
            description:
                - "Defined tags for this resource. Each key is predefined and scoped to a namespace.
                  Example: `{\\"foo-namespace\\": {\\"bar-key\\": \\"value\\"}}`"
            returned: on success
            type: dict
            sample: {'Operations': {'CostCenter': 'US'}}
        system_tags:
            description:
                - "Usage of system tag keys. These predefined keys are scoped to namespaces.
                  Example: `{\\"orcl-cloud\\": {\\"free-tier-retained\\": \\"true\\"}}`"
            returned: on success
            type: dict
            sample: {}
    sample: {
        "id": "ocid1.resource.oc1..xxxxxxEXAMPLExxxxxx",
        "display_name": "display_name_example",
        "compartment_id": "ocid1.compartment.oc1..xxxxxxEXAMPLExxxxxx",
        "lifecycle_state": "CREATING",
        "time_created": "2013-10-20T19:20:30+01:00",
        "time_updated": "2013-10-20T19:20:30+01:00",
        "port_settings": {
            "scan_level": "NONE"
        },
        "agent_settings": {
            "scan_level": "NONE",
            "agent_configuration": {
                "vendor": "OCI",
                "cis_benchmark_settings": {
                    "scan_level": "NONE"
                },
                "endpoint_protection_settings": {
                    "scan_level": "NONE"
                }
            }
        },
        "schedule": {
            "type": "DAILY",
            "day_of_week": "SUNDAY"
        },
        "freeform_tags": {'Department': 'Finance'},
        "defined_tags": {'Operations': {'CostCenter': 'US'}},
        "system_tags": {}
    }
"""

from ansible.module_utils.basic import AnsibleModule
from ansible_collections.oracle.oci.plugins.module_utils import (
    oci_common_utils,
    oci_wait_utils,
)
from ansible_collections.oracle.oci.plugins.module_utils.oci_resource_utils import (
    OCIResourceHelperBase,
    get_custom_class,
)

try:
    from oci.vulnerability_scanning import VulnerabilityScanningClient
    from oci.vulnerability_scanning.models import CreateHostScanRecipeDetails
    from oci.vulnerability_scanning.models import UpdateHostScanRecipeDetails

    HAS_OCI_PY_SDK = True
except ImportError:
    HAS_OCI_PY_SDK = False


class HostScanRecipeHelperGen(OCIResourceHelperBase):
    """Supported operations: create, update, get, list and delete"""

    def get_module_resource_id_param(self):
        return "host_scan_recipe_id"

    def get_module_resource_id(self):
        return self.module.params.get("host_scan_recipe_id")

    def get_get_fn(self):
        return self.client.get_host_scan_recipe

    def get_resource(self):
        return oci_common_utils.call_with_backoff(
            self.client.get_host_scan_recipe,
            host_scan_recipe_id=self.module.params.get("host_scan_recipe_id"),
        )

    def get_required_kwargs_for_list(self):
        required_list_method_params = [
            "compartment_id",
        ]

        return dict(
            (param, self.module.params[param]) for param in required_list_method_params
        )

    def get_optional_kwargs_for_list(self):
        optional_list_method_params = ["display_name"]

        return dict(
            (param, self.module.params[param])
            for param in optional_list_method_params
            if self.module.params.get(param) is not None
            and (
                self._use_name_as_identifier()
                or (
                    not self.module.params.get("key_by")
                    or param in self.module.params.get("key_by")
                )
            )
        )

    def list_resources(self):

        required_kwargs = self.get_required_kwargs_for_list()
        optional_kwargs = self.get_optional_kwargs_for_list()
        kwargs = oci_common_utils.merge_dicts(required_kwargs, optional_kwargs)
        return oci_common_utils.list_all_resources(
            self.client.list_host_scan_recipes, **kwargs
        )

    def get_create_model_class(self):
        return CreateHostScanRecipeDetails

    def create_resource(self):
        create_details = self.get_create_model()
        return oci_wait_utils.call_and_wait(
            call_fn=self.client.create_host_scan_recipe,
            call_fn_args=(),
            call_fn_kwargs=dict(create_host_scan_recipe_details=create_details,),
            waiter_type=oci_wait_utils.WORK_REQUEST_WAITER_KEY,
            operation=oci_common_utils.CREATE_OPERATION_KEY,
            waiter_client=self.get_waiter_client(),
            resource_helper=self,
            wait_for_states=oci_common_utils.get_work_request_completed_states(),
        )

    def get_update_model_class(self):
        return UpdateHostScanRecipeDetails

    def update_resource(self):
        update_details = self.get_update_model()
        return oci_wait_utils.call_and_wait(
            call_fn=self.client.update_host_scan_recipe,
            call_fn_args=(),
            call_fn_kwargs=dict(
                host_scan_recipe_id=self.module.params.get("host_scan_recipe_id"),
                update_host_scan_recipe_details=update_details,
            ),
            waiter_type=oci_wait_utils.WORK_REQUEST_WAITER_KEY,
            operation=oci_common_utils.UPDATE_OPERATION_KEY,
            waiter_client=self.get_waiter_client(),
            resource_helper=self,
            wait_for_states=oci_common_utils.get_work_request_completed_states(),
        )

    def delete_resource(self):
        return oci_wait_utils.call_and_wait(
            call_fn=self.client.delete_host_scan_recipe,
            call_fn_args=(),
            call_fn_kwargs=dict(
                host_scan_recipe_id=self.module.params.get("host_scan_recipe_id"),
            ),
            waiter_type=oci_wait_utils.WORK_REQUEST_WAITER_KEY,
            operation=oci_common_utils.DELETE_OPERATION_KEY,
            waiter_client=self.get_waiter_client(),
            resource_helper=self,
            wait_for_states=oci_common_utils.get_work_request_completed_states(),
        )


HostScanRecipeHelperCustom = get_custom_class("HostScanRecipeHelperCustom")


class ResourceHelper(HostScanRecipeHelperCustom, HostScanRecipeHelperGen):
    pass


def main():
    module_args = oci_common_utils.get_common_arg_spec(
        supports_create=True, supports_wait=True
    )
    module_args.update(
        dict(
            display_name=dict(aliases=["name"], type="str"),
            compartment_id=dict(type="str"),
            port_settings=dict(
                type="dict",
                options=dict(
                    scan_level=dict(
                        type="str", required=True, choices=["NONE", "LIGHT", "STANDARD"]
                    )
                ),
            ),
            agent_settings=dict(
                type="dict",
                options=dict(
                    scan_level=dict(
                        type="str", required=True, choices=["NONE", "STANDARD"]
                    ),
                    agent_configuration=dict(
                        type="dict",
                        options=dict(
                            vendor=dict(type="str", required=True, choices=["OCI"]),
                            cis_benchmark_settings=dict(
                                type="dict",
                                options=dict(
                                    scan_level=dict(
                                        type="str",
                                        choices=["NONE", "LIGHT", "MEDIUM", "STRICT"],
                                    )
                                ),
                            ),
                            endpoint_protection_settings=dict(
                                type="dict",
                                options=dict(
                                    scan_level=dict(
                                        type="str", choices=["NONE", "STANDARD"]
                                    )
                                ),
                            ),
                        ),
                    ),
                ),
            ),
            schedule=dict(
                type="dict",
                options=dict(
                    type=dict(type="str", required=True, choices=["DAILY", "WEEKLY"]),
                    day_of_week=dict(
                        type="str",
                        choices=[
                            "SUNDAY",
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY",
                            "SATURDAY",
                        ],
                    ),
                ),
            ),
            freeform_tags=dict(type="dict"),
            defined_tags=dict(type="dict"),
            host_scan_recipe_id=dict(aliases=["id"], type="str"),
            state=dict(type="str", default="present", choices=["present", "absent"]),
        )
    )

    module = AnsibleModule(argument_spec=module_args, supports_check_mode=True)

    if not HAS_OCI_PY_SDK:
        module.fail_json(msg="oci python sdk required for this module.")

    resource_helper = ResourceHelper(
        module=module,
        resource_type="host_scan_recipe",
        service_client_class=VulnerabilityScanningClient,
        namespace="vulnerability_scanning",
    )

    result = dict(changed=False)

    if resource_helper.is_delete_using_name():
        result = resource_helper.delete_using_name()
    elif resource_helper.is_delete():
        result = resource_helper.delete()
    elif resource_helper.is_update_using_name():
        result = resource_helper.update_using_name()
    elif resource_helper.is_update():
        result = resource_helper.update()
    elif resource_helper.is_create():
        result = resource_helper.create()

    module.exit_json(**result)


if __name__ == "__main__":
    main()
