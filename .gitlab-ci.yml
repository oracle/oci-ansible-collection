stages:
  - quickcheck
  - integration_tests

variables:

before_script:
  - echo "Running jobs for $CI_COMMIT_REF_NAME in $(pwd)"

  - uname -a
  - export

  # Ensure oci config is setup correctly
  # extract key file from secret variable
  # see https://medium.com/@michalkalita/export-secret-file-to-gitlab-pipeline-75789eee35bd
  - env | grep CI
  - mkdir -p ~/.oci
  # user siva's private key
  - echo "$CI_OCI_API_KEY_FILE_BASE64" | base64 -di > .oci/oci_api_key.pem
  # user ansible-user's private key
  - echo "$CI_OCI_API_KEY_FILE_ANSIBLE_USER_BASE64" | base64 -di > .oci/oci_api_key_ansible_user.pem
  # all other variables in OCI SDK config is stored as Gitlab secret variables
  # and referenced in the .oci/config file
  - cat .oci/config | while read line; do echo $line | envsubst; done > ~/.oci/config
  - cat ~/.oci/config
  - cp .oci/*.pem ~/.oci/
  - source scripts/common-vars.sh
  - export integration_test_targets=$(find "$CI_PROJECT_DIR"/ansible_collections/oracle/oci -type d -name "oci_*" | sort)

after_script:
    # clean up all configuration artifacts so that the next run starts with a clean
    # slate
    - rm ~/.oci/config || true
    - rm ~/.oci/*.pem || true
    - rm -r ~/.oci || true


#############################################################################
# `quickcheck` stage jobs
#############################################################################

quickchecks:
  stage: quickcheck
  tags:
    - quickchecks
  script:
    - tox

.integration_tests_job_template: &integration_tests_job_def
  stage: integration_tests
  tags:
    - integration
  except:
    - tags
  script:
    - echo "All targets ${!targets}"
    - echo "Set no ${set_no}"
    - echo "Total number of sets ${total_target_sets}"
    - tox -e integration_tests -- "${!targets}" "$set_no" "$total_target_sets"
  retry: 2

# gitlab does not support dynamic job creation. So we will have to manually divide the integration tests
# into multiple jobs so that they can be run in parallel.
integration_tests_set_1:
  <<: *integration_tests_job_def
  variables:
    set_no: 0
    targets: "integration_test_targets"
    total_target_sets: 1