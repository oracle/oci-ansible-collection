<?xml version='1.0' encoding='UTF-8'?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.oracle.bmc.sdk</groupId>
  <artifactId>ansible-modules</artifactId>
  <version>0.2.0-SNAPSHOT</version>
  <name>Public Ansilbe Modules</name>
  <properties>
    <spec-temp-dir>${project.build.directory}/swagger</spec-temp-dir>
    <preferred-temp-dir>${project.build.directory}/preferred</preferred-temp-dir>
    <preprocessed-temp-dir>${project.build.directory}/preprocessed</preprocessed-temp-dir>
    <enabled-groups-dir>${project.basedir}/codegenConfig/enabledGroups</enabled-groups-dir>
    <feature-id-dir>${project.basedir}/codegenConfig/featureIds</feature-id-dir>
    <module-whitelist-file>${project.basedir}/module-whitelist.yaml</module-whitelist-file>
    <module-rename-file>${project.basedir}/module-rename-config.yaml</module-rename-file>
    <supplemental-examples-file>${project.basedir}/module-supplemental-x-examples.yaml</supplemental-examples-file>
    <inceptionYear>2016</inceptionYear>
    <collection-base-dir>ansible_collections/oracle/oci</collection-base-dir>
    <modules-output-directory>${collection-base-dir}/plugins/modules</modules-output-directory>
    <test-output-directory>${collection-base-dir}/tests/integration/targets/</test-output-directory>
    <coreservices-api-spec-spec-file>source/coreservices-api-spec-20160918.cond.yaml</coreservices-api-spec-spec-file>
    <identity-control-plane-api-spec-spec-file>source/identity-control-plane-api-spec-20160918.cond.yaml</identity-control-plane-api-spec-spec-file>
    <casper-api-spec-spec-file>source/casper-api.cond.yaml</casper-api-spec-spec-file>
    <oralb-api-spec-spec-file>source/spec-20170115.cond.yaml</oralb-api-spec-spec-file>
    <dbaas-api-spec-spec-file>source/dbaas-api-spec-20160918.cond.yaml</dbaas-api-spec-spec-file>
    <fss-api-spec-spec-file>fss-api-spec-20171215.yaml</fss-api-spec-spec-file>
    <hemlock-spec-spec-file>hemlock-api-20160918.yaml</hemlock-spec-spec-file>
    <email-api-spec-spec-file>source/email-api-spec.cond.yaml</email-api-spec-spec-file>
    <public-dns-api-spec-spec-file>source/public-dns-api-spec.cond.yaml</public-dns-api-spec-spec-file>
    <resource-query-service-spec-spec-file>rqs.yaml</resource-query-service-spec-spec-file>
    <clusters-api-spec-spec-file>source/clusters-api-spec.cond.yaml</clusters-api-spec-spec-file>
    <kms-api-spec-spec-file>kms-api-spec-20180608.yaml</kms-api-spec-spec-file>
    <announcements-service-spec-spec-file>source/announcement-service.cond.yaml</announcements-service-spec-spec-file>
    <healthchecks-api-spec-spec-file>ovp-api.yaml</healthchecks-api-spec-spec-file>
    <oci-waas-api-spec-spec-file>oci-waas-api-spec.cond.yaml</oci-waas-api-spec-spec-file>
    <rest-api-spec-spec-file>api.yaml</rest-api-spec-spec-file>
    <telemetry-public-api-spec-spec-file>source/telemetry-api.cond.yaml</telemetry-public-api-spec-spec-file>
    <ons-gateway-spec-spec-file>api.yaml</ons-gateway-spec-spec-file>
    <autoscaling-public-api-spec-spec-file>source/autoscaling-api-spec.cond.yaml</autoscaling-public-api-spec-spec-file>
    <maestro-spec-spec-file>api.yaml</maestro-spec-spec-file>
    <budgets-control-plane-spec-spec-file>budget.api.cond.yaml</budgets-control-plane-spec-spec-file>
    <quotas-control-plane-api-spec-spec-file>quotas-control-plane-api-spec-20181025.cond.yaml</quotas-control-plane-api-spec-spec-file>
    <dts-api-spec-spec-file>datats-customer-control-plane.cond.yaml</dts-api-spec-spec-file>
    <events-control-plane-spec-spec-file>source/events-control-plane-spec.cond.yaml</events-control-plane-spec-spec-file>
    <fn-api-spec-spec-file>source/functions-api-spec.cond.yaml</fn-api-spec-spec-file>
    <cec-public-spec-spec-file>source/api.cond.yaml</cec-public-spec-spec-file>
    <workrequests-api-spec-spec-file>workrequests-api-spec.cond.yaml</workrequests-api-spec-spec-file>
  </properties>
  <dependencies>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.commons</groupId>
      <artifactId>coreservices-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.identity</groupId>
      <artifactId>identity-control-plane-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.casper</groupId>
      <artifactId>casper-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.lb</groupId>
      <artifactId>oralb-api-spec</artifactId>
    </dependency>
    <!-- <dependency>
      <groupId>com.oracle.pic.dbaas</groupId>
      <artifactId>dbaas-api-spec</artifactId>
    </dependency> -->
    <dependency>
      <groupId>com.oracle.pic.ffsw</groupId>
      <artifactId>fss-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.sherlock</groupId>
      <artifactId>hemlock-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.email</groupId>
      <artifactId>email-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.dns.pub</groupId>
      <artifactId>public-dns-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.query</groupId>
      <artifactId>resource-query-service-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.clusters</groupId>
      <artifactId>clusters-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.kms</groupId>
      <artifactId>kms-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.announcements</groupId>
      <artifactId>announcements-service-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.oci</groupId>
      <artifactId>healthchecks-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.oci.waas</groupId>
      <artifactId>oci-waas-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.oss</groupId>
      <artifactId>rest-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.telemetry.api</groupId>
      <artifactId>telemetry-public-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.ons</groupId>
      <artifactId>ons-gateway-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.autoscaling.api</groupId>
      <artifactId>autoscaling-public-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.orchestration.orm</groupId>
      <artifactId>maestro-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.oci.usage.budgets</groupId>
      <artifactId>budgets-control-plane-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.oci.quotas</groupId>
      <artifactId>quotas-control-plane-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.rhino</groupId>
      <artifactId>dts-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.events</groupId>
      <artifactId>events-control-plane-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.functions</groupId>
      <artifactId>fn-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.cec.provisioning.controlplane</groupId>
      <artifactId>cec-public-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.commons.workrequests</groupId>
      <artifactId>workrequests-api-spec</artifactId>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>timestamp-property</id>
            <goals>
              <goal>timestamp-property</goal>
            </goals>
            <phase>validate</phase>
            <configuration>
              <name>current.year</name>
              <pattern>yyyy</pattern>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.10</version>
        <executions>
          <execution>
            <id>unpack-coreservices-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.commons</groupId>
                  <artifactId>coreservices-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/coreservices-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-identity-control-plane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.identity</groupId>
                  <artifactId>identity-control-plane-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/identity-control-plane-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-casper-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.casper</groupId>
                  <artifactId>casper-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/casper-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-oralb-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.lb</groupId>
                  <artifactId>oralb-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/oralb-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <!-- <execution>
            <id>unpack-dbaas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.dbaas</groupId>
                  <artifactId>dbaas-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/dbaas-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution> -->
          <execution>
            <id>unpack-fss-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.ffsw</groupId>
                  <artifactId>fss-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/fss-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-hemlock-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.sherlock</groupId>
                  <artifactId>hemlock-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/hemlock-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-email-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.email</groupId>
                  <artifactId>email-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/email-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-public-dns-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.dns.pub</groupId>
                  <artifactId>public-dns-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/public-dns-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-resource-query-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.query</groupId>
                  <artifactId>resource-query-service-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/resource-query-service-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-clusters-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.clusters</groupId>
                  <artifactId>clusters-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/clusters-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-kms-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.kms</groupId>
                  <artifactId>kms-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/kms-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-announcements-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.announcements</groupId>
                  <artifactId>announcements-service-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/announcements-service-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-healthchecks-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oci</groupId>
                  <artifactId>healthchecks-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/healthchecks-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-oci-waas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oci.waas</groupId>
                  <artifactId>oci-waas-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/oci-waas-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-rest-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.oss</groupId>
                  <artifactId>rest-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/rest-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-telemetry-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.telemetry.api</groupId>
                  <artifactId>telemetry-public-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/telemetry-public-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-ons-gateway-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.ons</groupId>
                  <artifactId>ons-gateway-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/ons-gateway-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-autoscaling-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.autoscaling.api</groupId>
                  <artifactId>autoscaling-public-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/autoscaling-public-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-maestro-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.orchestration.orm</groupId>
                  <artifactId>maestro-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/maestro-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-budgets-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oci.usage.budgets</groupId>
                  <artifactId>budgets-control-plane-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/budgets-control-plane-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-quotas-control-plane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oci.quotas</groupId>
                  <artifactId>quotas-control-plane-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/quotas-control-plane-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-dts-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.rhino</groupId>
                  <artifactId>dts-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/dts-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-events-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.events</groupId>
                  <artifactId>events-control-plane-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/events-control-plane-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-fn-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.functions</groupId>
                  <artifactId>fn-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/fn-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-cec-public-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.cec.provisioning.controlplane</groupId>
                  <artifactId>cec-public-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/cec-public-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-workrequests-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.commons.workrequests</groupId>
                  <artifactId>workrequests-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/workrequests-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.oracle.oci.sdk.utilities</groupId>
        <artifactId>spec-conditionals-preprocessor-plugin</artifactId>
        <version>1.0.6-SNAPSHOT</version>
        <executions>
          <execution>
            <id>spec-conditionals-prefer-coreservices-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/coreservices-api-spec/source/${coreservices-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/coreservices-api-spec/${coreservices-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/coreservices-api-spec/${coreservices-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-coreservices-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/coreservices-api-spec/${coreservices-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/coreservices-api-spec/${coreservices-api-spec-spec-file}</outputFile>
              
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-identity-control-plane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/identity-control-plane-api-spec/source/${identity-control-plane-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/identity-control-plane-api-spec/${identity-control-plane-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/identity-control-plane-api-spec/${identity-control-plane-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-identity-control-plane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/identity-control-plane-api-spec/${identity-control-plane-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/identity-control-plane-api-spec/${identity-control-plane-api-spec-spec-file}</outputFile>
              
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-casper-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/casper-api-spec/source/${casper-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/casper-api-spec/${casper-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/casper-api-spec/${casper-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-casper-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/casper-api-spec/${casper-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/casper-api-spec/${casper-api-spec-spec-file}</outputFile>
              
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-oralb-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/oralb-api-spec/source/${oralb-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/oralb-api-spec/${oralb-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/oralb-api-spec/${oralb-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-oralb-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/oralb-api-spec/${oralb-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/oralb-api-spec/${oralb-api-spec-spec-file}</outputFile>
              
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <!-- <execution>
            <id>spec-conditionals-prefer-dbaas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/dbaas-api-spec/source/${dbaas-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/dbaas-api-spec/${dbaas-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/dbaas-api-spec/${dbaas-api-spec-spec-file}</outputFile>
            </configuration>
          </execution> -->
          <!-- <execution>
            <id>spec-conditionals-preprocess-dbaas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/dbaas-api-spec/${dbaas-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/dbaas-api-spec/${dbaas-api-spec-spec-file}</outputFile>
              
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution> -->
          <execution>
            <id>spec-conditionals-prefer-fss-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/fss-api-spec/source/${fss-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/fss-api-spec/${fss-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/fss-api-spec/${fss-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-fss-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/fss-api-spec/${fss-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/fss-api-spec/${fss-api-spec-spec-file}</outputFile>
              
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-hemlock-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/hemlock-spec/source/${hemlock-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/hemlock-spec/${hemlock-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/hemlock-spec/${hemlock-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-hemlock-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/hemlock-spec/${hemlock-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/hemlock-spec/${hemlock-spec-spec-file}</outputFile>
              
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-email-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/email-api-spec/source/${email-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/email-api-spec/${email-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/email-api-spec/${email-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-email-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/email-api-spec/${email-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/email-api-spec/${email-api-spec-spec-file}</outputFile>
              
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-public-dns-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/public-dns-api-spec/source/${public-dns-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/public-dns-api-spec/${public-dns-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/public-dns-api-spec/${public-dns-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-public-dns-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/public-dns-api-spec/${public-dns-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/public-dns-api-spec/${public-dns-api-spec-spec-file}</outputFile>
              
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-resource-query-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/resource-query-service-spec/source/${resource-query-service-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/resource-query-service-spec/${resource-query-service-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/resource-query-service-spec/${resource-query-service-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-resource-query-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/resource-query-service-spec/${resource-query-service-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/resource-query-service-spec/${resource-query-service-spec-spec-file}</outputFile>
              
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-clusters-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/clusters-api-spec/source/${clusters-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/clusters-api-spec/${clusters-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/clusters-api-spec/${clusters-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-clusters-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/clusters-api-spec/${clusters-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/clusters-api-spec/${clusters-api-spec-spec-file}</outputFile>
              
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-kms-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/kms-api-spec/source/${kms-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/kms-api-spec/${kms-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/kms-api-spec/${kms-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-kms-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/kms-api-spec/${kms-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/kms-api-spec/${kms-api-spec-spec-file}</outputFile>
              
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-announcements-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/announcements-service-spec/source/${announcements-service-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/announcements-service-spec/${announcements-service-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/announcements-service-spec/${announcements-service-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-announcements-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/announcements-service-spec/${announcements-service-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/announcements-service-spec/${announcements-service-spec-spec-file}</outputFile>
              
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-healthchecks-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/healthchecks-api-spec/source/${healthchecks-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/healthchecks-api-spec/${healthchecks-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/healthchecks-api-spec/${healthchecks-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-healthchecks-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/healthchecks-api-spec/${healthchecks-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/healthchecks-api-spec/${healthchecks-api-spec-spec-file}</outputFile>
              
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-oci-waas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/oci-waas-api-spec/source/${oci-waas-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/oci-waas-api-spec/${oci-waas-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/oci-waas-api-spec/${oci-waas-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-oci-waas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/oci-waas-api-spec/${oci-waas-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/oci-waas-api-spec/${oci-waas-api-spec-spec-file}</outputFile>
              
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-rest-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/rest-api-spec/source/${rest-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/rest-api-spec/${rest-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/rest-api-spec/${rest-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-rest-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/rest-api-spec/${rest-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/rest-api-spec/${rest-api-spec-spec-file}</outputFile>
              
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-telemetry-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/telemetry-public-api-spec/source/${telemetry-public-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/telemetry-public-api-spec/${telemetry-public-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/telemetry-public-api-spec/${telemetry-public-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-telemetry-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/telemetry-public-api-spec/${telemetry-public-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/telemetry-public-api-spec/${telemetry-public-api-spec-spec-file}</outputFile>
              
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-ons-gateway-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/ons-gateway-spec/source/${ons-gateway-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/ons-gateway-spec/${ons-gateway-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/ons-gateway-spec/${ons-gateway-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-ons-gateway-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/ons-gateway-spec/${ons-gateway-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/ons-gateway-spec/${ons-gateway-spec-spec-file}</outputFile>
              
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-autoscaling-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/autoscaling-public-api-spec/source/${autoscaling-public-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/autoscaling-public-api-spec/${autoscaling-public-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/autoscaling-public-api-spec/${autoscaling-public-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-autoscaling-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/autoscaling-public-api-spec/${autoscaling-public-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/autoscaling-public-api-spec/${autoscaling-public-api-spec-spec-file}</outputFile>
              
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-maestro-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/maestro-spec/source/${maestro-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/maestro-spec/${maestro-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/maestro-spec/${maestro-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-maestro-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/maestro-spec/${maestro-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/maestro-spec/${maestro-spec-spec-file}</outputFile>
              
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-budgets-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/budgets-control-plane-spec/source/${budgets-control-plane-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/budgets-control-plane-spec/${budgets-control-plane-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/budgets-control-plane-spec/${budgets-control-plane-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-budgets-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/budgets-control-plane-spec/${budgets-control-plane-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/budgets-control-plane-spec/${budgets-control-plane-spec-spec-file}</outputFile>
              
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-quotas-control-plane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/quotas-control-plane-api-spec/source/${quotas-control-plane-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/quotas-control-plane-api-spec/${quotas-control-plane-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/quotas-control-plane-api-spec/${quotas-control-plane-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-quotas-control-plane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/quotas-control-plane-api-spec/${quotas-control-plane-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/quotas-control-plane-api-spec/${quotas-control-plane-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-dts-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/dts-api-spec/source/${dts-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/dts-api-spec/${dts-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/dts-api-spec/${dts-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-dts-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/dts-api-spec/${dts-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/dts-api-spec/${dts-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-events-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/events-control-plane-spec/source/${events-control-plane-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/events-control-plane-spec/${events-control-plane-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/events-control-plane-spec/${events-control-plane-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-events-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/events-control-plane-spec/${events-control-plane-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/events-control-plane-spec/${events-control-plane-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-fn-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/fn-api-spec/source/${fn-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/fn-api-spec/${fn-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/fn-api-spec/${fn-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-fn-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/fn-api-spec/${fn-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/fn-api-spec/${fn-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-cec-public-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/cec-public-spec/source/${cec-public-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/cec-public-spec/${cec-public-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/cec-public-spec/${cec-public-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-cec-public-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/cec-public-spec/${cec-public-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/cec-public-spec/${cec-public-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-workrequests-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/workrequests-api-spec/source/${workrequests-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/workrequests-api-spec/${workrequests-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/workrequests-api-spec/${workrequests-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-workrequests-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/workrequests-api-spec/${workrequests-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/workrequests-api-spec/${workrequests-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.oracle.bmc.sdk</groupId>
        <artifactId>bmc-sdk-swagger-maven-plugin</artifactId>
        <version>1.105-SNAPSHOT</version>
        <configuration>
          <isTestGenerationEnabled>false</isTestGenerationEnabled>
          <testOutputDir>${test-output-directory}</testOutputDir>
          <additionalProperties>
            <moduleWhitelistPath>${module-whitelist-file}</moduleWhitelistPath>
            <moduleRenameConfigPath>${module-rename-file}</moduleRenameConfigPath>
            <supplementalExamplesConfigPath>${supplemental-examples-file}</supplementalExamplesConfigPath>
          </additionalProperties>
        </configuration>
        <executions>
          <execution>
            <id>ansible-modules-identity-control-plane-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-ansible-modules</language>
              <specPath>${preprocessed-temp-dir}/identity-control-plane-api-spec/${identity-control-plane-api-spec-spec-file}</specPath>
              <outputDir>${modules-output-directory}</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>identity</specName>
                <endpoint>https://identity.{domain}</endpoint>
              </additionalProperties>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>ansible-modules-coreservices-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-ansible-modules</language>
              <specPath>${preprocessed-temp-dir}/coreservices-api-spec/${coreservices-api-spec-spec-file}</specPath>
              <outputDir>${modules-output-directory}</outputDir>
              <testOutputDir>${test-output-directory}</testOutputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>core</specName>
                <endpoint>https://iaas.{domain}</endpoint>
              </additionalProperties>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>ansible-modules-casper-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-ansible-modules</language>
              <specPath>${preprocessed-temp-dir}/casper-api-spec/${casper-api-spec-spec-file}</specPath>
              <outputDir>${modules-output-directory}</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>object_storage</specName>
                <generateInitFile>false</generateInitFile>
                <endpoint>https://objectstorage.{domain}</endpoint>
              </additionalProperties>
              <isTestGenerationEnabled>false</isTestGenerationEnabled>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>ansible-modules-oralb-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-ansible-modules</language>
              <specPath>${preprocessed-temp-dir}/oralb-api-spec/${oralb-api-spec-spec-file}</specPath>
              <outputDir>${modules-output-directory}</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>load_balancer</specName>
                <generateInitFile>true</generateInitFile>
                <endpoint>https://iaas.{domain}</endpoint>
              </additionalProperties>
              <isTestGenerationEnabled>false</isTestGenerationEnabled>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <!-- <execution>
            <id>ansible-modules-dbaas-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-ansible-modules</language>
              <specPath>${preprocessed-temp-dir}/dbaas-api-spec/${dbaas-api-spec-spec-file}</specPath>
              <outputDir>${modules-output-directory}</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>database</specName>
                <generateInitFile>true</generateInitFile>
                <endpoint>https://database.{domain}</endpoint>
              </additionalProperties>
              <isTestGenerationEnabled>false</isTestGenerationEnabled>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution> -->
          <execution>
            <id>ansible-modules-fss-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-ansible-modules</language>
              <specPath>${preprocessed-temp-dir}/fss-api-spec/${fss-api-spec-spec-file}</specPath>
              <outputDir>${modules-output-directory}</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>file_storage</specName>
                <generateInitFile>true</generateInitFile>
                <endpoint>https://filestorage.{domain}</endpoint>
              </additionalProperties>
              <isTestGenerationEnabled>false</isTestGenerationEnabled>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>ansible-modules-hemlock-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-ansible-modules</language>
              <specPath>${preprocessed-temp-dir}/hemlock-spec/${hemlock-spec-spec-file}</specPath>
              <outputDir>${modules-output-directory}</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>audit</specName>
                <generateInitFile>true</generateInitFile>
                <endpoint>https://audit.{domain}</endpoint>
              </additionalProperties>
              <isTestGenerationEnabled>false</isTestGenerationEnabled>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>ansible-modules-email-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-ansible-modules</language>
              <specPath>${preprocessed-temp-dir}/email-api-spec/${email-api-spec-spec-file}</specPath>
              <outputDir>${modules-output-directory}</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>email</specName>
                <generateInitFile>true</generateInitFile>
                <endpoint>https://email.{domain}</endpoint>
              </additionalProperties>
              <isTestGenerationEnabled>false</isTestGenerationEnabled>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
         <execution>
           <id>ansible-modules-public-dns-api-spec</id>
           <phase>compile</phase>
           <goals>
             <goal>generate</goal>
           </goals>
           <configuration>
             <language>oracle-ansible-modules</language>
             <specPath>${preprocessed-temp-dir}/public-dns-api-spec/${public-dns-api-spec-spec-file}</specPath>
             <outputDir>${modules-output-directory}</outputDir>
             <basePackage>OCI</basePackage>
             <specGenerationType>PUBLIC</specGenerationType>
             <additionalProperties>
               <specName>dns</specName>
               <generateInitFile>true</generateInitFile>
               <endpoint>https://dns.{domain}</endpoint>
             </additionalProperties>
              <isTestGenerationEnabled>false</isTestGenerationEnabled>
             <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
           </configuration>
         </execution>
          <execution>
            <id>ansible-modules-resource-query-service-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-ansible-modules</language>
              <specPath>${preprocessed-temp-dir}/resource-query-service-spec/${resource-query-service-spec-spec-file}</specPath>
              <outputDir>${modules-output-directory}</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>resource_search</specName>
                <generateInitFile>true</generateInitFile>
                <endpoint>https://query.{domain}</endpoint>
              </additionalProperties>
              <isTestGenerationEnabled>false</isTestGenerationEnabled>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>ansible-modules-clusters-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-ansible-modules</language>
              <specPath>${preprocessed-temp-dir}/clusters-api-spec/${clusters-api-spec-spec-file}</specPath>
              <outputDir>${modules-output-directory}</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>container_engine</specName>
                <generateInitFile>true</generateInitFile>
                <endpoint>https://containerengine.{domain}</endpoint>
              </additionalProperties>
              <isTestGenerationEnabled>false</isTestGenerationEnabled>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>ansible-modules-kms-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-ansible-modules</language>
              <specPath>${preprocessed-temp-dir}/kms-api-spec/${kms-api-spec-spec-file}</specPath>
              <outputDir>${modules-output-directory}</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>key_management</specName>
                <generateInitFile>true</generateInitFile>
                <endpoint>https://kms.{domain}</endpoint>
                <isRegionalClient.kms_crypto>false</isRegionalClient.kms_crypto>
                <isRegionalClient.kms_management>false</isRegionalClient.kms_management>
              </additionalProperties>
              <isTestGenerationEnabled>false</isTestGenerationEnabled>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>ansible-modules-announcements-service-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-ansible-modules</language>
              <specPath>${preprocessed-temp-dir}/announcements-service-spec/${announcements-service-spec-spec-file}</specPath>
              <outputDir>${modules-output-directory}</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>announcements_service</specName>
                <generateInitFile>true</generateInitFile>
                <endpoint>https://announcements.{domain}</endpoint>
              </additionalProperties>
              <isTestGenerationEnabled>false</isTestGenerationEnabled>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>ansible-modules-oci-waas-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-ansible-modules</language>
              <specPath>${preprocessed-temp-dir}/oci-waas-api-spec/${oci-waas-api-spec-spec-file}</specPath>
              <outputDir>${modules-output-directory}</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>waas</specName>
                <generateInitFile>true</generateInitFile>
                <endpoint>https://waas.{domain}</endpoint>
              </additionalProperties>
              <isTestGenerationEnabled>false</isTestGenerationEnabled>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>ansible-modules-healthchecks-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-ansible-modules</language>
              <specPath>${preprocessed-temp-dir}/healthchecks-api-spec/${healthchecks-api-spec-spec-file}</specPath>
              <outputDir>${modules-output-directory}</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>healthchecks</specName>
                <generateInitFile>true</generateInitFile>
                <endpoint>https://healthchecks.{domain}</endpoint>
              </additionalProperties>
              <isTestGenerationEnabled>false</isTestGenerationEnabled>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>ansible-modules-rest-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-ansible-modules</language>
              <specPath>${preprocessed-temp-dir}/rest-api-spec/${rest-api-spec-spec-file}</specPath>
              <outputDir>${modules-output-directory}</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>streaming</specName>
                <generateInitFile>true</generateInitFile>
                <endpoint>https://streams.{domain}</endpoint>
              </additionalProperties>
              <isTestGenerationEnabled>false</isTestGenerationEnabled>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>ansible-modules-telemetry-public-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-ansible-modules</language>
              <specPath>${preprocessed-temp-dir}/telemetry-public-api-spec/${telemetry-public-api-spec-spec-file}</specPath>
              <outputDir>${modules-output-directory}</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>monitoring</specName>
                <generateInitFile>true</generateInitFile>
                <endpoint>https://telemetry.{domain}</endpoint>
              </additionalProperties>
              <isTestGenerationEnabled>false</isTestGenerationEnabled>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>ansible-modules-ons-gateway-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-ansible-modules</language>
              <specPath>${preprocessed-temp-dir}/ons-gateway-spec/${ons-gateway-spec-spec-file}</specPath>
              <outputDir>${modules-output-directory}</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>ons</specName>
                <generateInitFile>true</generateInitFile>
                <endpoint>https://notification.{domain}</endpoint>
              </additionalProperties>
              <isTestGenerationEnabled>false</isTestGenerationEnabled>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>ansible-modules-autoscaling-public-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-ansible-modules</language>
              <specPath>${preprocessed-temp-dir}/autoscaling-public-api-spec/${autoscaling-public-api-spec-spec-file}</specPath>
              <outputDir>${modules-output-directory}</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>autoscaling</specName>
                <generateInitFile>true</generateInitFile>
                <endpoint>None</endpoint>
              </additionalProperties>
              <isTestGenerationEnabled>false</isTestGenerationEnabled>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>ansible-modules-maestro-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-ansible-modules</language>
              <specPath>${preprocessed-temp-dir}/maestro-spec/${maestro-spec-spec-file}</specPath>
              <outputDir>${modules-output-directory}</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>resource_manager</specName>
                <generateInitFile>true</generateInitFile>
                <endpoint>https://resourcemanager.{domain}</endpoint>
              </additionalProperties>
              <isTestGenerationEnabled>false</isTestGenerationEnabled>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>ansible-modules-budgets-control-plane-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-ansible-modules</language>
              <specPath>${preprocessed-temp-dir}/budgets-control-plane-spec/${budgets-control-plane-spec-spec-file}</specPath>
              <outputDir>${modules-output-directory}</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>budget</specName>
                <generateInitFile>true</generateInitFile>
              </additionalProperties>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>ansible-modules-quotas-control-plane-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-ansible-modules</language>
              <specPath>${preprocessed-temp-dir}/quotas-control-plane-api-spec/${quotas-control-plane-api-spec-spec-file}</specPath>
              <outputDir>${modules-output-directory}</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>limits</specName>
                <generateInitFile>true</generateInitFile>
              </additionalProperties>
              <isTestGenerationEnabled>false</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>ansible-modules-dts-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-ansible-modules</language>
              <specPath>${preprocessed-temp-dir}/dts-api-spec/${dts-api-spec-spec-file}</specPath>
              <outputDir>${modules-output-directory}</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>dts</specName>
                <generateInitFile>true</generateInitFile>
              </additionalProperties>
              <isTestGenerationEnabled>false</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>ansible-modules-events-control-plane-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-ansible-modules</language>
              <specPath>${preprocessed-temp-dir}/events-control-plane-spec/${events-control-plane-spec-spec-file}</specPath>
              <outputDir>${modules-output-directory}</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>events</specName>
                <generateInitFile>true</generateInitFile>
              </additionalProperties>
              <isTestGenerationEnabled>false</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>ansible-modules-fn-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-ansible-modules</language>
              <specPath>${preprocessed-temp-dir}/fn-api-spec/${fn-api-spec-spec-file}</specPath>
              <outputDir>${modules-output-directory}</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>functions</specName>
                <generateInitFile>true</generateInitFile>
              </additionalProperties>
              <isTestGenerationEnabled>false</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>ansible-modules-cec-public-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-ansible-modules</language>
              <specPath>${preprocessed-temp-dir}/cec-public-spec/${cec-public-spec-spec-file}</specPath>
              <outputDir>${modules-output-directory}</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>oce</specName>
                <generateInitFile>true</generateInitFile>
              </additionalProperties>
              <isTestGenerationEnabled>false</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>ansible-modules-workrequests-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-ansible-modules</language>
              <specPath>${preprocessed-temp-dir}/workrequests-api-spec/${workrequests-api-spec-spec-file}</specPath>
              <outputDir>${modules-output-directory}</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>work_requests</specName>
                <generateInitFile>true</generateInitFile>
              </additionalProperties>
              <isTestGenerationEnabled>false</isTestGenerationEnabled>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>exec-maven-plugin</artifactId>
        <groupId>org.codehaus.mojo</groupId>
        <version>1.6.0</version>
        <executions>
          <execution>
            <id>ansible-modules-clean-generated-modules</id>
            <phase>clean</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>${basedir}/scripts/clean_generated_modules.py</executable>
              <arguments>
                <argument>${modules-output-directory}/oci_*.py</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>ansible-modules-format-descriptions</id>
            <phase>compile</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>${basedir}/scripts/format_generated_descriptions.py</executable>
              <arguments>
                <argument>${modules-output-directory}/oci_*.py</argument>
                <argument>${basedir}/module-whitelist.yaml</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>ansible-modules-format-code</id>
            <phase>package</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>scripts/run-black</executable>
              <arguments>
                <argument>${modules-output-directory}</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.0.0</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>${test-output-directory}</directory>
              <includes>
                <include>oci_generated*</include>
                <include>oci_generated*/tasks/*</include>
                <include>oci_generated*/tasks</include>
                <include>oci_generated*/meta/*</include>
                <include>oci_generated*/meta</include>
                <include>oci_generated*/vars</include>
              </includes>
              <excludes>
                <include>oci_generated*/tasks/main.yaml</include>
                <include>oci_generated*/vars/main.yaml</include>
              </excludes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>2.7.4</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>2.7.4</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>2.7.4</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.dataformat</groupId>
        <artifactId>jackson-dataformat-yaml</artifactId>
        <version>2.7.4</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.commons</groupId>
        <artifactId>coreservices-api-spec</artifactId>
        <version>0.2.953</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.identity</groupId>
        <artifactId>identity-control-plane-api-spec</artifactId>
        <version>0.4.105</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.casper</groupId>
        <artifactId>casper-api-spec</artifactId>
        <version>1.1.237</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.lb</groupId>
        <artifactId>oralb-api-spec</artifactId>
        <version>2.0.2</version>
      </dependency>
      <!-- <dependency>
        <groupId>com.oracle.pic.dbaas</groupId>
        <artifactId>dbaas-api-spec</artifactId>
        <version>0.1.98</version>
      </dependency> -->
      <dependency>
        <groupId>com.oracle.pic.sherlock</groupId>
        <artifactId>hemlock-spec</artifactId>
        <version>0.1.9</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.dns.pub</groupId>
        <artifactId>public-dns-api-spec</artifactId>
        <version>2.0.28</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.ffsw</groupId>
        <artifactId>fss-api-spec</artifactId>
        <version>0.0.14</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.email</groupId>
        <artifactId>email-api-spec</artifactId>
        <version>1.0.4</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.clusters</groupId>
        <artifactId>clusters-api-spec</artifactId>
        <version>1.0.12-20190305.195020-13</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.query</groupId>
        <artifactId>resource-query-service-spec</artifactId>
        <version>0.0.8</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.kms</groupId>
        <artifactId>kms-api-spec</artifactId>
        <version>0.1.94</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.announcements</groupId>
        <artifactId>announcements-service-spec</artifactId>
        <version>1.0.9</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oci</groupId>
        <artifactId>healthchecks-api-spec</artifactId>
        <version>0.0.1-20181210.154927-6</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oci.waas</groupId>
        <artifactId>oci-waas-api-spec</artifactId>
        <version>1.0.410</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.oss</groupId>
        <artifactId>rest-api-spec</artifactId>
        <version>0.1.250</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.telemetry.api</groupId>
        <artifactId>telemetry-public-api-spec</artifactId>
        <version>1.0.2</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.ons</groupId>
        <artifactId>ons-gateway-spec</artifactId>
        <version>1.0.1016</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.autoscaling.api</groupId>
        <artifactId>autoscaling-public-api-spec</artifactId>
        <version>0.0.49</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.orchestration.orm</groupId>
        <artifactId>maestro-spec</artifactId>
        <version>0.0.9</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oci.usage.budgets</groupId>
        <artifactId>budgets-control-plane-spec</artifactId>
        <version>2.3.3</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oci.quotas</groupId>
        <artifactId>quotas-control-plane-api-spec</artifactId>
        <version>0.0.10</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.rhino</groupId>
        <artifactId>dts-api-spec</artifactId>
        <version>1.0.009</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.events</groupId>
        <artifactId>events-control-plane-spec</artifactId>
        <version>0.1.25</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.functions</groupId>
        <artifactId>fn-api-spec</artifactId>
        <version>1.1.0</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.cec.provisioning.controlplane</groupId>
        <artifactId>cec-public-spec</artifactId>
        <version>19.32.36</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.commons.workrequests</groupId>
        <artifactId>workrequests-api-spec</artifactId>
        <version>0.0.17</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
</project>
