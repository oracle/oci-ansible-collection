---
# Copyright (c) 2018, 2019 Oracle and/or its affiliates.
# This software is made available to you under the terms of the GPL 3.0 license or the Apache 2.0 license.
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
# Apache License v2.0
# See LICENSE.TXT for details.

- name: Launch a compute instance and connect to it using SSH
  hosts: localhost
  collections:
    - oracle.oci
  vars:
    # common networking definitions
    quad_zero_route: "0.0.0.0/0"
    TCP_protocol: "6"
    SSH_port: "22"

    vcn_name: "mytestvcn"
    vcn_cidr_block: "10.0.0.0/16"
    vcn_dns_label: "mytestvcn"

    ig_name: "myinternetgatewayformytestvcn"

    route_table_name: "myroutetable"
    # route all internet access to our Internet Gateway
    route_table_rules:
        - cidr_block: "{{ quad_zero_route }}"
          network_entity_id: "{{ ig_id }}"


    subnet_cidr: "10.0.0.48/28"
    subnet_name: "mytestsubnet"
    subnet_dns_label: "mytestsubnet"

    securitylist_name: "mysecuritylist"

    instance_shape: "{{ lookup('env', 'SAMPLE_INSTANCE_SHAPE') | default('VM.Standard2.1', true) }}"
    instance_hostname: "mytestinstance"

    #########################################
    # Tenancy specific configuration
    # *Note* - Override the following variables based on your tenancy
    # or set a valid value for the corresponding environment variable
    #########################################
    instance_ad: "{{ lookup('env', 'SAMPLE_AD_NAME') }}"
    instance_compartment: "{{ lookup('env', 'SAMPLE_COMPARTMENT_OCID') }}"
    # provide an "OL" image
    # find OL image ocids per region here: https://docs.cloud.oracle.com/iaas/images/image/501c6e22-4dc6-4e99-b045-cae47aae343f/
    instance_image: "{{ lookup('env', 'SAMPLE_IMAGE_OCID') }}"

  tasks:
    - import_tasks: setup.yaml

    - name: Launch an instance
      oci_compute_instance:
        availability_domain: "{{ instance_ad }}"
        compartment_id: "{{ instance_compartment }}"
        name: "my_test_instance"
        image_id: "{{ instance_image }}"
        shape: "{{ instance_shape }}"
        create_vnic_details:
            assign_public_ip: True
            hostname_label: "{{ instance_hostname }}"
            subnet_id: "{{ instance_subnet_id }}"
        metadata:
            ssh_authorized_keys: "{{ lookup('file',  my_test_public_key ) }}"
      register: result

    - name: Print instance details
      debug:
        msg: "Launched a new instance {{ result }}"
    - set_fact:
        instance_id: "{{result.instance.id }}"

    - name: Get the VNIC attachment details of instance
      oci_compute_vnic_attachment_facts:
        compartment_id: "{{ instance_compartment }}"
        instance_id: "{{ instance_id }}"
      register: result

    - name: Get details of the VNIC
      oci_network_vnic_facts:
        id: "{{ result.vnic_attachments[0].vnic_id }}"
      register: result
    - set_fact:
        instance_public_ip: "{{result.vnic.public_ip}}"

    - name: Print the public ip of the newly launched instance
      debug:
        msg: "Public IP of launched instance {{ instance_public_ip }}"

    - name: Wait (upto 5 minutes) for port 22 to become open
      wait_for:
        port: 22
        host: '{{ instance_public_ip }}'
        state: started
        delay: 10
      vars:
        ansible_connection: local

    - name: Attempt a ssh connection to the newly launced instance
      # Use "opc" user as this is an OL image
      # Disable SSH's strict host key checking just for this one command invocation
      command: ssh -o "UserKnownHostsFile=/dev/null" -o "StrictHostKeyChecking=no" -i {{ temp_certificates_path }}/private_key.pem opc@{{ instance_public_ip }} uname -a
      retries: 3
      delay: 5
      register: result
      until: result.rc == 0

    - name: Print SSH response from launched instance
      debug:
        msg: "SSH response from instance -> {{ result.stdout_lines }}"

    - import_tasks: teardown.yaml
