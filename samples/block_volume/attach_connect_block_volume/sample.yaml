---
# Copyright (c) 2020, 2021 Oracle and/or its affiliates.
# This software is made available to you under the terms of the GPL 3.0 license or the Apache 2.0 license.
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
# Apache License v2.0
# See LICENSE.TXT for details.

- name: Create a block volume, attach to and connect to it from a compute instance
  hosts: localhost
  collections:
    - oracle.oci
  vars:
    # common networking definitions
    quad_zero_route: "0.0.0.0/0"
    TCP_protocol: "6"
    SSH_port: "22"

    vcn_name: "mytestvcn"
    vcn_cidr_block: "10.0.0.0/16"
    vcn_dns_label: "mytestvcn"

    ig_name: "myinternetgatewayformytestvcn"

    route_table_name: "myroutetable"
    # route all internet access to our Internet Gateway
    route_table_rules:
        - cidr_block: "{{ quad_zero_route }}"
          network_entity_id: "{{ ig_id }}"


    subnet_cidr: "10.0.0.48/28"
    subnet_name: "mytestsubnet"
    subnet_dns_label: "mytestsubnet"

    securitylist_name: "mysecuritylist"

    instance_shape: "{{ lookup('env', 'SAMPLE_INSTANCE_SHAPE') | default('VM.Standard2.1', true) }}"
    instance_hostname: "mytestinstance"

    volume_name: "my_test_volume"

    #########################################
    # Tenancy specific configuration
    # *Note* - Override the following variables based on your tenancy
    # or set a valid value for the corresponding environment variable
    #########################################
    instance_ad: "{{ lookup('env', 'SAMPLE_AD_NAME') }}"
    instance_compartment: "{{ lookup('env', 'SAMPLE_COMPARTMENT_OCID') }}"
    # provide an OL image
    instance_image: "{{ lookup('env', 'SAMPLE_IMAGE_OCID') }}"

  tasks:
    - import_tasks: setup.yaml

    - name: Create a new block volume
      oci_blockstorage_volume:
        availability_domain: "{{ instance_ad }}"
        compartment_id: "{{ instance_compartment }}"
        name: "{{ volume_name }}"
      register: result
    - set_fact:
        volume_id: "{{result.volume.id }}"

    - name: attach the volume to the instance
      oci_compute_volume_attachment:
        instance_id: "{{ instance_id }}"
        type: "iscsi"
        volume_id: "{{ volume_id }}"
        compartment_id: "{{ instance_compartment }}"
      register: result
    - set_fact:
        volume_attachment_details: "{{ result.volume_attachment }}"

    ########## Run iscsiadm commands in the compute instance to attach and connect to the block storage volme ##########
    - name: Register the volume in the instance with iscsiadm
      # iscsiadm -m node -o new -T <volume IQN> -p <iSCSI IP address>:<iSCSI port>
      command: "ssh {{ common_ssh_args }} sudo iscsiadm -m node -o new -T {{ volume_attachment_details.iqn }} -p {{ volume_attachment_details.ipv4 }}:{{ volume_attachment_details.port }}"
      register: result

    - name: Configure iSCSI to automatically connect to the authenticated block storage volumes after a reboot
      # iscsiadm -m node -T <volume IQN> -o update -n node.startup -v automatic
      command: "ssh {{ common_ssh_args }} sudo iscsiadm -m node -T {{ volume_attachment_details.iqn }} -o update -n node.startup -v automatic"

    - name: Login to the iSCSI endpoint
      # iscsiadm -m node -T <volume IQN> -p <iSCSI IP address>:<iSCSI port> -l
      # The volume attachment in this sample doesn't have CHAP details configured. If CHAP was enabled,
      # authenticate the iSCSI connection with the volume's CHAP credentials in this task.
      command: "ssh {{ common_ssh_args }} sudo iscsiadm -m node -T {{ volume_attachment_details.iqn }} -p {{ volume_attachment_details.ipv4 }}:{{ volume_attachment_details.port }}  -l"

    - name: Check if the iSCSI device is mountable on the instance
      command: "ssh {{ common_ssh_args }} sudo fdisk -l"
      register: result
    - debug: msg="{{result.stdout}}"
    - assert:
        that:
          - "'Disk /dev/sdb' in result.stdout"
        fail_msg: "'Disk /dev/sdb' not returned in fdisk output. The block storage volume was not attached."
        success_msg: "'Disk /dev/sdb' returned in fdisk output. The block storage volume attached."

    - import_tasks: teardown.yaml
