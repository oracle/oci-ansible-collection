---
# Copyright (c) 2018, 2019, 2020 Oracle and/or its affiliates.
# This software is made available to you under the terms of the GPL 3.0 license or the Apache 2.0 license.
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
# Apache License v2.0
# See LICENSE.TXT for details.

- name: Check pre-requisites
  fail:
    msg: "Environment variable {{item}} not set. Please declare an environment variable with an appropriate value for the sample to work."
  when: item not in ansible_env
  with_items:
    - "SAMPLE_COMPARTMENT_OCID"
    - "SAMPLE_AD1_NAME"
    - "SAMPLE_AD2_NAME"
    - "SAMPLE_TENANCY_OCID"

- name: Create a VCN
  oci_network_vcn:
    compartment_id: "{{ sample_compartment }}"
    display_name: "{{ vcn_name }}"
    cidr_block: "{{ vcn_cidr_block }}"
    dns_label: "{{ vcn_dns_label }}"
  register: result
- debug:
    msg: "{{ result }}"
- set_fact:
    vcn_id: "{{ result.vcn.id }}"
    default_route_table_id: "{{ result.vcn.default_route_table_id }}"
    default_security_list_id: "{{ result.vcn.default_security_list_id }}"

- name: Create two private subnets with default values for route table, security list & DHCP options.
  oci_network_subnet:
    availability_domain: "{{ item.ad }}"
    cidr_block: "{{ item.cidr }}"
    compartment_id: "{{ sample_compartment }}"
    display_name: "{{ item.name }}"
    prohibit_public_ip_on_vnic: true
    vcn_id: '{{ vcn_id }}'
    dns_label: "{{ item.label }}"
  loop:
    - { ad: '{{ ad1 }}', cidr: '{{ subnet1_cidr }}', name: '{{ subnet1_name }}', label: '{{ subnet1_dns_label }}' }
    - { ad: '{{ ad2 }}', cidr: '{{ subnet2_cidr }}', name: '{{ subnet2_name }}', label: '{{ subnet2_dns_label }}' }
  register: result
- debug:
    msg: "{{ result }}"
- set_fact:
    ad1_subnet_id: "{{ result.results[0].subnet.id }}"
    ad2_subnet_id: "{{ result.results[1].subnet.id }}"
